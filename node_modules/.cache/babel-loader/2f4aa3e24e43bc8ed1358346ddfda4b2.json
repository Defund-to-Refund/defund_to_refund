{"ast":null,"code":"import { Transform } from \"./transform\";\nimport { FactorRange } from \"../ranges/factor_range\";\nimport { isNumber, isArrayableOf } from \"../../core/util/types\";\nimport * as p from \"../../core/properties\";\nimport * as bokeh_math from \"../../core/util/math\";\nexport class Jitter extends Transform {\n  constructor(attrs) {\n    super(attrs);\n  }\n\n  static init_Jitter() {\n    this.define({\n      mean: [p.Number, 0],\n      width: [p.Number, 1],\n      distribution: [p.Distribution, 'uniform'],\n      range: [p.Instance]\n    });\n    this.internal({\n      previous_values: [p.Array]\n    });\n  }\n\n  v_compute(xs0) {\n    if (this.previous_values != null && this.previous_values.length == xs0.length) return this.previous_values;\n    let xs;\n    if (this.range instanceof FactorRange) xs = this.range.v_synthetic(xs0);else if (isArrayableOf(xs0, isNumber)) xs = xs0;else throw new Error(\"unexpected\");\n    const result = new Float64Array(xs.length);\n\n    for (let i = 0; i < xs.length; i++) {\n      const x = xs[i];\n      result[i] = this._compute(x);\n    }\n\n    this.previous_values = result;\n    return result;\n  }\n\n  compute(x) {\n    if (this.range instanceof FactorRange) return this._compute(this.range.synthetic(x));else if (isNumber(x)) return this._compute(x);else throw new Error(\"unexpected\");\n  }\n\n  _compute(x) {\n    switch (this.distribution) {\n      case \"uniform\":\n        return x + this.mean + (bokeh_math.random() - 0.5) * this.width;\n\n      case \"normal\":\n        return x + bokeh_math.rnorm(this.mean, this.width);\n    }\n  }\n\n}\nJitter.__name__ = \"Jitter\";\nJitter.init_Jitter();","map":{"version":3,"sources":["/Users/gen/Desktop/defund_to_refund/node_modules/@bokeh/bokehjs/build/js/lib/models/transforms/jitter.js"],"names":["Transform","FactorRange","isNumber","isArrayableOf","p","bokeh_math","Jitter","constructor","attrs","init_Jitter","define","mean","Number","width","distribution","Distribution","range","Instance","internal","previous_values","Array","v_compute","xs0","length","xs","v_synthetic","Error","result","Float64Array","i","x","_compute","compute","synthetic","random","rnorm","__name__"],"mappings":"AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SAASC,QAAT,EAAmBC,aAAnB,QAAwC,uBAAxC;AACA,OAAO,KAAKC,CAAZ,MAAmB,uBAAnB;AACA,OAAO,KAAKC,UAAZ,MAA4B,sBAA5B;AACA,OAAO,MAAMC,MAAN,SAAqBN,SAArB,CAA+B;AAClCO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACH;;AACD,SAAOC,WAAP,GAAqB;AACjB,SAAKC,MAAL,CAAY;AACRC,MAAAA,IAAI,EAAE,CAACP,CAAC,CAACQ,MAAH,EAAW,CAAX,CADE;AAERC,MAAAA,KAAK,EAAE,CAACT,CAAC,CAACQ,MAAH,EAAW,CAAX,CAFC;AAGRE,MAAAA,YAAY,EAAE,CAACV,CAAC,CAACW,YAAH,EAAiB,SAAjB,CAHN;AAIRC,MAAAA,KAAK,EAAE,CAACZ,CAAC,CAACa,QAAH;AAJC,KAAZ;AAMA,SAAKC,QAAL,CAAc;AACVC,MAAAA,eAAe,EAAE,CAACf,CAAC,CAACgB,KAAH;AADP,KAAd;AAGH;;AACDC,EAAAA,SAAS,CAACC,GAAD,EAAM;AACX,QAAI,KAAKH,eAAL,IAAwB,IAAxB,IAAgC,KAAKA,eAAL,CAAqBI,MAArB,IAA+BD,GAAG,CAACC,MAAvE,EACI,OAAO,KAAKJ,eAAZ;AACJ,QAAIK,EAAJ;AACA,QAAI,KAAKR,KAAL,YAAsBf,WAA1B,EACIuB,EAAE,GAAG,KAAKR,KAAL,CAAWS,WAAX,CAAuBH,GAAvB,CAAL,CADJ,KAEK,IAAInB,aAAa,CAACmB,GAAD,EAAMpB,QAAN,CAAjB,EACDsB,EAAE,GAAGF,GAAL,CADC,KAGD,MAAM,IAAII,KAAJ,CAAU,YAAV,CAAN;AACJ,UAAMC,MAAM,GAAG,IAAIC,YAAJ,CAAiBJ,EAAE,CAACD,MAApB,CAAf;;AACA,SAAK,IAAIM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,EAAE,CAACD,MAAvB,EAA+BM,CAAC,EAAhC,EAAoC;AAChC,YAAMC,CAAC,GAAGN,EAAE,CAACK,CAAD,CAAZ;AACAF,MAAAA,MAAM,CAACE,CAAD,CAAN,GAAY,KAAKE,QAAL,CAAcD,CAAd,CAAZ;AACH;;AACD,SAAKX,eAAL,GAAuBQ,MAAvB;AACA,WAAOA,MAAP;AACH;;AACDK,EAAAA,OAAO,CAACF,CAAD,EAAI;AACP,QAAI,KAAKd,KAAL,YAAsBf,WAA1B,EACI,OAAO,KAAK8B,QAAL,CAAc,KAAKf,KAAL,CAAWiB,SAAX,CAAqBH,CAArB,CAAd,CAAP,CADJ,KAEK,IAAI5B,QAAQ,CAAC4B,CAAD,CAAZ,EACD,OAAO,KAAKC,QAAL,CAAcD,CAAd,CAAP,CADC,KAGD,MAAM,IAAIJ,KAAJ,CAAU,YAAV,CAAN;AACP;;AACDK,EAAAA,QAAQ,CAACD,CAAD,EAAI;AACR,YAAQ,KAAKhB,YAAb;AACI,WAAK,SAAL;AACI,eAAOgB,CAAC,GAAG,KAAKnB,IAAT,GAAgB,CAACN,UAAU,CAAC6B,MAAX,KAAsB,GAAvB,IAA8B,KAAKrB,KAA1D;;AACJ,WAAK,QAAL;AACI,eAAOiB,CAAC,GAAGzB,UAAU,CAAC8B,KAAX,CAAiB,KAAKxB,IAAtB,EAA4B,KAAKE,KAAjC,CAAX;AAJR;AAMH;;AAhDiC;AAkDtCP,MAAM,CAAC8B,QAAP,GAAkB,QAAlB;AACA9B,MAAM,CAACG,WAAP","sourcesContent":["import { Transform } from \"./transform\";\nimport { FactorRange } from \"../ranges/factor_range\";\nimport { isNumber, isArrayableOf } from \"../../core/util/types\";\nimport * as p from \"../../core/properties\";\nimport * as bokeh_math from \"../../core/util/math\";\nexport class Jitter extends Transform {\n    constructor(attrs) {\n        super(attrs);\n    }\n    static init_Jitter() {\n        this.define({\n            mean: [p.Number, 0],\n            width: [p.Number, 1],\n            distribution: [p.Distribution, 'uniform'],\n            range: [p.Instance],\n        });\n        this.internal({\n            previous_values: [p.Array],\n        });\n    }\n    v_compute(xs0) {\n        if (this.previous_values != null && this.previous_values.length == xs0.length)\n            return this.previous_values;\n        let xs;\n        if (this.range instanceof FactorRange)\n            xs = this.range.v_synthetic(xs0);\n        else if (isArrayableOf(xs0, isNumber))\n            xs = xs0;\n        else\n            throw new Error(\"unexpected\");\n        const result = new Float64Array(xs.length);\n        for (let i = 0; i < xs.length; i++) {\n            const x = xs[i];\n            result[i] = this._compute(x);\n        }\n        this.previous_values = result;\n        return result;\n    }\n    compute(x) {\n        if (this.range instanceof FactorRange)\n            return this._compute(this.range.synthetic(x));\n        else if (isNumber(x))\n            return this._compute(x);\n        else\n            throw new Error(\"unexpected\");\n    }\n    _compute(x) {\n        switch (this.distribution) {\n            case \"uniform\":\n                return x + this.mean + (bokeh_math.random() - 0.5) * this.width;\n            case \"normal\":\n                return x + bokeh_math.rnorm(this.mean, this.width);\n        }\n    }\n}\nJitter.__name__ = \"Jitter\";\nJitter.init_Jitter();\n//# sourceMappingURL=jitter.js.map"]},"metadata":{},"sourceType":"module"}