{"ast":null,"code":"var _jsxFileName = \"/Users/gen/Desktop/defund_to_refund/src/App.js\";\nimport React, { useState } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport Title from './components/title';\nimport TotalFunds from './components/totalFunds';\nimport SliderBar from './components/sliderBar';\nimport { groups } from './dummy_data/groups';\nimport bokeh_data from './data/bokeh_data.json';\n\nclass App extends React.Component {\n  componentDidMount() {\n    const item = JSON.parse(item_text);\n    Bokeh.embed.embed_item(item);\n  }\n\n  render() {\n    const [funds, setFunds] = useState(1000000000);\n    const [percentage, setPercentage] = useState([0, 0, 0, 0]);\n\n    const handlePercentage = (e, value) => {\n      let index = parseInt(e.target.id, 10);\n      setPercentage([...percentage.slice(0, index), value, ...percentage.slice(index + 1)]);\n    };\n\n    const groupSections = groups.map((group, idx) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: idx,\n        style: {\n          display: 'flex'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }\n      }, group, \": \"), /*#__PURE__*/React.createElement(SliderBar, {\n        handlePercentage: handlePercentage,\n        idx: idx,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }\n      }, \"Percentage: \", percentage[idx]));\n    });\n    console.log(percentage);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      className: \"App-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(TotalFunds, {\n      funds: funds,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }\n    }, groupSections), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"myplot\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/gen/Desktop/defund_to_refund/src/App.js"],"names":["React","useState","Title","TotalFunds","SliderBar","groups","bokeh_data","App","Component","componentDidMount","item","JSON","parse","item_text","Bokeh","embed","embed_item","render","funds","setFunds","percentage","setPercentage","handlePercentage","e","value","index","parseInt","target","id","slice","groupSections","map","group","idx","display","console","log","flexDirection"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,OAAO,WAAP;AAEA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,SAASC,MAAT,QAAuB,qBAAvB;AACA,OAAOC,UAAP,MAAuB,wBAAvB;;AAEA,MAAMC,GAAN,SAAkBP,KAAK,CAACQ,SAAxB,CAAkC;AAChCC,EAAAA,iBAAiB,GAAE;AACjB,UAAMC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,SAAX,CAAb;AACAC,IAAAA,KAAK,CAACC,KAAN,CAAYC,UAAZ,CAAuBN,IAAvB;AACD;;AACDO,EAAAA,MAAM,GAAG;AACP,UAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBlB,QAAQ,CAAC,UAAD,CAAlC;AACA,UAAM,CAACmB,UAAD,EAAaC,aAAb,IAA8BpB,QAAQ,CAAC,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAAD,CAA5C;;AAEA,UAAMqB,gBAAgB,GAAG,CAACC,CAAD,EAAIC,KAAJ,KAAc;AACrC,UAAIC,KAAK,GAAGC,QAAQ,CAACH,CAAC,CAACI,MAAF,CAASC,EAAV,EAAc,EAAd,CAApB;AACAP,MAAAA,aAAa,CAAC,CAAC,GAAGD,UAAU,CAACS,KAAX,CAAiB,CAAjB,EAAoBJ,KAApB,CAAJ,EAAgCD,KAAhC,EAAuC,GAAGJ,UAAU,CAACS,KAAX,CAAiBJ,KAAK,GAAG,CAAzB,CAA1C,CAAD,CAAb;AACD,KAHD;;AAKA,UAAMK,aAAa,GAAGzB,MAAM,CAAC0B,GAAP,CAAW,CAACC,KAAD,EAAQC,GAAR,KAAgB;AAC/C,0BACE;AAAK,QAAA,GAAG,EAAEA,GAAV;AAAe,QAAA,KAAK,EAAE;AAAEC,UAAAA,OAAO,EAAE;AAAX,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIF,KAAJ,OADF,eAEE,oBAAC,SAAD;AAAW,QAAA,gBAAgB,EAAEV,gBAA7B;AAA+C,QAAA,GAAG,EAAEW,GAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAgBb,UAAU,CAACa,GAAD,CAA1B,CAHF,CADF;AAOD,KARqB,CAAtB;AAUAE,IAAAA,OAAO,CAACC,GAAR,CAAYhB,UAAZ;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,UAAD;AAAY,MAAA,KAAK,EAAEF,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE;AAAK,MAAA,KAAK,EAAE;AAAEgB,QAAAA,OAAO,EAAE,MAAX;AAAmBG,QAAAA,aAAa,EAAE;AAAlC,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGP,aADH,CAHF,eAME;AAAK,MAAA,EAAE,EAAC,QAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CAFF,CADF;AAaD;;AAtC+B;;AAyClC,eAAevB,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport Title from './components/title'\nimport TotalFunds from './components/totalFunds'\nimport SliderBar from './components/sliderBar'\nimport { groups } from './dummy_data/groups'\nimport bokeh_data from './data/bokeh_data.json'\n\nclass App extends React.Component {\n  componentDidMount(){\n    const item = JSON.parse(item_text);\n    Bokeh.embed.embed_item(item);\n  }\n  render() {\n    const [funds, setFunds] = useState(1000000000)\n    const [percentage, setPercentage] = useState([0, 0, 0, 0])\n\n    const handlePercentage = (e, value) => {\n      let index = parseInt(e.target.id, 10)\n      setPercentage([...percentage.slice(0, index), value, ...percentage.slice(index + 1)])\n    }\n\n    const groupSections = groups.map((group, idx) => {\n      return (\n        <div key={idx} style={{ display: 'flex' }}>\n          <p>{group}: </p>\n          <SliderBar handlePercentage={handlePercentage} idx={idx} />\n          <p>Percentage: {percentage[idx]}</p>\n        </div>\n      )\n    })\n\n    console.log(percentage)\n    return (\n      <div className=\"App\">\n\n        <header className=\"App-header\">\n          <Title />\n          <TotalFunds funds={funds} />\n          <div style={{ display: 'flex', flexDirection: 'column' }}>\n            {groupSections}\n          </div>\n          <div id=\"myplot\" />\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}