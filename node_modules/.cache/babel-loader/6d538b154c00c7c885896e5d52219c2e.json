{"ast":null,"code":"export default class FlatQueue {\n  constructor() {\n    this.ids = [];\n    this.values = [];\n    this.length = 0;\n  }\n\n  clear() {\n    this.length = 0;\n  }\n\n  push(id, value) {\n    let pos = this.length++;\n    this.ids[pos] = id;\n    this.values[pos] = value;\n\n    while (pos > 0) {\n      const parent = pos - 1 >> 1;\n      const parentValue = this.values[parent];\n      if (value >= parentValue) break;\n      this.ids[pos] = this.ids[parent];\n      this.values[pos] = parentValue;\n      pos = parent;\n    }\n\n    this.ids[pos] = id;\n    this.values[pos] = value;\n  }\n\n  pop() {\n    if (this.length === 0) return undefined;\n    const top = this.ids[0];\n    this.length--;\n\n    if (this.length > 0) {\n      const id = this.ids[0] = this.ids[this.length];\n      const value = this.values[0] = this.values[this.length];\n      const halfLength = this.length >> 1;\n      let pos = 0;\n\n      while (pos < halfLength) {\n        let left = (pos << 1) + 1;\n        const right = left + 1;\n        let bestIndex = this.ids[left];\n        let bestValue = this.values[left];\n        const rightValue = this.values[right];\n\n        if (right < this.length && rightValue < bestValue) {\n          left = right;\n          bestIndex = this.ids[right];\n          bestValue = rightValue;\n        }\n\n        if (bestValue >= value) break;\n        this.ids[pos] = bestIndex;\n        this.values[pos] = bestValue;\n        pos = left;\n      }\n\n      this.ids[pos] = id;\n      this.values[pos] = value;\n    }\n\n    return top;\n  }\n\n  peek() {\n    if (this.length === 0) return undefined;\n    return this.ids[0];\n  }\n\n  peekValue() {\n    if (this.length === 0) return undefined;\n    return this.values[0];\n  }\n\n}","map":{"version":3,"sources":["/Users/gen/Desktop/defund_to_refund/node_modules/flatqueue/index.mjs"],"names":["FlatQueue","constructor","ids","values","length","clear","push","id","value","pos","parent","parentValue","pop","undefined","top","halfLength","left","right","bestIndex","bestValue","rightValue","peek","peekValue"],"mappings":"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","sourcesContent":["\nexport default class FlatQueue {\n\n    constructor() {\n        this.ids = [];\n        this.values = [];\n        this.length = 0;\n    }\n\n    clear() {\n        this.length = 0;\n    }\n\n    push(id, value) {\n        let pos = this.length++;\n        this.ids[pos] = id;\n        this.values[pos] = value;\n\n        while (pos > 0) {\n            const parent = (pos - 1) >> 1;\n            const parentValue = this.values[parent];\n            if (value >= parentValue) break;\n            this.ids[pos] = this.ids[parent];\n            this.values[pos] = parentValue;\n            pos = parent;\n        }\n\n        this.ids[pos] = id;\n        this.values[pos] = value;\n    }\n\n    pop() {\n        if (this.length === 0) return undefined;\n\n        const top = this.ids[0];\n        this.length--;\n\n        if (this.length > 0) {\n            const id = this.ids[0] = this.ids[this.length];\n            const value = this.values[0] = this.values[this.length];\n            const halfLength = this.length >> 1;\n            let pos = 0;\n\n            while (pos < halfLength) {\n                let left = (pos << 1) + 1;\n                const right = left + 1;\n                let bestIndex = this.ids[left];\n                let bestValue = this.values[left];\n                const rightValue = this.values[right];\n\n                if (right < this.length && rightValue < bestValue) {\n                    left = right;\n                    bestIndex = this.ids[right];\n                    bestValue = rightValue;\n                }\n                if (bestValue >= value) break;\n\n                this.ids[pos] = bestIndex;\n                this.values[pos] = bestValue;\n                pos = left;\n            }\n\n            this.ids[pos] = id;\n            this.values[pos] = value;\n        }\n\n        return top;\n    }\n\n    peek() {\n        if (this.length === 0) return undefined;\n        return this.ids[0];\n    }\n\n    peekValue() {\n        if (this.length === 0) return undefined;\n        return this.values[0];\n    }\n}\n"]},"metadata":{},"sourceType":"module"}