{"ast":null,"code":"import Hammer from \"hammerjs\";\nimport { Signal } from \"./signaling\";\nimport { logger } from \"./logging\";\nimport { offset } from \"./dom\";\nimport { getDeltaY } from \"./util/wheel\";\nimport { reversed } from \"./util/array\";\nimport { isEmpty } from \"./util/object\";\nimport { isString } from \"./util/types\";\nimport { is_mobile } from \"./util/compat\";\nimport * as events from \"./bokeh_events\";\n\nfunction is_touch(event) {\n  return typeof TouchEvent !== \"undefined\" && event instanceof TouchEvent;\n}\n\nexport class UIEvents {\n  constructor(plot_view, toolbar, hit_area) {\n    this.plot_view = plot_view;\n    this.toolbar = toolbar;\n    this.hit_area = hit_area;\n    this.pan_start = new Signal(this, 'pan:start');\n    this.pan = new Signal(this, 'pan');\n    this.pan_end = new Signal(this, 'pan:end');\n    this.pinch_start = new Signal(this, 'pinch:start');\n    this.pinch = new Signal(this, 'pinch');\n    this.pinch_end = new Signal(this, 'pinch:end');\n    this.rotate_start = new Signal(this, 'rotate:start');\n    this.rotate = new Signal(this, 'rotate');\n    this.rotate_end = new Signal(this, 'rotate:end');\n    this.tap = new Signal(this, 'tap');\n    this.doubletap = new Signal(this, 'doubletap');\n    this.press = new Signal(this, 'press');\n    this.pressup = new Signal(this, 'pressup');\n    this.move_enter = new Signal(this, 'move:enter');\n    this.move = new Signal(this, 'move');\n    this.move_exit = new Signal(this, 'move:exit');\n    this.scroll = new Signal(this, 'scroll');\n    this.keydown = new Signal(this, 'keydown');\n    this.keyup = new Signal(this, 'keyup');\n    this.hammer = new Hammer(this.hit_area, {\n      touchAction: 'auto',\n      inputClass: Hammer.TouchMouseInput\n    });\n\n    this._configure_hammerjs(); // Mouse & keyboard events not handled through hammerjs\n    // We can 'add and forget' these event listeners because this.hit_area is a DOM element\n    // that will be thrown away when the view is removed\n\n\n    this.hit_area.addEventListener(\"mousemove\", e => this._mouse_move(e));\n    this.hit_area.addEventListener(\"mouseenter\", e => this._mouse_enter(e));\n    this.hit_area.addEventListener(\"mouseleave\", e => this._mouse_exit(e));\n    this.hit_area.addEventListener(\"wheel\", e => this._mouse_wheel(e)); // But we MUST remove listeners registered on document or we'll leak memory: register\n    // 'this' as the listener (it implements the event listener interface, i.e. handleEvent)\n    // instead of an anonymous function so we can easily refer back to it for removing\n\n    document.addEventListener(\"keydown\", this);\n    document.addEventListener(\"keyup\", this);\n  }\n\n  destroy() {\n    this.hammer.destroy();\n    document.removeEventListener(\"keydown\", this);\n    document.removeEventListener(\"keyup\", this);\n  }\n\n  handleEvent(e) {\n    if (e.type == \"keydown\") this._key_down(e);else if (e.type == \"keyup\") this._key_up(e);\n  }\n\n  _configure_hammerjs() {\n    // This is to be able to distinguish double taps from single taps\n    this.hammer.get('doubletap').recognizeWith('tap');\n    this.hammer.get('tap').requireFailure('doubletap');\n    this.hammer.get('doubletap').dropRequireFailure('tap');\n    this.hammer.on('doubletap', e => this._doubletap(e));\n    this.hammer.on('tap', e => this._tap(e));\n    this.hammer.on('press', e => this._press(e));\n    this.hammer.on('pressup', e => this._pressup(e));\n    this.hammer.get('pan').set({\n      direction: Hammer.DIRECTION_ALL\n    });\n    this.hammer.on('panstart', e => this._pan_start(e));\n    this.hammer.on('pan', e => this._pan(e));\n    this.hammer.on('panend', e => this._pan_end(e));\n    this.hammer.get('pinch').set({\n      enable: true\n    });\n    this.hammer.on('pinchstart', e => this._pinch_start(e));\n    this.hammer.on('pinch', e => this._pinch(e));\n    this.hammer.on('pinchend', e => this._pinch_end(e));\n    this.hammer.get('rotate').set({\n      enable: true\n    });\n    this.hammer.on('rotatestart', e => this._rotate_start(e));\n    this.hammer.on('rotate', e => this._rotate(e));\n    this.hammer.on('rotateend', e => this._rotate_end(e));\n  }\n\n  register_tool(tool_view) {\n    const et = tool_view.model.event_type;\n\n    if (et != null) {\n      if (isString(et)) this._register_tool(tool_view, et);else {\n        // Multi-tools should only registered shared events once\n        et.forEach((e, index) => this._register_tool(tool_view, e, index < 1));\n      }\n    }\n  }\n\n  _register_tool(tool_view, et, shared = true) {\n    const v = tool_view;\n    const {\n      id\n    } = v.model;\n\n    const conditionally = fn => arg => {\n      if (arg.id == id) fn(arg.e);\n    };\n\n    const unconditionally = fn => arg => {\n      fn(arg.e);\n    };\n\n    switch (et) {\n      case \"pan\":\n        {\n          if (v._pan_start != null) v.connect(this.pan_start, conditionally(v._pan_start.bind(v)));\n          if (v._pan != null) v.connect(this.pan, conditionally(v._pan.bind(v)));\n          if (v._pan_end != null) v.connect(this.pan_end, conditionally(v._pan_end.bind(v)));\n          break;\n        }\n\n      case \"pinch\":\n        {\n          if (v._pinch_start != null) v.connect(this.pinch_start, conditionally(v._pinch_start.bind(v)));\n          if (v._pinch != null) v.connect(this.pinch, conditionally(v._pinch.bind(v)));\n          if (v._pinch_end != null) v.connect(this.pinch_end, conditionally(v._pinch_end.bind(v)));\n          break;\n        }\n\n      case \"rotate\":\n        {\n          if (v._rotate_start != null) v.connect(this.rotate_start, conditionally(v._rotate_start.bind(v)));\n          if (v._rotate != null) v.connect(this.rotate, conditionally(v._rotate.bind(v)));\n          if (v._rotate_end != null) v.connect(this.rotate_end, conditionally(v._rotate_end.bind(v)));\n          break;\n        }\n\n      case \"move\":\n        {\n          if (v._move_enter != null) v.connect(this.move_enter, conditionally(v._move_enter.bind(v)));\n          if (v._move != null) v.connect(this.move, conditionally(v._move.bind(v)));\n          if (v._move_exit != null) v.connect(this.move_exit, conditionally(v._move_exit.bind(v)));\n          break;\n        }\n\n      case \"tap\":\n        {\n          if (v._tap != null) v.connect(this.tap, conditionally(v._tap.bind(v)));\n          break;\n        }\n\n      case \"press\":\n        {\n          if (v._press != null) v.connect(this.press, conditionally(v._press.bind(v)));\n          if (v._pressup != null) v.connect(this.pressup, conditionally(v._pressup.bind(v)));\n          break;\n        }\n\n      case \"scroll\":\n        {\n          if (v._scroll != null) v.connect(this.scroll, conditionally(v._scroll.bind(v)));\n          break;\n        }\n\n      default:\n        throw new Error(`unsupported event_type: ${et}`);\n    } // Skip shared events if registering multi-tool\n\n\n    if (!shared) return;\n    if (v._doubletap != null) v.connect(this.doubletap, unconditionally(v._doubletap.bind(v)));\n    if (v._keydown != null) v.connect(this.keydown, unconditionally(v._keydown.bind(v)));\n    if (v._keyup != null) v.connect(this.keyup, unconditionally(v._keyup.bind(v))); // Dual touch hack part 1/2\n    // This is a hack for laptops with touch screen who may be pinching or scrolling\n    // in order to use the wheel zoom tool. If it's a touch screen the WheelZoomTool event\n    // will be linked to pinch. But we also want to trigger in the case of a scroll.\n\n    if (is_mobile && v._scroll != null && et == 'pinch') {\n      logger.debug(\"Registering scroll on touch screen\");\n      v.connect(this.scroll, conditionally(v._scroll.bind(v)));\n    }\n  }\n\n  _hit_test_renderers(sx, sy) {\n    const views = this.plot_view.get_renderer_views();\n\n    for (const view of reversed(views)) {\n      const {\n        level\n      } = view.model;\n\n      if ((level == 'annotation' || level == 'overlay') && view.interactive_hit != null) {\n        if (view.interactive_hit(sx, sy)) return view;\n      }\n    }\n\n    return null;\n  }\n\n  _hit_test_frame(sx, sy) {\n    return this.plot_view.frame.bbox.contains(sx, sy);\n  }\n\n  _hit_test_canvas(sx, sy) {\n    return this.plot_view.layout.bbox.contains(sx, sy);\n  }\n\n  _trigger(signal, e, srcEvent) {\n    const gestures = this.toolbar.gestures;\n    const event_type = signal.name;\n    const base_type = event_type.split(\":\")[0];\n\n    const view = this._hit_test_renderers(e.sx, e.sy);\n\n    const on_canvas = this._hit_test_canvas(e.sx, e.sy);\n\n    switch (base_type) {\n      case \"move\":\n        {\n          const active_gesture = gestures[base_type].active;\n          if (active_gesture != null) this.trigger(signal, e, active_gesture.id);\n          const active_inspectors = this.toolbar.inspectors.filter(t => t.active);\n          let cursor = \"default\"; // the event happened on a renderer\n\n          if (view != null) {\n            cursor = view.cursor(e.sx, e.sy) || cursor;\n\n            if (!isEmpty(active_inspectors)) {\n              // override event_type to cause inspectors to clear overlays\n              signal = this.move_exit; // XXX\n            } // the event happened on the plot frame but off a renderer\n\n          } else if (this._hit_test_frame(e.sx, e.sy)) {\n            if (!isEmpty(active_inspectors)) {\n              cursor = \"crosshair\";\n            }\n          }\n\n          this.plot_view.set_cursor(cursor);\n          this.plot_view.set_toolbar_visibility(on_canvas);\n          active_inspectors.map(inspector => this.trigger(signal, e, inspector.id));\n          break;\n        }\n\n      case \"tap\":\n        {\n          const {\n            target\n          } = srcEvent;\n          if (target != null && target != this.hit_area) return; // don't trigger bokeh events\n\n          if (view != null && view.on_hit != null) view.on_hit(e.sx, e.sy);\n          const active_gesture = gestures[base_type].active;\n          if (active_gesture != null) this.trigger(signal, e, active_gesture.id);\n          break;\n        }\n\n      case \"scroll\":\n        {\n          // Dual touch hack part 2/2\n          // This is a hack for laptops with touch screen who may be pinching or scrolling\n          // in order to use the wheel zoom tool. If it's a touch screen the WheelZoomTool event\n          // will be linked to pinch. But we also want to trigger in the case of a scroll.\n          const base = is_mobile ? \"pinch\" : \"scroll\";\n          const active_gesture = gestures[base].active;\n\n          if (active_gesture != null) {\n            srcEvent.preventDefault();\n            srcEvent.stopPropagation();\n            this.trigger(signal, e, active_gesture.id);\n          }\n\n          break;\n        }\n\n      case \"pan\":\n        {\n          const active_gesture = gestures[base_type].active;\n\n          if (active_gesture != null) {\n            srcEvent.preventDefault();\n            this.trigger(signal, e, active_gesture.id);\n          }\n\n          break;\n        }\n\n      default:\n        {\n          const active_gesture = gestures[base_type].active;\n          if (active_gesture != null) this.trigger(signal, e, active_gesture.id);\n        }\n    }\n\n    this._trigger_bokeh_event(e);\n  }\n\n  trigger(signal, e, id = null) {\n    signal.emit({\n      id,\n      e\n    });\n  }\n\n  _trigger_bokeh_event(e) {\n    const ev = (() => {\n      const xscale = this.plot_view.frame.xscales.default;\n      const yscale = this.plot_view.frame.yscales.default;\n      const {\n        sx,\n        sy\n      } = e;\n      const x = xscale.invert(sx);\n      const y = yscale.invert(sy);\n\n      switch (e.type) {\n        case \"wheel\":\n          return new events.MouseWheel(sx, sy, x, y, e.delta);\n\n        case \"mousemove\":\n          return new events.MouseMove(sx, sy, x, y);\n\n        case \"mouseenter\":\n          return new events.MouseEnter(sx, sy, x, y);\n\n        case \"mouseleave\":\n          return new events.MouseLeave(sx, sy, x, y);\n\n        case \"tap\":\n          return new events.Tap(sx, sy, x, y);\n\n        case \"doubletap\":\n          return new events.DoubleTap(sx, sy, x, y);\n\n        case \"press\":\n          return new events.Press(sx, sy, x, y);\n\n        case \"pressup\":\n          return new events.PressUp(sx, sy, x, y);\n\n        case \"pan\":\n          return new events.Pan(sx, sy, x, y, e.deltaX, e.deltaY);\n\n        case \"panstart\":\n          return new events.PanStart(sx, sy, x, y);\n\n        case \"panend\":\n          return new events.PanEnd(sx, sy, x, y);\n\n        case \"pinch\":\n          return new events.Pinch(sx, sy, x, y, e.scale);\n\n        case \"pinchstart\":\n          return new events.PinchStart(sx, sy, x, y);\n\n        case \"pinchend\":\n          return new events.PinchEnd(sx, sy, x, y);\n\n        case \"rotate\":\n          return new events.Rotate(sx, sy, x, y, e.rotation);\n\n        case \"rotatestart\":\n          return new events.RotateStart(sx, sy, x, y);\n\n        case \"rotateend\":\n          return new events.RotateEnd(sx, sy, x, y);\n\n        default:\n          return undefined;\n      }\n    })();\n\n    if (ev != null) this.plot_view.model.trigger_event(ev);\n  }\n\n  _get_sxy(event) {\n    const {\n      pageX,\n      pageY\n    } = is_touch(event) ? (event.touches.length != 0 ? event.touches : event.changedTouches)[0] : event;\n    const {\n      left,\n      top\n    } = offset(this.hit_area);\n    return {\n      sx: pageX - left,\n      sy: pageY - top\n    };\n  }\n\n  _pan_event(e) {\n    return Object.assign(Object.assign({\n      type: e.type\n    }, this._get_sxy(e.srcEvent)), {\n      deltaX: e.deltaX,\n      deltaY: e.deltaY,\n      shiftKey: e.srcEvent.shiftKey\n    });\n  }\n\n  _pinch_event(e) {\n    return Object.assign(Object.assign({\n      type: e.type\n    }, this._get_sxy(e.srcEvent)), {\n      scale: e.scale,\n      shiftKey: e.srcEvent.shiftKey\n    });\n  }\n\n  _rotate_event(e) {\n    return Object.assign(Object.assign({\n      type: e.type\n    }, this._get_sxy(e.srcEvent)), {\n      rotation: e.rotation,\n      shiftKey: e.srcEvent.shiftKey\n    });\n  }\n\n  _tap_event(e) {\n    return Object.assign(Object.assign({\n      type: e.type\n    }, this._get_sxy(e.srcEvent)), {\n      shiftKey: e.srcEvent.shiftKey\n    });\n  }\n\n  _move_event(e) {\n    return Object.assign({\n      type: e.type\n    }, this._get_sxy(e));\n  }\n\n  _scroll_event(e) {\n    return Object.assign(Object.assign({\n      type: e.type\n    }, this._get_sxy(e)), {\n      delta: getDeltaY(e)\n    });\n  }\n\n  _key_event(e) {\n    return {\n      type: e.type,\n      keyCode: e.keyCode\n    };\n  }\n\n  _pan_start(e) {\n    const ev = this._pan_event(e); // back out delta to get original center point\n\n\n    ev.sx -= e.deltaX;\n    ev.sy -= e.deltaY;\n\n    this._trigger(this.pan_start, ev, e.srcEvent);\n  }\n\n  _pan(e) {\n    this._trigger(this.pan, this._pan_event(e), e.srcEvent);\n  }\n\n  _pan_end(e) {\n    this._trigger(this.pan_end, this._pan_event(e), e.srcEvent);\n  }\n\n  _pinch_start(e) {\n    this._trigger(this.pinch_start, this._pinch_event(e), e.srcEvent);\n  }\n\n  _pinch(e) {\n    this._trigger(this.pinch, this._pinch_event(e), e.srcEvent);\n  }\n\n  _pinch_end(e) {\n    this._trigger(this.pinch_end, this._pinch_event(e), e.srcEvent);\n  }\n\n  _rotate_start(e) {\n    this._trigger(this.rotate_start, this._rotate_event(e), e.srcEvent);\n  }\n\n  _rotate(e) {\n    this._trigger(this.rotate, this._rotate_event(e), e.srcEvent);\n  }\n\n  _rotate_end(e) {\n    this._trigger(this.rotate_end, this._rotate_event(e), e.srcEvent);\n  }\n\n  _tap(e) {\n    this._trigger(this.tap, this._tap_event(e), e.srcEvent);\n  }\n\n  _doubletap(e) {\n    // NOTE: doubletap event triggered unconditionally\n    const ev = this._tap_event(e);\n\n    this._trigger_bokeh_event(ev);\n\n    this.trigger(this.doubletap, ev);\n  }\n\n  _press(e) {\n    this._trigger(this.press, this._tap_event(e), e.srcEvent);\n  }\n\n  _pressup(e) {\n    this._trigger(this.pressup, this._tap_event(e), e.srcEvent);\n  }\n\n  _mouse_enter(e) {\n    this._trigger(this.move_enter, this._move_event(e), e);\n  }\n\n  _mouse_move(e) {\n    this._trigger(this.move, this._move_event(e), e);\n  }\n\n  _mouse_exit(e) {\n    this._trigger(this.move_exit, this._move_event(e), e);\n  }\n\n  _mouse_wheel(e) {\n    this._trigger(this.scroll, this._scroll_event(e), e);\n  }\n\n  _key_down(e) {\n    // NOTE: keyup event triggered unconditionally\n    this.trigger(this.keydown, this._key_event(e));\n  }\n\n  _key_up(e) {\n    // NOTE: keyup event triggered unconditionally\n    this.trigger(this.keyup, this._key_event(e));\n  }\n\n}\nUIEvents.__name__ = \"UIEvents\";","map":{"version":3,"sources":["/Users/gen/Desktop/defund_to_refund/node_modules/@bokeh/bokehjs/build/js/lib/core/ui_events.js"],"names":["Hammer","Signal","logger","offset","getDeltaY","reversed","isEmpty","isString","is_mobile","events","is_touch","event","TouchEvent","UIEvents","constructor","plot_view","toolbar","hit_area","pan_start","pan","pan_end","pinch_start","pinch","pinch_end","rotate_start","rotate","rotate_end","tap","doubletap","press","pressup","move_enter","move","move_exit","scroll","keydown","keyup","hammer","touchAction","inputClass","TouchMouseInput","_configure_hammerjs","addEventListener","e","_mouse_move","_mouse_enter","_mouse_exit","_mouse_wheel","document","destroy","removeEventListener","handleEvent","type","_key_down","_key_up","get","recognizeWith","requireFailure","dropRequireFailure","on","_doubletap","_tap","_press","_pressup","set","direction","DIRECTION_ALL","_pan_start","_pan","_pan_end","enable","_pinch_start","_pinch","_pinch_end","_rotate_start","_rotate","_rotate_end","register_tool","tool_view","et","model","event_type","_register_tool","forEach","index","shared","v","id","conditionally","fn","arg","unconditionally","connect","bind","_move_enter","_move","_move_exit","_scroll","Error","_keydown","_keyup","debug","_hit_test_renderers","sx","sy","views","get_renderer_views","view","level","interactive_hit","_hit_test_frame","frame","bbox","contains","_hit_test_canvas","layout","_trigger","signal","srcEvent","gestures","name","base_type","split","on_canvas","active_gesture","active","trigger","active_inspectors","inspectors","filter","t","cursor","set_cursor","set_toolbar_visibility","map","inspector","target","on_hit","base","preventDefault","stopPropagation","_trigger_bokeh_event","emit","ev","xscale","xscales","default","yscale","yscales","x","invert","y","MouseWheel","delta","MouseMove","MouseEnter","MouseLeave","Tap","DoubleTap","Press","PressUp","Pan","deltaX","deltaY","PanStart","PanEnd","Pinch","scale","PinchStart","PinchEnd","Rotate","rotation","RotateStart","RotateEnd","undefined","trigger_event","_get_sxy","pageX","pageY","touches","length","changedTouches","left","top","_pan_event","Object","assign","shiftKey","_pinch_event","_rotate_event","_tap_event","_move_event","_scroll_event","_key_event","keyCode","__name__"],"mappings":"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","sourcesContent":["import Hammer from \"hammerjs\";\nimport { Signal } from \"./signaling\";\nimport { logger } from \"./logging\";\nimport { offset } from \"./dom\";\nimport { getDeltaY } from \"./util/wheel\";\nimport { reversed } from \"./util/array\";\nimport { isEmpty } from \"./util/object\";\nimport { isString } from \"./util/types\";\nimport { is_mobile } from \"./util/compat\";\nimport * as events from \"./bokeh_events\";\nfunction is_touch(event) {\n    return typeof TouchEvent !== \"undefined\" && event instanceof TouchEvent;\n}\nexport class UIEvents {\n    constructor(plot_view, toolbar, hit_area) {\n        this.plot_view = plot_view;\n        this.toolbar = toolbar;\n        this.hit_area = hit_area;\n        this.pan_start = new Signal(this, 'pan:start');\n        this.pan = new Signal(this, 'pan');\n        this.pan_end = new Signal(this, 'pan:end');\n        this.pinch_start = new Signal(this, 'pinch:start');\n        this.pinch = new Signal(this, 'pinch');\n        this.pinch_end = new Signal(this, 'pinch:end');\n        this.rotate_start = new Signal(this, 'rotate:start');\n        this.rotate = new Signal(this, 'rotate');\n        this.rotate_end = new Signal(this, 'rotate:end');\n        this.tap = new Signal(this, 'tap');\n        this.doubletap = new Signal(this, 'doubletap');\n        this.press = new Signal(this, 'press');\n        this.pressup = new Signal(this, 'pressup');\n        this.move_enter = new Signal(this, 'move:enter');\n        this.move = new Signal(this, 'move');\n        this.move_exit = new Signal(this, 'move:exit');\n        this.scroll = new Signal(this, 'scroll');\n        this.keydown = new Signal(this, 'keydown');\n        this.keyup = new Signal(this, 'keyup');\n        this.hammer = new Hammer(this.hit_area, {\n            touchAction: 'auto',\n            inputClass: Hammer.TouchMouseInput,\n        });\n        this._configure_hammerjs();\n        // Mouse & keyboard events not handled through hammerjs\n        // We can 'add and forget' these event listeners because this.hit_area is a DOM element\n        // that will be thrown away when the view is removed\n        this.hit_area.addEventListener(\"mousemove\", (e) => this._mouse_move(e));\n        this.hit_area.addEventListener(\"mouseenter\", (e) => this._mouse_enter(e));\n        this.hit_area.addEventListener(\"mouseleave\", (e) => this._mouse_exit(e));\n        this.hit_area.addEventListener(\"wheel\", (e) => this._mouse_wheel(e));\n        // But we MUST remove listeners registered on document or we'll leak memory: register\n        // 'this' as the listener (it implements the event listener interface, i.e. handleEvent)\n        // instead of an anonymous function so we can easily refer back to it for removing\n        document.addEventListener(\"keydown\", this);\n        document.addEventListener(\"keyup\", this);\n    }\n    destroy() {\n        this.hammer.destroy();\n        document.removeEventListener(\"keydown\", this);\n        document.removeEventListener(\"keyup\", this);\n    }\n    handleEvent(e) {\n        if (e.type == \"keydown\")\n            this._key_down(e);\n        else if (e.type == \"keyup\")\n            this._key_up(e);\n    }\n    _configure_hammerjs() {\n        // This is to be able to distinguish double taps from single taps\n        this.hammer.get('doubletap').recognizeWith('tap');\n        this.hammer.get('tap').requireFailure('doubletap');\n        this.hammer.get('doubletap').dropRequireFailure('tap');\n        this.hammer.on('doubletap', (e) => this._doubletap(e));\n        this.hammer.on('tap', (e) => this._tap(e));\n        this.hammer.on('press', (e) => this._press(e));\n        this.hammer.on('pressup', (e) => this._pressup(e));\n        this.hammer.get('pan').set({ direction: Hammer.DIRECTION_ALL });\n        this.hammer.on('panstart', (e) => this._pan_start(e));\n        this.hammer.on('pan', (e) => this._pan(e));\n        this.hammer.on('panend', (e) => this._pan_end(e));\n        this.hammer.get('pinch').set({ enable: true });\n        this.hammer.on('pinchstart', (e) => this._pinch_start(e));\n        this.hammer.on('pinch', (e) => this._pinch(e));\n        this.hammer.on('pinchend', (e) => this._pinch_end(e));\n        this.hammer.get('rotate').set({ enable: true });\n        this.hammer.on('rotatestart', (e) => this._rotate_start(e));\n        this.hammer.on('rotate', (e) => this._rotate(e));\n        this.hammer.on('rotateend', (e) => this._rotate_end(e));\n    }\n    register_tool(tool_view) {\n        const et = tool_view.model.event_type;\n        if (et != null) {\n            if (isString(et))\n                this._register_tool(tool_view, et);\n            else {\n                // Multi-tools should only registered shared events once\n                et.forEach((e, index) => this._register_tool(tool_view, e, index < 1));\n            }\n        }\n    }\n    _register_tool(tool_view, et, shared = true) {\n        const v = tool_view;\n        const { id } = v.model;\n        const conditionally = (fn) => (arg) => {\n            if (arg.id == id)\n                fn(arg.e);\n        };\n        const unconditionally = (fn) => (arg) => {\n            fn(arg.e);\n        };\n        switch (et) {\n            case \"pan\": {\n                if (v._pan_start != null)\n                    v.connect(this.pan_start, conditionally(v._pan_start.bind(v)));\n                if (v._pan != null)\n                    v.connect(this.pan, conditionally(v._pan.bind(v)));\n                if (v._pan_end != null)\n                    v.connect(this.pan_end, conditionally(v._pan_end.bind(v)));\n                break;\n            }\n            case \"pinch\": {\n                if (v._pinch_start != null)\n                    v.connect(this.pinch_start, conditionally(v._pinch_start.bind(v)));\n                if (v._pinch != null)\n                    v.connect(this.pinch, conditionally(v._pinch.bind(v)));\n                if (v._pinch_end != null)\n                    v.connect(this.pinch_end, conditionally(v._pinch_end.bind(v)));\n                break;\n            }\n            case \"rotate\": {\n                if (v._rotate_start != null)\n                    v.connect(this.rotate_start, conditionally(v._rotate_start.bind(v)));\n                if (v._rotate != null)\n                    v.connect(this.rotate, conditionally(v._rotate.bind(v)));\n                if (v._rotate_end != null)\n                    v.connect(this.rotate_end, conditionally(v._rotate_end.bind(v)));\n                break;\n            }\n            case \"move\": {\n                if (v._move_enter != null)\n                    v.connect(this.move_enter, conditionally(v._move_enter.bind(v)));\n                if (v._move != null)\n                    v.connect(this.move, conditionally(v._move.bind(v)));\n                if (v._move_exit != null)\n                    v.connect(this.move_exit, conditionally(v._move_exit.bind(v)));\n                break;\n            }\n            case \"tap\": {\n                if (v._tap != null)\n                    v.connect(this.tap, conditionally(v._tap.bind(v)));\n                break;\n            }\n            case \"press\": {\n                if (v._press != null)\n                    v.connect(this.press, conditionally(v._press.bind(v)));\n                if (v._pressup != null)\n                    v.connect(this.pressup, conditionally(v._pressup.bind(v)));\n                break;\n            }\n            case \"scroll\": {\n                if (v._scroll != null)\n                    v.connect(this.scroll, conditionally(v._scroll.bind(v)));\n                break;\n            }\n            default:\n                throw new Error(`unsupported event_type: ${et}`);\n        }\n        // Skip shared events if registering multi-tool\n        if (!shared)\n            return;\n        if (v._doubletap != null)\n            v.connect(this.doubletap, unconditionally(v._doubletap.bind(v)));\n        if (v._keydown != null)\n            v.connect(this.keydown, unconditionally(v._keydown.bind(v)));\n        if (v._keyup != null)\n            v.connect(this.keyup, unconditionally(v._keyup.bind(v)));\n        // Dual touch hack part 1/2\n        // This is a hack for laptops with touch screen who may be pinching or scrolling\n        // in order to use the wheel zoom tool. If it's a touch screen the WheelZoomTool event\n        // will be linked to pinch. But we also want to trigger in the case of a scroll.\n        if (is_mobile && v._scroll != null && et == 'pinch') {\n            logger.debug(\"Registering scroll on touch screen\");\n            v.connect(this.scroll, conditionally(v._scroll.bind(v)));\n        }\n    }\n    _hit_test_renderers(sx, sy) {\n        const views = this.plot_view.get_renderer_views();\n        for (const view of reversed(views)) {\n            const { level } = view.model;\n            if ((level == 'annotation' || level == 'overlay') && view.interactive_hit != null) {\n                if (view.interactive_hit(sx, sy))\n                    return view;\n            }\n        }\n        return null;\n    }\n    _hit_test_frame(sx, sy) {\n        return this.plot_view.frame.bbox.contains(sx, sy);\n    }\n    _hit_test_canvas(sx, sy) {\n        return this.plot_view.layout.bbox.contains(sx, sy);\n    }\n    _trigger(signal, e, srcEvent) {\n        const gestures = this.toolbar.gestures;\n        const event_type = signal.name;\n        const base_type = event_type.split(\":\")[0];\n        const view = this._hit_test_renderers(e.sx, e.sy);\n        const on_canvas = this._hit_test_canvas(e.sx, e.sy);\n        switch (base_type) {\n            case \"move\": {\n                const active_gesture = gestures[base_type].active;\n                if (active_gesture != null)\n                    this.trigger(signal, e, active_gesture.id);\n                const active_inspectors = this.toolbar.inspectors.filter(t => t.active);\n                let cursor = \"default\";\n                // the event happened on a renderer\n                if (view != null) {\n                    cursor = view.cursor(e.sx, e.sy) || cursor;\n                    if (!isEmpty(active_inspectors)) {\n                        // override event_type to cause inspectors to clear overlays\n                        signal = this.move_exit; // XXX\n                    }\n                    // the event happened on the plot frame but off a renderer\n                }\n                else if (this._hit_test_frame(e.sx, e.sy)) {\n                    if (!isEmpty(active_inspectors)) {\n                        cursor = \"crosshair\";\n                    }\n                }\n                this.plot_view.set_cursor(cursor);\n                this.plot_view.set_toolbar_visibility(on_canvas);\n                active_inspectors.map((inspector) => this.trigger(signal, e, inspector.id));\n                break;\n            }\n            case \"tap\": {\n                const { target } = srcEvent;\n                if (target != null && target != this.hit_area)\n                    return; // don't trigger bokeh events\n                if (view != null && view.on_hit != null)\n                    view.on_hit(e.sx, e.sy);\n                const active_gesture = gestures[base_type].active;\n                if (active_gesture != null)\n                    this.trigger(signal, e, active_gesture.id);\n                break;\n            }\n            case \"scroll\": {\n                // Dual touch hack part 2/2\n                // This is a hack for laptops with touch screen who may be pinching or scrolling\n                // in order to use the wheel zoom tool. If it's a touch screen the WheelZoomTool event\n                // will be linked to pinch. But we also want to trigger in the case of a scroll.\n                const base = is_mobile ? \"pinch\" : \"scroll\";\n                const active_gesture = gestures[base].active;\n                if (active_gesture != null) {\n                    srcEvent.preventDefault();\n                    srcEvent.stopPropagation();\n                    this.trigger(signal, e, active_gesture.id);\n                }\n                break;\n            }\n            case \"pan\": {\n                const active_gesture = gestures[base_type].active;\n                if (active_gesture != null) {\n                    srcEvent.preventDefault();\n                    this.trigger(signal, e, active_gesture.id);\n                }\n                break;\n            }\n            default: {\n                const active_gesture = gestures[base_type].active;\n                if (active_gesture != null)\n                    this.trigger(signal, e, active_gesture.id);\n            }\n        }\n        this._trigger_bokeh_event(e);\n    }\n    trigger(signal, e, id = null) {\n        signal.emit({ id, e });\n    }\n    _trigger_bokeh_event(e) {\n        const ev = (() => {\n            const xscale = this.plot_view.frame.xscales.default;\n            const yscale = this.plot_view.frame.yscales.default;\n            const { sx, sy } = e;\n            const x = xscale.invert(sx);\n            const y = yscale.invert(sy);\n            switch (e.type) {\n                case \"wheel\":\n                    return new events.MouseWheel(sx, sy, x, y, e.delta);\n                case \"mousemove\":\n                    return new events.MouseMove(sx, sy, x, y);\n                case \"mouseenter\":\n                    return new events.MouseEnter(sx, sy, x, y);\n                case \"mouseleave\":\n                    return new events.MouseLeave(sx, sy, x, y);\n                case \"tap\":\n                    return new events.Tap(sx, sy, x, y);\n                case \"doubletap\":\n                    return new events.DoubleTap(sx, sy, x, y);\n                case \"press\":\n                    return new events.Press(sx, sy, x, y);\n                case \"pressup\":\n                    return new events.PressUp(sx, sy, x, y);\n                case \"pan\":\n                    return new events.Pan(sx, sy, x, y, e.deltaX, e.deltaY);\n                case \"panstart\":\n                    return new events.PanStart(sx, sy, x, y);\n                case \"panend\":\n                    return new events.PanEnd(sx, sy, x, y);\n                case \"pinch\":\n                    return new events.Pinch(sx, sy, x, y, e.scale);\n                case \"pinchstart\":\n                    return new events.PinchStart(sx, sy, x, y);\n                case \"pinchend\":\n                    return new events.PinchEnd(sx, sy, x, y);\n                case \"rotate\":\n                    return new events.Rotate(sx, sy, x, y, e.rotation);\n                case \"rotatestart\":\n                    return new events.RotateStart(sx, sy, x, y);\n                case \"rotateend\":\n                    return new events.RotateEnd(sx, sy, x, y);\n                default:\n                    return undefined;\n            }\n        })();\n        if (ev != null)\n            this.plot_view.model.trigger_event(ev);\n    }\n    _get_sxy(event) {\n        const { pageX, pageY } = is_touch(event) ? (event.touches.length != 0 ? event.touches : event.changedTouches)[0] : event;\n        const { left, top } = offset(this.hit_area);\n        return {\n            sx: pageX - left,\n            sy: pageY - top,\n        };\n    }\n    _pan_event(e) {\n        return Object.assign(Object.assign({ type: e.type }, this._get_sxy(e.srcEvent)), { deltaX: e.deltaX, deltaY: e.deltaY, shiftKey: e.srcEvent.shiftKey });\n    }\n    _pinch_event(e) {\n        return Object.assign(Object.assign({ type: e.type }, this._get_sxy(e.srcEvent)), { scale: e.scale, shiftKey: e.srcEvent.shiftKey });\n    }\n    _rotate_event(e) {\n        return Object.assign(Object.assign({ type: e.type }, this._get_sxy(e.srcEvent)), { rotation: e.rotation, shiftKey: e.srcEvent.shiftKey });\n    }\n    _tap_event(e) {\n        return Object.assign(Object.assign({ type: e.type }, this._get_sxy(e.srcEvent)), { shiftKey: e.srcEvent.shiftKey });\n    }\n    _move_event(e) {\n        return Object.assign({ type: e.type }, this._get_sxy(e));\n    }\n    _scroll_event(e) {\n        return Object.assign(Object.assign({ type: e.type }, this._get_sxy(e)), { delta: getDeltaY(e) });\n    }\n    _key_event(e) {\n        return {\n            type: e.type,\n            keyCode: e.keyCode,\n        };\n    }\n    _pan_start(e) {\n        const ev = this._pan_event(e);\n        // back out delta to get original center point\n        ev.sx -= e.deltaX;\n        ev.sy -= e.deltaY;\n        this._trigger(this.pan_start, ev, e.srcEvent);\n    }\n    _pan(e) {\n        this._trigger(this.pan, this._pan_event(e), e.srcEvent);\n    }\n    _pan_end(e) {\n        this._trigger(this.pan_end, this._pan_event(e), e.srcEvent);\n    }\n    _pinch_start(e) {\n        this._trigger(this.pinch_start, this._pinch_event(e), e.srcEvent);\n    }\n    _pinch(e) {\n        this._trigger(this.pinch, this._pinch_event(e), e.srcEvent);\n    }\n    _pinch_end(e) {\n        this._trigger(this.pinch_end, this._pinch_event(e), e.srcEvent);\n    }\n    _rotate_start(e) {\n        this._trigger(this.rotate_start, this._rotate_event(e), e.srcEvent);\n    }\n    _rotate(e) {\n        this._trigger(this.rotate, this._rotate_event(e), e.srcEvent);\n    }\n    _rotate_end(e) {\n        this._trigger(this.rotate_end, this._rotate_event(e), e.srcEvent);\n    }\n    _tap(e) {\n        this._trigger(this.tap, this._tap_event(e), e.srcEvent);\n    }\n    _doubletap(e) {\n        // NOTE: doubletap event triggered unconditionally\n        const ev = this._tap_event(e);\n        this._trigger_bokeh_event(ev);\n        this.trigger(this.doubletap, ev);\n    }\n    _press(e) {\n        this._trigger(this.press, this._tap_event(e), e.srcEvent);\n    }\n    _pressup(e) {\n        this._trigger(this.pressup, this._tap_event(e), e.srcEvent);\n    }\n    _mouse_enter(e) {\n        this._trigger(this.move_enter, this._move_event(e), e);\n    }\n    _mouse_move(e) {\n        this._trigger(this.move, this._move_event(e), e);\n    }\n    _mouse_exit(e) {\n        this._trigger(this.move_exit, this._move_event(e), e);\n    }\n    _mouse_wheel(e) {\n        this._trigger(this.scroll, this._scroll_event(e), e);\n    }\n    _key_down(e) {\n        // NOTE: keyup event triggered unconditionally\n        this.trigger(this.keydown, this._key_event(e));\n    }\n    _key_up(e) {\n        // NOTE: keyup event triggered unconditionally\n        this.trigger(this.keyup, this._key_event(e));\n    }\n}\nUIEvents.__name__ = \"UIEvents\";\n//# sourceMappingURL=ui_events.js.map"]},"metadata":{},"sourceType":"module"}