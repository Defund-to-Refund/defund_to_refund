{"ast":null,"code":"import * as p from \"../../core/properties\";\nimport { Signal0 } from \"../../core/signaling\";\nimport { Model } from \"../../model\";\nimport { InspectTool } from \"./inspectors/inspect_tool\";\nexport class ToolProxy extends Model {\n  constructor(attrs) {\n    super(attrs);\n  }\n\n  static init_ToolProxy() {\n    this.define({\n      tools: [p.Array, []],\n      active: [p.Boolean, false],\n      disabled: [p.Boolean, false]\n    });\n  } // Operates all the tools given only one button\n\n\n  get button_view() {\n    return this.tools[0].button_view;\n  }\n\n  get event_type() {\n    return this.tools[0].event_type;\n  }\n\n  get tooltip() {\n    return this.tools[0].tooltip;\n  }\n\n  get tool_name() {\n    return this.tools[0].tool_name;\n  }\n\n  get icon() {\n    return this.tools[0].computed_icon;\n  }\n\n  get computed_icon() {\n    return this.icon;\n  }\n\n  get toggleable() {\n    const tool = this.tools[0];\n    return tool instanceof InspectTool && tool.toggleable;\n  }\n\n  initialize() {\n    super.initialize();\n    this.do = new Signal0(this, \"do\");\n  }\n\n  connect_signals() {\n    super.connect_signals();\n    this.connect(this.do, () => this.doit());\n    this.connect(this.properties.active.change, () => this.set_active());\n  }\n\n  doit() {\n    for (const tool of this.tools) {\n      tool.do.emit();\n    }\n  }\n\n  set_active() {\n    for (const tool of this.tools) {\n      tool.active = this.active;\n    }\n  }\n\n}\nToolProxy.__name__ = \"ToolProxy\";\nToolProxy.init_ToolProxy();","map":{"version":3,"sources":["/Users/gen/Desktop/defund_to_refund/node_modules/@bokeh/bokehjs/build/js/lib/models/tools/tool_proxy.js"],"names":["p","Signal0","Model","InspectTool","ToolProxy","constructor","attrs","init_ToolProxy","define","tools","Array","active","Boolean","disabled","button_view","event_type","tooltip","tool_name","icon","computed_icon","toggleable","tool","initialize","do","connect_signals","connect","doit","properties","change","set_active","emit","__name__"],"mappings":"AAAA,OAAO,KAAKA,CAAZ,MAAmB,uBAAnB;AACA,SAASC,OAAT,QAAwB,sBAAxB;AACA,SAASC,KAAT,QAAsB,aAAtB;AACA,SAASC,WAAT,QAA4B,2BAA5B;AACA,OAAO,MAAMC,SAAN,SAAwBF,KAAxB,CAA8B;AACjCG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACH;;AACD,SAAOC,cAAP,GAAwB;AACpB,SAAKC,MAAL,CAAY;AACRC,MAAAA,KAAK,EAAE,CAACT,CAAC,CAACU,KAAH,EAAU,EAAV,CADC;AAERC,MAAAA,MAAM,EAAE,CAACX,CAAC,CAACY,OAAH,EAAY,KAAZ,CAFA;AAGRC,MAAAA,QAAQ,EAAE,CAACb,CAAC,CAACY,OAAH,EAAY,KAAZ;AAHF,KAAZ;AAKH,GAVgC,CAWjC;;;AACA,MAAIE,WAAJ,GAAkB;AACd,WAAO,KAAKL,KAAL,CAAW,CAAX,EAAcK,WAArB;AACH;;AACD,MAAIC,UAAJ,GAAiB;AACb,WAAO,KAAKN,KAAL,CAAW,CAAX,EAAcM,UAArB;AACH;;AACD,MAAIC,OAAJ,GAAc;AACV,WAAO,KAAKP,KAAL,CAAW,CAAX,EAAcO,OAArB;AACH;;AACD,MAAIC,SAAJ,GAAgB;AACZ,WAAO,KAAKR,KAAL,CAAW,CAAX,EAAcQ,SAArB;AACH;;AACD,MAAIC,IAAJ,GAAW;AACP,WAAO,KAAKT,KAAL,CAAW,CAAX,EAAcU,aAArB;AACH;;AACD,MAAIA,aAAJ,GAAoB;AAChB,WAAO,KAAKD,IAAZ;AACH;;AACD,MAAIE,UAAJ,GAAiB;AACb,UAAMC,IAAI,GAAG,KAAKZ,KAAL,CAAW,CAAX,CAAb;AACA,WAAOY,IAAI,YAAYlB,WAAhB,IAA+BkB,IAAI,CAACD,UAA3C;AACH;;AACDE,EAAAA,UAAU,GAAG;AACT,UAAMA,UAAN;AACA,SAAKC,EAAL,GAAU,IAAItB,OAAJ,CAAY,IAAZ,EAAkB,IAAlB,CAAV;AACH;;AACDuB,EAAAA,eAAe,GAAG;AACd,UAAMA,eAAN;AACA,SAAKC,OAAL,CAAa,KAAKF,EAAlB,EAAsB,MAAM,KAAKG,IAAL,EAA5B;AACA,SAAKD,OAAL,CAAa,KAAKE,UAAL,CAAgBhB,MAAhB,CAAuBiB,MAApC,EAA4C,MAAM,KAAKC,UAAL,EAAlD;AACH;;AACDH,EAAAA,IAAI,GAAG;AACH,SAAK,MAAML,IAAX,IAAmB,KAAKZ,KAAxB,EAA+B;AAC3BY,MAAAA,IAAI,CAACE,EAAL,CAAQO,IAAR;AACH;AACJ;;AACDD,EAAAA,UAAU,GAAG;AACT,SAAK,MAAMR,IAAX,IAAmB,KAAKZ,KAAxB,EAA+B;AAC3BY,MAAAA,IAAI,CAACV,MAAL,GAAc,KAAKA,MAAnB;AACH;AACJ;;AApDgC;AAsDrCP,SAAS,CAAC2B,QAAV,GAAqB,WAArB;AACA3B,SAAS,CAACG,cAAV","sourcesContent":["import * as p from \"../../core/properties\";\nimport { Signal0 } from \"../../core/signaling\";\nimport { Model } from \"../../model\";\nimport { InspectTool } from \"./inspectors/inspect_tool\";\nexport class ToolProxy extends Model {\n    constructor(attrs) {\n        super(attrs);\n    }\n    static init_ToolProxy() {\n        this.define({\n            tools: [p.Array, []],\n            active: [p.Boolean, false],\n            disabled: [p.Boolean, false],\n        });\n    }\n    // Operates all the tools given only one button\n    get button_view() {\n        return this.tools[0].button_view;\n    }\n    get event_type() {\n        return this.tools[0].event_type;\n    }\n    get tooltip() {\n        return this.tools[0].tooltip;\n    }\n    get tool_name() {\n        return this.tools[0].tool_name;\n    }\n    get icon() {\n        return this.tools[0].computed_icon;\n    }\n    get computed_icon() {\n        return this.icon;\n    }\n    get toggleable() {\n        const tool = this.tools[0];\n        return tool instanceof InspectTool && tool.toggleable;\n    }\n    initialize() {\n        super.initialize();\n        this.do = new Signal0(this, \"do\");\n    }\n    connect_signals() {\n        super.connect_signals();\n        this.connect(this.do, () => this.doit());\n        this.connect(this.properties.active.change, () => this.set_active());\n    }\n    doit() {\n        for (const tool of this.tools) {\n            tool.do.emit();\n        }\n    }\n    set_active() {\n        for (const tool of this.tools) {\n            tool.active = this.active;\n        }\n    }\n}\nToolProxy.__name__ = \"ToolProxy\";\nToolProxy.init_ToolProxy();\n//# sourceMappingURL=tool_proxy.js.map"]},"metadata":{},"sourceType":"module"}