{"ast":null,"code":"\"use strict\";\n\nvar $ = require(\"./slick.jquery\");\n\nvar Slick = require(\"./slick.core\");\n/***\n * A sample AJAX data store implementation.\n * Right now, it's hooked up to load search results from Octopart, but can\n * easily be extended to support any JSONP-compatible backend that accepts paging parameters.\n */\n\n\nfunction RemoteModel() {\n  // private\n  var PAGESIZE = 50;\n  var data = {\n    length: 0\n  };\n  var searchstr = \"\";\n  var sortcol = null;\n  var sortdir = 1;\n  var h_request = null;\n  var req = null; // ajax request\n  // events\n\n  var onDataLoading = new Slick.Event();\n  var onDataLoaded = new Slick.Event();\n\n  function init() {}\n\n  function isDataLoaded(from, to) {\n    for (var i = from; i <= to; i++) {\n      if (data[i] == undefined || data[i] == null) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  function clear() {\n    for (var key in data) {\n      delete data[key];\n    }\n\n    data.length = 0;\n  }\n\n  function ensureData(from, to) {\n    if (req) {\n      req.abort();\n\n      for (var i = req.fromPage; i <= req.toPage; i++) data[i * PAGESIZE] = undefined;\n    }\n\n    if (from < 0) {\n      from = 0;\n    }\n\n    if (data.length > 0) {\n      to = Math.min(to, data.length - 1);\n    }\n\n    var fromPage = Math.floor(from / PAGESIZE);\n    var toPage = Math.floor(to / PAGESIZE);\n\n    while (data[fromPage * PAGESIZE] !== undefined && fromPage < toPage) fromPage++;\n\n    while (data[toPage * PAGESIZE] !== undefined && fromPage < toPage) toPage--;\n\n    if (fromPage > toPage || fromPage == toPage && data[fromPage * PAGESIZE] !== undefined) {\n      // TODO:  look-ahead\n      onDataLoaded.notify({\n        from: from,\n        to: to\n      });\n      return;\n    }\n\n    var url = \"http://octopart.com/api/v3/parts/search?apikey=68b25f31&include[]=short_description&show[]=uid&show[]=manufacturer&show[]=mpn&show[]=brand&show[]=octopart_url&show[]=short_description&q=\" + searchstr + \"&start=\" + fromPage * PAGESIZE + \"&limit=\" + ((toPage - fromPage) * PAGESIZE + PAGESIZE);\n\n    if (sortcol != null) {\n      url += \"&sortby=\" + sortcol + (sortdir > 0 ? \"+asc\" : \"+desc\");\n    }\n\n    if (h_request != null) {\n      clearTimeout(h_request);\n    }\n\n    h_request = setTimeout(function () {\n      for (var i = fromPage; i <= toPage; i++) data[i * PAGESIZE] = null; // null indicates a 'requested but not available yet'\n\n\n      onDataLoading.notify({\n        from: from,\n        to: to\n      });\n      req = $.jsonp({\n        url: url,\n        callbackParameter: \"callback\",\n        cache: true,\n        success: onSuccess,\n        error: function () {\n          onError(fromPage, toPage);\n        }\n      });\n      req.fromPage = fromPage;\n      req.toPage = toPage;\n    }, 50);\n  }\n\n  function onError(fromPage, toPage) {\n    alert(\"error loading pages \" + fromPage + \" to \" + toPage);\n  }\n\n  function onSuccess(resp) {\n    var from = resp.request.start,\n        to = from + resp.results.length;\n    data.length = Math.min(parseInt(resp.hits), 1000); // limitation of the API\n\n    for (var i = 0; i < resp.results.length; i++) {\n      var item = resp.results[i].item;\n      data[from + i] = item;\n      data[from + i].index = from + i;\n    }\n\n    req = null;\n    onDataLoaded.notify({\n      from: from,\n      to: to\n    });\n  }\n\n  function reloadData(from, to) {\n    for (var i = from; i <= to; i++) delete data[i];\n\n    ensureData(from, to);\n  }\n\n  function setSort(column, dir) {\n    sortcol = column;\n    sortdir = dir;\n    clear();\n  }\n\n  function setSearch(str) {\n    searchstr = str;\n    clear();\n  }\n\n  init();\n  return {\n    // properties\n    \"data\": data,\n    // methods\n    \"clear\": clear,\n    \"isDataLoaded\": isDataLoaded,\n    \"ensureData\": ensureData,\n    \"reloadData\": reloadData,\n    \"setSort\": setSort,\n    \"setSearch\": setSearch,\n    // events\n    \"onDataLoading\": onDataLoading,\n    \"onDataLoaded\": onDataLoaded\n  };\n}\n\nmodule.exports = {\n  RemoteModel: RemoteModel\n};","map":{"version":3,"sources":["/Users/gen/Desktop/defund_to_refund/node_modules/@bokeh/slickgrid/slick.remotemodel.js"],"names":["$","require","Slick","RemoteModel","PAGESIZE","data","length","searchstr","sortcol","sortdir","h_request","req","onDataLoading","Event","onDataLoaded","init","isDataLoaded","from","to","i","undefined","clear","key","ensureData","abort","fromPage","toPage","Math","min","floor","notify","url","clearTimeout","setTimeout","jsonp","callbackParameter","cache","success","onSuccess","error","onError","alert","resp","request","start","results","parseInt","hits","item","index","reloadData","setSort","column","dir","setSearch","str","module","exports"],"mappings":"AAAE;;AACA,IAAIA,CAAC,GAAGC,OAAO,CAAC,gBAAD,CAAf;;AACA,IAAIC,KAAK,GAAGD,OAAO,CAAC,cAAD,CAAnB;AAEA;;;;;;;AAKA,SAASE,WAAT,GAAuB;AACrB;AACA,MAAIC,QAAQ,GAAG,EAAf;AACA,MAAIC,IAAI,GAAG;AAACC,IAAAA,MAAM,EAAE;AAAT,GAAX;AACA,MAAIC,SAAS,GAAG,EAAhB;AACA,MAAIC,OAAO,GAAG,IAAd;AACA,MAAIC,OAAO,GAAG,CAAd;AACA,MAAIC,SAAS,GAAG,IAAhB;AACA,MAAIC,GAAG,GAAG,IAAV,CARqB,CAQL;AAEhB;;AACA,MAAIC,aAAa,GAAG,IAAIV,KAAK,CAACW,KAAV,EAApB;AACA,MAAIC,YAAY,GAAG,IAAIZ,KAAK,CAACW,KAAV,EAAnB;;AAGA,WAASE,IAAT,GAAgB,CACf;;AAGD,WAASC,YAAT,CAAsBC,IAAtB,EAA4BC,EAA5B,EAAgC;AAC9B,SAAK,IAAIC,CAAC,GAAGF,IAAb,EAAmBE,CAAC,IAAID,EAAxB,EAA4BC,CAAC,EAA7B,EAAiC;AAC/B,UAAId,IAAI,CAACc,CAAD,CAAJ,IAAWC,SAAX,IAAwBf,IAAI,CAACc,CAAD,CAAJ,IAAW,IAAvC,EAA6C;AAC3C,eAAO,KAAP;AACD;AACF;;AAED,WAAO,IAAP;AACD;;AAGD,WAASE,KAAT,GAAiB;AACf,SAAK,IAAIC,GAAT,IAAgBjB,IAAhB,EAAsB;AACpB,aAAOA,IAAI,CAACiB,GAAD,CAAX;AACD;;AACDjB,IAAAA,IAAI,CAACC,MAAL,GAAc,CAAd;AACD;;AAGD,WAASiB,UAAT,CAAoBN,IAApB,EAA0BC,EAA1B,EAA8B;AAC5B,QAAIP,GAAJ,EAAS;AACPA,MAAAA,GAAG,CAACa,KAAJ;;AACA,WAAK,IAAIL,CAAC,GAAGR,GAAG,CAACc,QAAjB,EAA2BN,CAAC,IAAIR,GAAG,CAACe,MAApC,EAA4CP,CAAC,EAA7C,EACEd,IAAI,CAACc,CAAC,GAAGf,QAAL,CAAJ,GAAqBgB,SAArB;AACH;;AAED,QAAIH,IAAI,GAAG,CAAX,EAAc;AACZA,MAAAA,IAAI,GAAG,CAAP;AACD;;AAED,QAAIZ,IAAI,CAACC,MAAL,GAAc,CAAlB,EAAqB;AACnBY,MAAAA,EAAE,GAAGS,IAAI,CAACC,GAAL,CAASV,EAAT,EAAab,IAAI,CAACC,MAAL,GAAc,CAA3B,CAAL;AACD;;AAED,QAAImB,QAAQ,GAAGE,IAAI,CAACE,KAAL,CAAWZ,IAAI,GAAGb,QAAlB,CAAf;AACA,QAAIsB,MAAM,GAAGC,IAAI,CAACE,KAAL,CAAWX,EAAE,GAAGd,QAAhB,CAAb;;AAEA,WAAOC,IAAI,CAACoB,QAAQ,GAAGrB,QAAZ,CAAJ,KAA8BgB,SAA9B,IAA2CK,QAAQ,GAAGC,MAA7D,EACED,QAAQ;;AAEV,WAAOpB,IAAI,CAACqB,MAAM,GAAGtB,QAAV,CAAJ,KAA4BgB,SAA5B,IAAyCK,QAAQ,GAAGC,MAA3D,EACEA,MAAM;;AAER,QAAID,QAAQ,GAAGC,MAAX,IAAuBD,QAAQ,IAAIC,MAAb,IAAwBrB,IAAI,CAACoB,QAAQ,GAAGrB,QAAZ,CAAJ,KAA8BgB,SAAhF,EAA4F;AAC1F;AACAN,MAAAA,YAAY,CAACgB,MAAb,CAAoB;AAACb,QAAAA,IAAI,EAAEA,IAAP;AAAaC,QAAAA,EAAE,EAAEA;AAAjB,OAApB;AACA;AACD;;AAED,QAAIa,GAAG,GAAG,+LAA+LxB,SAA/L,GAA2M,SAA3M,GAAwNkB,QAAQ,GAAGrB,QAAnO,GAA+O,SAA/O,IAA6P,CAACsB,MAAM,GAAGD,QAAV,IAAsBrB,QAAvB,GAAmCA,QAA/R,CAAV;;AAEA,QAAII,OAAO,IAAI,IAAf,EAAqB;AACnBuB,MAAAA,GAAG,IAAK,aAAavB,OAAb,IAAyBC,OAAO,GAAG,CAAX,GAAgB,MAAhB,GAAyB,OAAjD,CAAR;AACD;;AAED,QAAIC,SAAS,IAAI,IAAjB,EAAuB;AACrBsB,MAAAA,YAAY,CAACtB,SAAD,CAAZ;AACD;;AAEDA,IAAAA,SAAS,GAAGuB,UAAU,CAAC,YAAY;AACjC,WAAK,IAAId,CAAC,GAAGM,QAAb,EAAuBN,CAAC,IAAIO,MAA5B,EAAoCP,CAAC,EAArC,EACEd,IAAI,CAACc,CAAC,GAAGf,QAAL,CAAJ,GAAqB,IAArB,CAF+B,CAEJ;;;AAE7BQ,MAAAA,aAAa,CAACkB,MAAd,CAAqB;AAACb,QAAAA,IAAI,EAAEA,IAAP;AAAaC,QAAAA,EAAE,EAAEA;AAAjB,OAArB;AAEAP,MAAAA,GAAG,GAAGX,CAAC,CAACkC,KAAF,CAAQ;AACZH,QAAAA,GAAG,EAAEA,GADO;AAEZI,QAAAA,iBAAiB,EAAE,UAFP;AAGZC,QAAAA,KAAK,EAAE,IAHK;AAIZC,QAAAA,OAAO,EAAEC,SAJG;AAKZC,QAAAA,KAAK,EAAE,YAAY;AACjBC,UAAAA,OAAO,CAACf,QAAD,EAAWC,MAAX,CAAP;AACD;AAPW,OAAR,CAAN;AASAf,MAAAA,GAAG,CAACc,QAAJ,GAAeA,QAAf;AACAd,MAAAA,GAAG,CAACe,MAAJ,GAAaA,MAAb;AACD,KAjBqB,EAiBnB,EAjBmB,CAAtB;AAkBD;;AAGD,WAASc,OAAT,CAAiBf,QAAjB,EAA2BC,MAA3B,EAAmC;AACjCe,IAAAA,KAAK,CAAC,yBAAyBhB,QAAzB,GAAoC,MAApC,GAA6CC,MAA9C,CAAL;AACD;;AAED,WAASY,SAAT,CAAmBI,IAAnB,EAAyB;AACvB,QAAIzB,IAAI,GAAGyB,IAAI,CAACC,OAAL,CAAaC,KAAxB;AAAA,QAA+B1B,EAAE,GAAGD,IAAI,GAAGyB,IAAI,CAACG,OAAL,CAAavC,MAAxD;AACAD,IAAAA,IAAI,CAACC,MAAL,GAAcqB,IAAI,CAACC,GAAL,CAASkB,QAAQ,CAACJ,IAAI,CAACK,IAAN,CAAjB,EAA6B,IAA7B,CAAd,CAFuB,CAE2B;;AAElD,SAAK,IAAI5B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGuB,IAAI,CAACG,OAAL,CAAavC,MAAjC,EAAyCa,CAAC,EAA1C,EAA8C;AAC5C,UAAI6B,IAAI,GAAGN,IAAI,CAACG,OAAL,CAAa1B,CAAb,EAAgB6B,IAA3B;AAEA3C,MAAAA,IAAI,CAACY,IAAI,GAAGE,CAAR,CAAJ,GAAiB6B,IAAjB;AACA3C,MAAAA,IAAI,CAACY,IAAI,GAAGE,CAAR,CAAJ,CAAe8B,KAAf,GAAuBhC,IAAI,GAAGE,CAA9B;AACD;;AAEDR,IAAAA,GAAG,GAAG,IAAN;AAEAG,IAAAA,YAAY,CAACgB,MAAb,CAAoB;AAACb,MAAAA,IAAI,EAAEA,IAAP;AAAaC,MAAAA,EAAE,EAAEA;AAAjB,KAApB;AACD;;AAGD,WAASgC,UAAT,CAAoBjC,IAApB,EAA0BC,EAA1B,EAA8B;AAC5B,SAAK,IAAIC,CAAC,GAAGF,IAAb,EAAmBE,CAAC,IAAID,EAAxB,EAA4BC,CAAC,EAA7B,EACE,OAAOd,IAAI,CAACc,CAAD,CAAX;;AAEFI,IAAAA,UAAU,CAACN,IAAD,EAAOC,EAAP,CAAV;AACD;;AAGD,WAASiC,OAAT,CAAiBC,MAAjB,EAAyBC,GAAzB,EAA8B;AAC5B7C,IAAAA,OAAO,GAAG4C,MAAV;AACA3C,IAAAA,OAAO,GAAG4C,GAAV;AACAhC,IAAAA,KAAK;AACN;;AAED,WAASiC,SAAT,CAAmBC,GAAnB,EAAwB;AACtBhD,IAAAA,SAAS,GAAGgD,GAAZ;AACAlC,IAAAA,KAAK;AACN;;AAGDN,EAAAA,IAAI;AAEJ,SAAO;AACL;AACA,YAAQV,IAFH;AAIL;AACA,aAASgB,KALJ;AAML,oBAAgBL,YANX;AAOL,kBAAcO,UAPT;AAQL,kBAAc2B,UART;AASL,eAAWC,OATN;AAUL,iBAAaG,SAVR;AAYL;AACA,qBAAiB1C,aAbZ;AAcL,oBAAgBE;AAdX,GAAP;AAgBD;;AAED0C,MAAM,CAACC,OAAP,GAAiB;AACftD,EAAAA,WAAW,EAAEA;AADE,CAAjB","sourcesContent":["  \"use strict\";\n  var $ = require(\"./slick.jquery\");\n  var Slick = require(\"./slick.core\");\n\n  /***\n   * A sample AJAX data store implementation.\n   * Right now, it's hooked up to load search results from Octopart, but can\n   * easily be extended to support any JSONP-compatible backend that accepts paging parameters.\n   */\n  function RemoteModel() {\n    // private\n    var PAGESIZE = 50;\n    var data = {length: 0};\n    var searchstr = \"\";\n    var sortcol = null;\n    var sortdir = 1;\n    var h_request = null;\n    var req = null; // ajax request\n\n    // events\n    var onDataLoading = new Slick.Event();\n    var onDataLoaded = new Slick.Event();\n\n\n    function init() {\n    }\n\n\n    function isDataLoaded(from, to) {\n      for (var i = from; i <= to; i++) {\n        if (data[i] == undefined || data[i] == null) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n\n    function clear() {\n      for (var key in data) {\n        delete data[key];\n      }\n      data.length = 0;\n    }\n\n\n    function ensureData(from, to) {\n      if (req) {\n        req.abort();\n        for (var i = req.fromPage; i <= req.toPage; i++)\n          data[i * PAGESIZE] = undefined;\n      }\n\n      if (from < 0) {\n        from = 0;\n      }\n\n      if (data.length > 0) {\n        to = Math.min(to, data.length - 1);\n      }\n\n      var fromPage = Math.floor(from / PAGESIZE);\n      var toPage = Math.floor(to / PAGESIZE);\n\n      while (data[fromPage * PAGESIZE] !== undefined && fromPage < toPage)\n        fromPage++;\n\n      while (data[toPage * PAGESIZE] !== undefined && fromPage < toPage)\n        toPage--;\n\n      if (fromPage > toPage || ((fromPage == toPage) && data[fromPage * PAGESIZE] !== undefined)) {\n        // TODO:  look-ahead\n        onDataLoaded.notify({from: from, to: to});\n        return;\n      }\n\n      var url = \"http://octopart.com/api/v3/parts/search?apikey=68b25f31&include[]=short_description&show[]=uid&show[]=manufacturer&show[]=mpn&show[]=brand&show[]=octopart_url&show[]=short_description&q=\" + searchstr + \"&start=\" + (fromPage * PAGESIZE) + \"&limit=\" + (((toPage - fromPage) * PAGESIZE) + PAGESIZE);\n\n      if (sortcol != null) {\n        url += (\"&sortby=\" + sortcol + ((sortdir > 0) ? \"+asc\" : \"+desc\"));\n      }\n\n      if (h_request != null) {\n        clearTimeout(h_request);\n      }\n\n      h_request = setTimeout(function () {\n        for (var i = fromPage; i <= toPage; i++)\n          data[i * PAGESIZE] = null; // null indicates a 'requested but not available yet'\n\n        onDataLoading.notify({from: from, to: to});\n\n        req = $.jsonp({\n          url: url,\n          callbackParameter: \"callback\",\n          cache: true,\n          success: onSuccess,\n          error: function () {\n            onError(fromPage, toPage)\n          }\n        });\n        req.fromPage = fromPage;\n        req.toPage = toPage;\n      }, 50);\n    }\n\n\n    function onError(fromPage, toPage) {\n      alert(\"error loading pages \" + fromPage + \" to \" + toPage);\n    }\n\n    function onSuccess(resp) {\n      var from = resp.request.start, to = from + resp.results.length;\n      data.length = Math.min(parseInt(resp.hits),1000); // limitation of the API\n\n      for (var i = 0; i < resp.results.length; i++) {\n        var item = resp.results[i].item;\n\n        data[from + i] = item;\n        data[from + i].index = from + i;\n      }\n\n      req = null;\n\n      onDataLoaded.notify({from: from, to: to});\n    }\n\n\n    function reloadData(from, to) {\n      for (var i = from; i <= to; i++)\n        delete data[i];\n\n      ensureData(from, to);\n    }\n\n\n    function setSort(column, dir) {\n      sortcol = column;\n      sortdir = dir;\n      clear();\n    }\n\n    function setSearch(str) {\n      searchstr = str;\n      clear();\n    }\n\n\n    init();\n\n    return {\n      // properties\n      \"data\": data,\n\n      // methods\n      \"clear\": clear,\n      \"isDataLoaded\": isDataLoaded,\n      \"ensureData\": ensureData,\n      \"reloadData\": reloadData,\n      \"setSort\": setSort,\n      \"setSearch\": setSearch,\n\n      // events\n      \"onDataLoading\": onDataLoading,\n      \"onDataLoaded\": onDataLoaded\n    };\n  }\n\n  module.exports = {\n    RemoteModel: RemoteModel\n  };\n"]},"metadata":{},"sourceType":"script"}