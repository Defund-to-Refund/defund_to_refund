{"ast":null,"code":"import * as p from \"../../../core/properties\";\nimport { input, textarea, select, option, Keys } from \"../../../core/dom\";\nimport { DOMView } from \"../../../core/dom_view\";\nimport { Model } from \"../../../model\";\nimport { DTINDEX_NAME } from \"./data_table\";\nimport { bk_cell_editor } from \"../../../styles/widgets/tables\";\nexport class CellEditorView extends DOMView {\n  constructor(options) {\n    super(Object.assign({\n      model: options.column.model\n    }, options));\n    this.args = options;\n    this.initialize(); // XXX: no build_views()\n\n    this.render(); // XXX: this isn't governed by layout\n  }\n\n  get emptyValue() {\n    return null;\n  }\n\n  initialize() {\n    super.initialize();\n    this.inputEl = this._createInput();\n    this.defaultValue = null;\n  }\n\n  async lazy_initialize() {\n    throw new Error(\"unsupported\");\n  }\n\n  css_classes() {\n    return super.css_classes().concat(bk_cell_editor);\n  }\n\n  render() {\n    super.render();\n    this.args.container.append(this.el);\n    this.el.appendChild(this.inputEl);\n    this.renderEditor();\n    this.disableNavigation();\n  }\n\n  renderEditor() {}\n\n  disableNavigation() {\n    this.inputEl.addEventListener(\"keydown\", event => {\n      switch (event.keyCode) {\n        case Keys.Left:\n        case Keys.Right:\n        case Keys.Up:\n        case Keys.Down:\n        case Keys.PageUp:\n        case Keys.PageDown:\n          event.stopImmediatePropagation();\n      }\n    });\n  }\n\n  destroy() {\n    this.remove();\n  }\n\n  focus() {\n    this.inputEl.focus();\n  }\n\n  show() {}\n\n  hide() {}\n\n  position() {}\n\n  getValue() {\n    return this.inputEl.value;\n  }\n\n  setValue(val) {\n    this.inputEl.value = val;\n  }\n\n  serializeValue() {\n    return this.getValue();\n  }\n\n  isValueChanged() {\n    return !(this.getValue() == \"\" && this.defaultValue == null) && this.getValue() !== this.defaultValue;\n  }\n\n  applyValue(item, state) {\n    const grid_data = this.args.grid.getData();\n    const offset = grid_data.index.indexOf(item[DTINDEX_NAME]);\n    grid_data.setField(offset, this.args.column.field, state);\n  }\n\n  loadValue(item) {\n    const value = item[this.args.column.field];\n    this.defaultValue = value != null ? value : this.emptyValue;\n    this.setValue(this.defaultValue);\n  }\n\n  validateValue(value) {\n    if (this.args.column.validator) {\n      const result = this.args.column.validator(value);\n\n      if (!result.valid) {\n        return result;\n      }\n    }\n\n    return {\n      valid: true,\n      msg: null\n    };\n  }\n\n  validate() {\n    return this.validateValue(this.getValue());\n  }\n\n}\nCellEditorView.__name__ = \"CellEditorView\";\nexport class CellEditor extends Model {}\nCellEditor.__name__ = \"CellEditor\";\nexport class StringEditorView extends CellEditorView {\n  get emptyValue() {\n    return \"\";\n  }\n\n  _createInput() {\n    return input({\n      type: \"text\"\n    });\n  }\n\n  renderEditor() {\n    //completions = @model.completions\n    //if completions.length != 0\n    //  @inputEl.classList.add(\"bk-cell-editor-completion\")\n    //  $(@inputEl).autocomplete({source: completions})\n    //  $(@inputEl).autocomplete(\"widget\")\n    this.inputEl.focus();\n    this.inputEl.select();\n  }\n\n  loadValue(item) {\n    super.loadValue(item);\n    this.inputEl.defaultValue = this.defaultValue;\n    this.inputEl.select();\n  }\n\n}\nStringEditorView.__name__ = \"StringEditorView\";\nexport class StringEditor extends CellEditor {\n  static init_StringEditor() {\n    this.prototype.default_view = StringEditorView;\n    this.define({\n      completions: [p.Array, []]\n    });\n  }\n\n}\nStringEditor.__name__ = \"StringEditor\";\nStringEditor.init_StringEditor();\nexport class TextEditorView extends CellEditorView {\n  _createInput() {\n    return textarea();\n  }\n\n}\nTextEditorView.__name__ = \"TextEditorView\";\nexport class TextEditor extends CellEditor {\n  static init_TextEditor() {\n    this.prototype.default_view = TextEditorView;\n  }\n\n}\nTextEditor.__name__ = \"TextEditor\";\nTextEditor.init_TextEditor();\nexport class SelectEditorView extends CellEditorView {\n  _createInput() {\n    return select();\n  }\n\n  renderEditor() {\n    for (const opt of this.model.options) {\n      this.inputEl.appendChild(option({\n        value: opt\n      }, opt));\n    }\n\n    this.focus();\n  }\n\n}\nSelectEditorView.__name__ = \"SelectEditorView\";\nexport class SelectEditor extends CellEditor {\n  static init_SelectEditor() {\n    this.prototype.default_view = SelectEditorView;\n    this.define({\n      options: [p.Array, []]\n    });\n  }\n\n}\nSelectEditor.__name__ = \"SelectEditor\";\nSelectEditor.init_SelectEditor();\nexport class PercentEditorView extends CellEditorView {\n  _createInput() {\n    return input({\n      type: \"text\"\n    });\n  }\n\n}\nPercentEditorView.__name__ = \"PercentEditorView\";\nexport class PercentEditor extends CellEditor {\n  static init_PercentEditor() {\n    this.prototype.default_view = PercentEditorView;\n  }\n\n}\nPercentEditor.__name__ = \"PercentEditor\";\nPercentEditor.init_PercentEditor();\nexport class CheckboxEditorView extends CellEditorView {\n  _createInput() {\n    return input({\n      type: \"checkbox\",\n      value: \"true\"\n    });\n  }\n\n  renderEditor() {\n    this.focus();\n  }\n\n  loadValue(item) {\n    this.defaultValue = !!item[this.args.column.field];\n    this.inputEl.checked = this.defaultValue;\n  }\n\n  serializeValue() {\n    return this.inputEl.checked;\n  }\n\n}\nCheckboxEditorView.__name__ = \"CheckboxEditorView\";\nexport class CheckboxEditor extends CellEditor {\n  static init_CheckboxEditor() {\n    this.prototype.default_view = CheckboxEditorView;\n  }\n\n}\nCheckboxEditor.__name__ = \"CheckboxEditor\";\nCheckboxEditor.init_CheckboxEditor();\nexport class IntEditorView extends CellEditorView {\n  _createInput() {\n    return input({\n      type: \"text\"\n    });\n  }\n\n  renderEditor() {\n    //$(@inputEl).spinner({step: @model.step})\n    this.inputEl.focus();\n    this.inputEl.select();\n  }\n\n  remove() {\n    //$(@inputEl).spinner(\"destroy\")\n    super.remove();\n  }\n\n  serializeValue() {\n    return parseInt(this.getValue(), 10) || 0;\n  }\n\n  loadValue(item) {\n    super.loadValue(item);\n    this.inputEl.defaultValue = this.defaultValue;\n    this.inputEl.select();\n  }\n\n  validateValue(value) {\n    if (isNaN(value)) return {\n      valid: false,\n      msg: \"Please enter a valid integer\"\n    };else return super.validateValue(value);\n  }\n\n}\nIntEditorView.__name__ = \"IntEditorView\";\nexport class IntEditor extends CellEditor {\n  static init_IntEditor() {\n    this.prototype.default_view = IntEditorView;\n    this.define({\n      step: [p.Number, 1]\n    });\n  }\n\n}\nIntEditor.__name__ = \"IntEditor\";\nIntEditor.init_IntEditor();\nexport class NumberEditorView extends CellEditorView {\n  _createInput() {\n    return input({\n      type: \"text\"\n    });\n  }\n\n  renderEditor() {\n    //$(@inputEl).spinner({step: @model.step})\n    this.inputEl.focus();\n    this.inputEl.select();\n  }\n\n  remove() {\n    //$(@inputEl).spinner(\"destroy\")\n    super.remove();\n  }\n\n  serializeValue() {\n    return parseFloat(this.getValue()) || 0.0;\n  }\n\n  loadValue(item) {\n    super.loadValue(item);\n    this.inputEl.defaultValue = this.defaultValue;\n    this.inputEl.select();\n  }\n\n  validateValue(value) {\n    if (isNaN(value)) return {\n      valid: false,\n      msg: \"Please enter a valid number\"\n    };else return super.validateValue(value);\n  }\n\n}\nNumberEditorView.__name__ = \"NumberEditorView\";\nexport class NumberEditor extends CellEditor {\n  static init_NumberEditor() {\n    this.prototype.default_view = NumberEditorView;\n    this.define({\n      step: [p.Number, 0.01]\n    });\n  }\n\n}\nNumberEditor.__name__ = \"NumberEditor\";\nNumberEditor.init_NumberEditor();\nexport class TimeEditorView extends CellEditorView {\n  _createInput() {\n    return input({\n      type: \"text\"\n    });\n  }\n\n}\nTimeEditorView.__name__ = \"TimeEditorView\";\nexport class TimeEditor extends CellEditor {\n  static init_TimeEditor() {\n    this.prototype.default_view = TimeEditorView;\n  }\n\n}\nTimeEditor.__name__ = \"TimeEditor\";\nTimeEditor.init_TimeEditor();\nexport class DateEditorView extends CellEditorView {\n  _createInput() {\n    return input({\n      type: \"text\"\n    });\n  }\n\n  get emptyValue() {\n    return new Date();\n  }\n\n  renderEditor() {\n    //this.calendarOpen = false\n    //@$datepicker = $(@inputEl).datepicker({\n    //  showOn: \"button\"\n    //  buttonImageOnly: true\n    //  beforeShow: () => @calendarOpen = true\n    //  onClose: () => @calendarOpen = false\n    //})\n    //@$datepicker.siblings(\".ui-datepicker-trigger\").css(\"vertical-align\": \"middle\")\n    //@$datepicker.width(@$datepicker.width() - (14 + 2*4 + 4)) # img width + margins + edge distance\n    this.inputEl.focus();\n    this.inputEl.select();\n  }\n\n  destroy() {\n    //$.datepicker.dpDiv.stop(true, true)\n    //@$datepicker.datepicker(\"hide\")\n    //@$datepicker.datepicker(\"destroy\")\n    super.destroy();\n  }\n\n  show() {\n    //if @calendarOpen\n    //  $.datepicker.dpDiv.stop(true, true).show()\n    super.show();\n  }\n\n  hide() {\n    //if @calendarOpen\n    //  $.datepicker.dpDiv.stop(true, true).hide()\n    super.hide();\n  }\n\n  position()\n  /*_position*/\n  {\n    //if @calendarOpen\n    //  $.datepicker.dpDiv.css(top: position.top + 30, left: position.left)\n    return super.position();\n  }\n\n  getValue() {//return @$datepicker.datepicker(\"getDate\").getTime()\n  }\n\n  setValue(_val) {//@$datepicker.datepicker(\"setDate\", new Date(val))\n  }\n\n}\nDateEditorView.__name__ = \"DateEditorView\";\nexport class DateEditor extends CellEditor {\n  static init_DateEditor() {\n    this.prototype.default_view = DateEditorView;\n  }\n\n}\nDateEditor.__name__ = \"DateEditor\";\nDateEditor.init_DateEditor();","map":{"version":3,"sources":["/Users/gen/Desktop/defund_to_refund/node_modules/@bokeh/bokehjs/build/js/lib/models/widgets/tables/cell_editors.js"],"names":["p","input","textarea","select","option","Keys","DOMView","Model","DTINDEX_NAME","bk_cell_editor","CellEditorView","constructor","options","Object","assign","model","column","args","initialize","render","emptyValue","inputEl","_createInput","defaultValue","lazy_initialize","Error","css_classes","concat","container","append","el","appendChild","renderEditor","disableNavigation","addEventListener","event","keyCode","Left","Right","Up","Down","PageUp","PageDown","stopImmediatePropagation","destroy","remove","focus","show","hide","position","getValue","value","setValue","val","serializeValue","isValueChanged","applyValue","item","state","grid_data","grid","getData","offset","index","indexOf","setField","field","loadValue","validateValue","validator","result","valid","msg","validate","__name__","CellEditor","StringEditorView","type","StringEditor","init_StringEditor","prototype","default_view","define","completions","Array","TextEditorView","TextEditor","init_TextEditor","SelectEditorView","opt","SelectEditor","init_SelectEditor","PercentEditorView","PercentEditor","init_PercentEditor","CheckboxEditorView","checked","CheckboxEditor","init_CheckboxEditor","IntEditorView","parseInt","isNaN","IntEditor","init_IntEditor","step","Number","NumberEditorView","parseFloat","NumberEditor","init_NumberEditor","TimeEditorView","TimeEditor","init_TimeEditor","DateEditorView","Date","_val","DateEditor","init_DateEditor"],"mappings":"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","sourcesContent":["import * as p from \"../../../core/properties\";\nimport { input, textarea, select, option, Keys } from \"../../../core/dom\";\nimport { DOMView } from \"../../../core/dom_view\";\nimport { Model } from \"../../../model\";\nimport { DTINDEX_NAME } from \"./data_table\";\nimport { bk_cell_editor } from \"../../../styles/widgets/tables\";\nexport class CellEditorView extends DOMView {\n    constructor(options) {\n        super(Object.assign({ model: options.column.model }, options));\n        this.args = options;\n        this.initialize(); // XXX: no build_views()\n        this.render(); // XXX: this isn't governed by layout\n    }\n    get emptyValue() {\n        return null;\n    }\n    initialize() {\n        super.initialize();\n        this.inputEl = this._createInput();\n        this.defaultValue = null;\n    }\n    async lazy_initialize() {\n        throw new Error(\"unsupported\");\n    }\n    css_classes() {\n        return super.css_classes().concat(bk_cell_editor);\n    }\n    render() {\n        super.render();\n        this.args.container.append(this.el);\n        this.el.appendChild(this.inputEl);\n        this.renderEditor();\n        this.disableNavigation();\n    }\n    renderEditor() { }\n    disableNavigation() {\n        this.inputEl.addEventListener(\"keydown\", (event) => {\n            switch (event.keyCode) {\n                case Keys.Left:\n                case Keys.Right:\n                case Keys.Up:\n                case Keys.Down:\n                case Keys.PageUp:\n                case Keys.PageDown:\n                    event.stopImmediatePropagation();\n            }\n        });\n    }\n    destroy() {\n        this.remove();\n    }\n    focus() {\n        this.inputEl.focus();\n    }\n    show() { }\n    hide() { }\n    position() { }\n    getValue() {\n        return this.inputEl.value;\n    }\n    setValue(val) {\n        this.inputEl.value = val;\n    }\n    serializeValue() {\n        return this.getValue();\n    }\n    isValueChanged() {\n        return !(this.getValue() == \"\" && this.defaultValue == null) && this.getValue() !== this.defaultValue;\n    }\n    applyValue(item, state) {\n        const grid_data = this.args.grid.getData();\n        const offset = grid_data.index.indexOf(item[DTINDEX_NAME]);\n        grid_data.setField(offset, this.args.column.field, state);\n    }\n    loadValue(item) {\n        const value = item[this.args.column.field];\n        this.defaultValue = value != null ? value : this.emptyValue;\n        this.setValue(this.defaultValue);\n    }\n    validateValue(value) {\n        if (this.args.column.validator) {\n            const result = this.args.column.validator(value);\n            if (!result.valid) {\n                return result;\n            }\n        }\n        return { valid: true, msg: null };\n    }\n    validate() {\n        return this.validateValue(this.getValue());\n    }\n}\nCellEditorView.__name__ = \"CellEditorView\";\nexport class CellEditor extends Model {\n}\nCellEditor.__name__ = \"CellEditor\";\nexport class StringEditorView extends CellEditorView {\n    get emptyValue() {\n        return \"\";\n    }\n    _createInput() {\n        return input({ type: \"text\" });\n    }\n    renderEditor() {\n        //completions = @model.completions\n        //if completions.length != 0\n        //  @inputEl.classList.add(\"bk-cell-editor-completion\")\n        //  $(@inputEl).autocomplete({source: completions})\n        //  $(@inputEl).autocomplete(\"widget\")\n        this.inputEl.focus();\n        this.inputEl.select();\n    }\n    loadValue(item) {\n        super.loadValue(item);\n        this.inputEl.defaultValue = this.defaultValue;\n        this.inputEl.select();\n    }\n}\nStringEditorView.__name__ = \"StringEditorView\";\nexport class StringEditor extends CellEditor {\n    static init_StringEditor() {\n        this.prototype.default_view = StringEditorView;\n        this.define({\n            completions: [p.Array, []],\n        });\n    }\n}\nStringEditor.__name__ = \"StringEditor\";\nStringEditor.init_StringEditor();\nexport class TextEditorView extends CellEditorView {\n    _createInput() {\n        return textarea();\n    }\n}\nTextEditorView.__name__ = \"TextEditorView\";\nexport class TextEditor extends CellEditor {\n    static init_TextEditor() {\n        this.prototype.default_view = TextEditorView;\n    }\n}\nTextEditor.__name__ = \"TextEditor\";\nTextEditor.init_TextEditor();\nexport class SelectEditorView extends CellEditorView {\n    _createInput() {\n        return select();\n    }\n    renderEditor() {\n        for (const opt of this.model.options) {\n            this.inputEl.appendChild(option({ value: opt }, opt));\n        }\n        this.focus();\n    }\n}\nSelectEditorView.__name__ = \"SelectEditorView\";\nexport class SelectEditor extends CellEditor {\n    static init_SelectEditor() {\n        this.prototype.default_view = SelectEditorView;\n        this.define({\n            options: [p.Array, []],\n        });\n    }\n}\nSelectEditor.__name__ = \"SelectEditor\";\nSelectEditor.init_SelectEditor();\nexport class PercentEditorView extends CellEditorView {\n    _createInput() {\n        return input({ type: \"text\" });\n    }\n}\nPercentEditorView.__name__ = \"PercentEditorView\";\nexport class PercentEditor extends CellEditor {\n    static init_PercentEditor() {\n        this.prototype.default_view = PercentEditorView;\n    }\n}\nPercentEditor.__name__ = \"PercentEditor\";\nPercentEditor.init_PercentEditor();\nexport class CheckboxEditorView extends CellEditorView {\n    _createInput() {\n        return input({ type: \"checkbox\", value: \"true\" });\n    }\n    renderEditor() {\n        this.focus();\n    }\n    loadValue(item) {\n        this.defaultValue = !!item[this.args.column.field];\n        this.inputEl.checked = this.defaultValue;\n    }\n    serializeValue() {\n        return this.inputEl.checked;\n    }\n}\nCheckboxEditorView.__name__ = \"CheckboxEditorView\";\nexport class CheckboxEditor extends CellEditor {\n    static init_CheckboxEditor() {\n        this.prototype.default_view = CheckboxEditorView;\n    }\n}\nCheckboxEditor.__name__ = \"CheckboxEditor\";\nCheckboxEditor.init_CheckboxEditor();\nexport class IntEditorView extends CellEditorView {\n    _createInput() {\n        return input({ type: \"text\" });\n    }\n    renderEditor() {\n        //$(@inputEl).spinner({step: @model.step})\n        this.inputEl.focus();\n        this.inputEl.select();\n    }\n    remove() {\n        //$(@inputEl).spinner(\"destroy\")\n        super.remove();\n    }\n    serializeValue() {\n        return parseInt(this.getValue(), 10) || 0;\n    }\n    loadValue(item) {\n        super.loadValue(item);\n        this.inputEl.defaultValue = this.defaultValue;\n        this.inputEl.select();\n    }\n    validateValue(value) {\n        if (isNaN(value))\n            return { valid: false, msg: \"Please enter a valid integer\" };\n        else\n            return super.validateValue(value);\n    }\n}\nIntEditorView.__name__ = \"IntEditorView\";\nexport class IntEditor extends CellEditor {\n    static init_IntEditor() {\n        this.prototype.default_view = IntEditorView;\n        this.define({\n            step: [p.Number, 1],\n        });\n    }\n}\nIntEditor.__name__ = \"IntEditor\";\nIntEditor.init_IntEditor();\nexport class NumberEditorView extends CellEditorView {\n    _createInput() {\n        return input({ type: \"text\" });\n    }\n    renderEditor() {\n        //$(@inputEl).spinner({step: @model.step})\n        this.inputEl.focus();\n        this.inputEl.select();\n    }\n    remove() {\n        //$(@inputEl).spinner(\"destroy\")\n        super.remove();\n    }\n    serializeValue() {\n        return parseFloat(this.getValue()) || 0.0;\n    }\n    loadValue(item) {\n        super.loadValue(item);\n        this.inputEl.defaultValue = this.defaultValue;\n        this.inputEl.select();\n    }\n    validateValue(value) {\n        if (isNaN(value))\n            return { valid: false, msg: \"Please enter a valid number\" };\n        else\n            return super.validateValue(value);\n    }\n}\nNumberEditorView.__name__ = \"NumberEditorView\";\nexport class NumberEditor extends CellEditor {\n    static init_NumberEditor() {\n        this.prototype.default_view = NumberEditorView;\n        this.define({\n            step: [p.Number, 0.01],\n        });\n    }\n}\nNumberEditor.__name__ = \"NumberEditor\";\nNumberEditor.init_NumberEditor();\nexport class TimeEditorView extends CellEditorView {\n    _createInput() {\n        return input({ type: \"text\" });\n    }\n}\nTimeEditorView.__name__ = \"TimeEditorView\";\nexport class TimeEditor extends CellEditor {\n    static init_TimeEditor() {\n        this.prototype.default_view = TimeEditorView;\n    }\n}\nTimeEditor.__name__ = \"TimeEditor\";\nTimeEditor.init_TimeEditor();\nexport class DateEditorView extends CellEditorView {\n    _createInput() {\n        return input({ type: \"text\" });\n    }\n    get emptyValue() {\n        return new Date();\n    }\n    renderEditor() {\n        //this.calendarOpen = false\n        //@$datepicker = $(@inputEl).datepicker({\n        //  showOn: \"button\"\n        //  buttonImageOnly: true\n        //  beforeShow: () => @calendarOpen = true\n        //  onClose: () => @calendarOpen = false\n        //})\n        //@$datepicker.siblings(\".ui-datepicker-trigger\").css(\"vertical-align\": \"middle\")\n        //@$datepicker.width(@$datepicker.width() - (14 + 2*4 + 4)) # img width + margins + edge distance\n        this.inputEl.focus();\n        this.inputEl.select();\n    }\n    destroy() {\n        //$.datepicker.dpDiv.stop(true, true)\n        //@$datepicker.datepicker(\"hide\")\n        //@$datepicker.datepicker(\"destroy\")\n        super.destroy();\n    }\n    show() {\n        //if @calendarOpen\n        //  $.datepicker.dpDiv.stop(true, true).show()\n        super.show();\n    }\n    hide() {\n        //if @calendarOpen\n        //  $.datepicker.dpDiv.stop(true, true).hide()\n        super.hide();\n    }\n    position( /*_position*/) {\n        //if @calendarOpen\n        //  $.datepicker.dpDiv.css(top: position.top + 30, left: position.left)\n        return super.position();\n    }\n    getValue() {\n        //return @$datepicker.datepicker(\"getDate\").getTime()\n    }\n    setValue(_val) {\n        //@$datepicker.datepicker(\"setDate\", new Date(val))\n    }\n}\nDateEditorView.__name__ = \"DateEditorView\";\nexport class DateEditor extends CellEditor {\n    static init_DateEditor() {\n        this.prototype.default_view = DateEditorView;\n    }\n}\nDateEditor.__name__ = \"DateEditor\";\nDateEditor.init_DateEditor();\n//# sourceMappingURL=cell_editors.js.map"]},"metadata":{},"sourceType":"module"}