{"ast":null,"code":"import { Keys } from \"../../../core/dom\";\nimport * as p from \"../../../core/properties\";\nimport { EditTool, EditToolView } from \"./edit_tool\";\nimport { bk_tool_icon_box_edit } from \"../../../styles/icons\";\nexport class BoxEditToolView extends EditToolView {\n  _tap(ev) {\n    if (this._draw_basepoint != null || this._basepoint != null) return;\n    const append = ev.shiftKey;\n\n    this._select_event(ev, append, this.model.renderers);\n  }\n\n  _keyup(ev) {\n    if (!this.model.active || !this._mouse_in_frame) return;\n\n    for (const renderer of this.model.renderers) {\n      if (ev.keyCode === Keys.Backspace) {\n        this._delete_selected(renderer);\n      } else if (ev.keyCode == Keys.Esc) {\n        // Type properly once selection_manager is typed\n        const cds = renderer.data_source;\n        cds.selection_manager.clear();\n      }\n    }\n  }\n\n  _set_extent([sx0, sx1], [sy0, sy1], append, emit = false) {\n    const renderer = this.model.renderers[0];\n    const frame = this.plot_view.frame; // Type once dataspecs are typed\n\n    const glyph = renderer.glyph;\n    const cds = renderer.data_source;\n    const xscale = frame.xscales[renderer.x_range_name];\n    const yscale = frame.yscales[renderer.y_range_name];\n    const [x0, x1] = xscale.r_invert(sx0, sx1);\n    const [y0, y1] = yscale.r_invert(sy0, sy1);\n    const [x, y] = [(x0 + x1) / 2, (y0 + y1) / 2];\n    const [w, h] = [x1 - x0, y1 - y0];\n    const [xkey, ykey] = [glyph.x.field, glyph.y.field];\n    const [wkey, hkey] = [glyph.width.field, glyph.height.field];\n\n    if (append) {\n      this._pop_glyphs(cds, this.model.num_objects);\n\n      if (xkey) cds.get_array(xkey).push(x);\n      if (ykey) cds.get_array(ykey).push(y);\n      if (wkey) cds.get_array(wkey).push(w);\n      if (hkey) cds.get_array(hkey).push(h);\n\n      this._pad_empty_columns(cds, [xkey, ykey, wkey, hkey]);\n    } else {\n      const index = cds.data[xkey].length - 1;\n      if (xkey) cds.data[xkey][index] = x;\n      if (ykey) cds.data[ykey][index] = y;\n      if (wkey) cds.data[wkey][index] = w;\n      if (hkey) cds.data[hkey][index] = h;\n    }\n\n    this._emit_cds_changes(cds, true, false, emit);\n  }\n\n  _update_box(ev, append = false, emit = false) {\n    if (this._draw_basepoint == null) return;\n    const curpoint = [ev.sx, ev.sy];\n    const frame = this.plot_view.frame;\n    const dims = this.model.dimensions;\n\n    const limits = this.model._get_dim_limits(this._draw_basepoint, curpoint, frame, dims);\n\n    if (limits != null) {\n      const [sxlim, sylim] = limits;\n\n      this._set_extent(sxlim, sylim, append, emit);\n    }\n  }\n\n  _doubletap(ev) {\n    if (!this.model.active) return;\n\n    if (this._draw_basepoint != null) {\n      this._update_box(ev, false, true);\n\n      this._draw_basepoint = null;\n    } else {\n      this._draw_basepoint = [ev.sx, ev.sy];\n\n      this._select_event(ev, true, this.model.renderers);\n\n      this._update_box(ev, true, false);\n    }\n  }\n\n  _move(ev) {\n    this._update_box(ev, false, false);\n  }\n\n  _pan_start(ev) {\n    if (ev.shiftKey) {\n      if (this._draw_basepoint != null) return;\n      this._draw_basepoint = [ev.sx, ev.sy];\n\n      this._update_box(ev, true, false);\n    } else {\n      if (this._basepoint != null) return;\n\n      this._select_event(ev, true, this.model.renderers);\n\n      this._basepoint = [ev.sx, ev.sy];\n    }\n  }\n\n  _pan(ev, append = false, emit = false) {\n    if (ev.shiftKey) {\n      if (this._draw_basepoint == null) return;\n\n      this._update_box(ev, append, emit);\n    } else {\n      if (this._basepoint == null) return;\n\n      this._drag_points(ev, this.model.renderers);\n    }\n  }\n\n  _pan_end(ev) {\n    this._pan(ev, false, true);\n\n    if (ev.shiftKey) {\n      this._draw_basepoint = null;\n    } else {\n      this._basepoint = null;\n\n      for (const renderer of this.model.renderers) this._emit_cds_changes(renderer.data_source, false, true, true);\n    }\n  }\n\n}\nBoxEditToolView.__name__ = \"BoxEditToolView\";\nexport class BoxEditTool extends EditTool {\n  constructor(attrs) {\n    super(attrs);\n    this.tool_name = \"Box Edit Tool\";\n    this.icon = bk_tool_icon_box_edit;\n    this.event_type = [\"tap\", \"pan\", \"move\"];\n    this.default_order = 1;\n  }\n\n  static init_BoxEditTool() {\n    this.prototype.default_view = BoxEditToolView;\n    this.define({\n      dimensions: [p.Dimensions, \"both\"],\n      num_objects: [p.Int, 0]\n    });\n  }\n\n}\nBoxEditTool.__name__ = \"BoxEditTool\";\nBoxEditTool.init_BoxEditTool();","map":{"version":3,"sources":["/Users/gen/Desktop/defund_to_refund/node_modules/@bokeh/bokehjs/build/js/lib/models/tools/edit/box_edit_tool.js"],"names":["Keys","p","EditTool","EditToolView","bk_tool_icon_box_edit","BoxEditToolView","_tap","ev","_draw_basepoint","_basepoint","append","shiftKey","_select_event","model","renderers","_keyup","active","_mouse_in_frame","renderer","keyCode","Backspace","_delete_selected","Esc","cds","data_source","selection_manager","clear","_set_extent","sx0","sx1","sy0","sy1","emit","frame","plot_view","glyph","xscale","xscales","x_range_name","yscale","yscales","y_range_name","x0","x1","r_invert","y0","y1","x","y","w","h","xkey","ykey","field","wkey","hkey","width","height","_pop_glyphs","num_objects","get_array","push","_pad_empty_columns","index","data","length","_emit_cds_changes","_update_box","curpoint","sx","sy","dims","dimensions","limits","_get_dim_limits","sxlim","sylim","_doubletap","_move","_pan_start","_pan","_drag_points","_pan_end","__name__","BoxEditTool","constructor","attrs","tool_name","icon","event_type","default_order","init_BoxEditTool","prototype","default_view","define","Dimensions","Int"],"mappings":"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","sourcesContent":["import { Keys } from \"../../../core/dom\";\nimport * as p from \"../../../core/properties\";\nimport { EditTool, EditToolView } from \"./edit_tool\";\nimport { bk_tool_icon_box_edit } from \"../../../styles/icons\";\nexport class BoxEditToolView extends EditToolView {\n    _tap(ev) {\n        if ((this._draw_basepoint != null) || (this._basepoint != null))\n            return;\n        const append = ev.shiftKey;\n        this._select_event(ev, append, this.model.renderers);\n    }\n    _keyup(ev) {\n        if (!this.model.active || !this._mouse_in_frame)\n            return;\n        for (const renderer of this.model.renderers) {\n            if (ev.keyCode === Keys.Backspace) {\n                this._delete_selected(renderer);\n            }\n            else if (ev.keyCode == Keys.Esc) {\n                // Type properly once selection_manager is typed\n                const cds = renderer.data_source;\n                cds.selection_manager.clear();\n            }\n        }\n    }\n    _set_extent([sx0, sx1], [sy0, sy1], append, emit = false) {\n        const renderer = this.model.renderers[0];\n        const frame = this.plot_view.frame;\n        // Type once dataspecs are typed\n        const glyph = renderer.glyph;\n        const cds = renderer.data_source;\n        const xscale = frame.xscales[renderer.x_range_name];\n        const yscale = frame.yscales[renderer.y_range_name];\n        const [x0, x1] = xscale.r_invert(sx0, sx1);\n        const [y0, y1] = yscale.r_invert(sy0, sy1);\n        const [x, y] = [(x0 + x1) / 2, (y0 + y1) / 2];\n        const [w, h] = [x1 - x0, y1 - y0];\n        const [xkey, ykey] = [glyph.x.field, glyph.y.field];\n        const [wkey, hkey] = [glyph.width.field, glyph.height.field];\n        if (append) {\n            this._pop_glyphs(cds, this.model.num_objects);\n            if (xkey)\n                cds.get_array(xkey).push(x);\n            if (ykey)\n                cds.get_array(ykey).push(y);\n            if (wkey)\n                cds.get_array(wkey).push(w);\n            if (hkey)\n                cds.get_array(hkey).push(h);\n            this._pad_empty_columns(cds, [xkey, ykey, wkey, hkey]);\n        }\n        else {\n            const index = cds.data[xkey].length - 1;\n            if (xkey)\n                cds.data[xkey][index] = x;\n            if (ykey)\n                cds.data[ykey][index] = y;\n            if (wkey)\n                cds.data[wkey][index] = w;\n            if (hkey)\n                cds.data[hkey][index] = h;\n        }\n        this._emit_cds_changes(cds, true, false, emit);\n    }\n    _update_box(ev, append = false, emit = false) {\n        if (this._draw_basepoint == null)\n            return;\n        const curpoint = [ev.sx, ev.sy];\n        const frame = this.plot_view.frame;\n        const dims = this.model.dimensions;\n        const limits = this.model._get_dim_limits(this._draw_basepoint, curpoint, frame, dims);\n        if (limits != null) {\n            const [sxlim, sylim] = limits;\n            this._set_extent(sxlim, sylim, append, emit);\n        }\n    }\n    _doubletap(ev) {\n        if (!this.model.active)\n            return;\n        if (this._draw_basepoint != null) {\n            this._update_box(ev, false, true);\n            this._draw_basepoint = null;\n        }\n        else {\n            this._draw_basepoint = [ev.sx, ev.sy];\n            this._select_event(ev, true, this.model.renderers);\n            this._update_box(ev, true, false);\n        }\n    }\n    _move(ev) {\n        this._update_box(ev, false, false);\n    }\n    _pan_start(ev) {\n        if (ev.shiftKey) {\n            if (this._draw_basepoint != null)\n                return;\n            this._draw_basepoint = [ev.sx, ev.sy];\n            this._update_box(ev, true, false);\n        }\n        else {\n            if (this._basepoint != null)\n                return;\n            this._select_event(ev, true, this.model.renderers);\n            this._basepoint = [ev.sx, ev.sy];\n        }\n    }\n    _pan(ev, append = false, emit = false) {\n        if (ev.shiftKey) {\n            if (this._draw_basepoint == null)\n                return;\n            this._update_box(ev, append, emit);\n        }\n        else {\n            if (this._basepoint == null)\n                return;\n            this._drag_points(ev, this.model.renderers);\n        }\n    }\n    _pan_end(ev) {\n        this._pan(ev, false, true);\n        if (ev.shiftKey) {\n            this._draw_basepoint = null;\n        }\n        else {\n            this._basepoint = null;\n            for (const renderer of this.model.renderers)\n                this._emit_cds_changes(renderer.data_source, false, true, true);\n        }\n    }\n}\nBoxEditToolView.__name__ = \"BoxEditToolView\";\nexport class BoxEditTool extends EditTool {\n    constructor(attrs) {\n        super(attrs);\n        this.tool_name = \"Box Edit Tool\";\n        this.icon = bk_tool_icon_box_edit;\n        this.event_type = [\"tap\", \"pan\", \"move\"];\n        this.default_order = 1;\n    }\n    static init_BoxEditTool() {\n        this.prototype.default_view = BoxEditToolView;\n        this.define({\n            dimensions: [p.Dimensions, \"both\"],\n            num_objects: [p.Int, 0],\n        });\n    }\n}\nBoxEditTool.__name__ = \"BoxEditTool\";\nBoxEditTool.init_BoxEditTool();\n//# sourceMappingURL=box_edit_tool.js.map"]},"metadata":{},"sourceType":"module"}