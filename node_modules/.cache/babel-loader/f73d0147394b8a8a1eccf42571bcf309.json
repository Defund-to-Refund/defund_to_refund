{"ast":null,"code":"import { Annotation, AnnotationView } from \"./annotation\";\nimport { Signal0 } from \"../../core/signaling\";\nimport { display, undisplay } from \"../../core/dom\";\nimport * as p from \"../../core/properties\";\nimport { BBox } from \"../../core/util/bbox\";\nimport { bk_shading } from \"../../styles/annotations\";\nexport const EDGE_TOLERANCE = 2.5;\nexport class BoxAnnotationView extends AnnotationView {\n  initialize() {\n    super.initialize();\n    this.plot_view.canvas_view.add_overlay(this.el);\n    this.el.classList.add(bk_shading);\n    undisplay(this.el);\n  }\n\n  connect_signals() {\n    super.connect_signals(); // need to respond to either normal BB change events or silent\n    // \"data only updates\" that tools might want to use\n\n    if (this.model.render_mode == 'css') {\n      // dispatch CSS update immediately\n      this.connect(this.model.change, () => this.render());\n      this.connect(this.model.data_update, () => this.render());\n    } else {\n      this.connect(this.model.change, () => this.plot_view.request_render());\n      this.connect(this.model.data_update, () => this.plot_view.request_render());\n    }\n  }\n\n  render() {\n    if (!this.model.visible && this.model.render_mode == 'css') undisplay(this.el);\n    if (!this.model.visible) return; // don't render if *all* position are null\n\n    if (this.model.left == null && this.model.right == null && this.model.top == null && this.model.bottom == null) {\n      undisplay(this.el);\n      return;\n    }\n\n    const {\n      frame\n    } = this.plot_view;\n    const xscale = frame.xscales[this.model.x_range_name];\n    const yscale = frame.yscales[this.model.y_range_name];\n\n    const _calc_dim = (dim, dim_units, scale, view, frame_extrema) => {\n      let sdim;\n\n      if (dim != null) {\n        if (this.model.screen) sdim = dim;else {\n          if (dim_units == 'data') sdim = scale.compute(dim);else sdim = view.compute(dim);\n        }\n      } else sdim = frame_extrema;\n\n      return sdim;\n    };\n\n    this.sleft = _calc_dim(this.model.left, this.model.left_units, xscale, frame.xview, frame._left.value);\n    this.sright = _calc_dim(this.model.right, this.model.right_units, xscale, frame.xview, frame._right.value);\n    this.stop = _calc_dim(this.model.top, this.model.top_units, yscale, frame.yview, frame._top.value);\n    this.sbottom = _calc_dim(this.model.bottom, this.model.bottom_units, yscale, frame.yview, frame._bottom.value);\n    const draw = this.model.render_mode == 'css' ? this._css_box.bind(this) : this._canvas_box.bind(this);\n    draw(this.sleft, this.sright, this.sbottom, this.stop);\n  }\n\n  _css_box(sleft, sright, sbottom, stop) {\n    const line_width = this.model.properties.line_width.value();\n    const sw = Math.floor(sright - sleft) - line_width;\n    const sh = Math.floor(sbottom - stop) - line_width;\n    this.el.style.left = `${sleft}px`;\n    this.el.style.width = `${sw}px`;\n    this.el.style.top = `${stop}px`;\n    this.el.style.height = `${sh}px`;\n\n    if (this.visuals.line.doit) {\n      this.el.style.borderWidth = `${line_width}px`;\n      this.el.style.borderColor = this.model.properties.line_color.value();\n    }\n\n    if (this.visuals.fill.doit) {\n      this.el.style.backgroundColor = this.model.properties.fill_color.value();\n      this.el.style.opacity = this.model.properties.fill_alpha.value();\n    } // try our best to honor line dashing in some way, if we can\n\n\n    const ld = this.model.properties.line_dash.value().length < 2 ? \"solid\" : \"dashed\";\n    this.el.style.borderStyle = ld;\n    display(this.el);\n  }\n\n  _canvas_box(sleft, sright, sbottom, stop) {\n    const {\n      ctx\n    } = this.plot_view.canvas_view;\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(sleft, stop, sright - sleft, sbottom - stop);\n\n    if (this.visuals.fill.doit) {\n      this.visuals.fill.set_value(ctx);\n      ctx.fill();\n    }\n\n    if (this.visuals.line.doit) {\n      this.visuals.line.set_value(ctx);\n      ctx.stroke();\n    }\n\n    ctx.restore();\n  }\n\n  interactive_bbox() {\n    const tol = this.model.properties.line_width.value() + EDGE_TOLERANCE;\n    return new BBox({\n      x0: this.sleft - tol,\n      y0: this.stop - tol,\n      x1: this.sright + tol,\n      y1: this.sbottom + tol\n    });\n  }\n\n  interactive_hit(sx, sy) {\n    if (this.model.in_cursor == null) return false;\n    const bbox = this.interactive_bbox();\n    return bbox.contains(sx, sy);\n  }\n\n  cursor(sx, sy) {\n    const tol = 3;\n    if (Math.abs(sx - this.sleft) < tol || Math.abs(sx - this.sright) < tol) return this.model.ew_cursor;else if (Math.abs(sy - this.sbottom) < tol || Math.abs(sy - this.stop) < tol) return this.model.ns_cursor;else if (sx > this.sleft && sx < this.sright && sy > this.stop && sy < this.sbottom) return this.model.in_cursor;else return null;\n  }\n\n}\nBoxAnnotationView.__name__ = \"BoxAnnotationView\";\nexport class BoxAnnotation extends Annotation {\n  constructor(attrs) {\n    super(attrs);\n  }\n\n  static init_BoxAnnotation() {\n    this.prototype.default_view = BoxAnnotationView;\n    this.mixins(['line', 'fill']);\n    this.define({\n      render_mode: [p.RenderMode, 'canvas'],\n      x_range_name: [p.String, 'default'],\n      y_range_name: [p.String, 'default'],\n      top: [p.Number, null],\n      top_units: [p.SpatialUnits, 'data'],\n      bottom: [p.Number, null],\n      bottom_units: [p.SpatialUnits, 'data'],\n      left: [p.Number, null],\n      left_units: [p.SpatialUnits, 'data'],\n      right: [p.Number, null],\n      right_units: [p.SpatialUnits, 'data']\n    });\n    this.internal({\n      screen: [p.Boolean, false],\n      ew_cursor: [p.String, null],\n      ns_cursor: [p.String, null],\n      in_cursor: [p.String, null]\n    });\n    this.override({\n      fill_color: '#fff9ba',\n      fill_alpha: 0.4,\n      line_color: '#cccccc',\n      line_alpha: 0.3\n    });\n  }\n\n  initialize() {\n    super.initialize();\n    this.data_update = new Signal0(this, \"data_update\");\n  }\n\n  update({\n    left,\n    right,\n    top,\n    bottom\n  }) {\n    this.setv({\n      left,\n      right,\n      top,\n      bottom,\n      screen: true\n    }, {\n      silent: true\n    });\n    this.data_update.emit();\n  }\n\n}\nBoxAnnotation.__name__ = \"BoxAnnotation\";\nBoxAnnotation.init_BoxAnnotation();","map":{"version":3,"sources":["/Users/gen/Desktop/defund_to_refund/node_modules/@bokeh/bokehjs/build/js/lib/models/annotations/box_annotation.js"],"names":["Annotation","AnnotationView","Signal0","display","undisplay","p","BBox","bk_shading","EDGE_TOLERANCE","BoxAnnotationView","initialize","plot_view","canvas_view","add_overlay","el","classList","add","connect_signals","model","render_mode","connect","change","render","data_update","request_render","visible","left","right","top","bottom","frame","xscale","xscales","x_range_name","yscale","yscales","y_range_name","_calc_dim","dim","dim_units","scale","view","frame_extrema","sdim","screen","compute","sleft","left_units","xview","_left","value","sright","right_units","_right","stop","top_units","yview","_top","sbottom","bottom_units","_bottom","draw","_css_box","bind","_canvas_box","line_width","properties","sw","Math","floor","sh","style","width","height","visuals","line","doit","borderWidth","borderColor","line_color","fill","backgroundColor","fill_color","opacity","fill_alpha","ld","line_dash","length","borderStyle","ctx","save","beginPath","rect","set_value","stroke","restore","interactive_bbox","tol","x0","y0","x1","y1","interactive_hit","sx","sy","in_cursor","bbox","contains","cursor","abs","ew_cursor","ns_cursor","__name__","BoxAnnotation","constructor","attrs","init_BoxAnnotation","prototype","default_view","mixins","define","RenderMode","String","Number","SpatialUnits","internal","Boolean","override","line_alpha","update","setv","silent","emit"],"mappings":"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","sourcesContent":["import { Annotation, AnnotationView } from \"./annotation\";\nimport { Signal0 } from \"../../core/signaling\";\nimport { display, undisplay } from \"../../core/dom\";\nimport * as p from \"../../core/properties\";\nimport { BBox } from \"../../core/util/bbox\";\nimport { bk_shading } from \"../../styles/annotations\";\nexport const EDGE_TOLERANCE = 2.5;\nexport class BoxAnnotationView extends AnnotationView {\n    initialize() {\n        super.initialize();\n        this.plot_view.canvas_view.add_overlay(this.el);\n        this.el.classList.add(bk_shading);\n        undisplay(this.el);\n    }\n    connect_signals() {\n        super.connect_signals();\n        // need to respond to either normal BB change events or silent\n        // \"data only updates\" that tools might want to use\n        if (this.model.render_mode == 'css') {\n            // dispatch CSS update immediately\n            this.connect(this.model.change, () => this.render());\n            this.connect(this.model.data_update, () => this.render());\n        }\n        else {\n            this.connect(this.model.change, () => this.plot_view.request_render());\n            this.connect(this.model.data_update, () => this.plot_view.request_render());\n        }\n    }\n    render() {\n        if (!this.model.visible && this.model.render_mode == 'css')\n            undisplay(this.el);\n        if (!this.model.visible)\n            return;\n        // don't render if *all* position are null\n        if (this.model.left == null && this.model.right == null && this.model.top == null && this.model.bottom == null) {\n            undisplay(this.el);\n            return;\n        }\n        const { frame } = this.plot_view;\n        const xscale = frame.xscales[this.model.x_range_name];\n        const yscale = frame.yscales[this.model.y_range_name];\n        const _calc_dim = (dim, dim_units, scale, view, frame_extrema) => {\n            let sdim;\n            if (dim != null) {\n                if (this.model.screen)\n                    sdim = dim;\n                else {\n                    if (dim_units == 'data')\n                        sdim = scale.compute(dim);\n                    else\n                        sdim = view.compute(dim);\n                }\n            }\n            else\n                sdim = frame_extrema;\n            return sdim;\n        };\n        this.sleft = _calc_dim(this.model.left, this.model.left_units, xscale, frame.xview, frame._left.value);\n        this.sright = _calc_dim(this.model.right, this.model.right_units, xscale, frame.xview, frame._right.value);\n        this.stop = _calc_dim(this.model.top, this.model.top_units, yscale, frame.yview, frame._top.value);\n        this.sbottom = _calc_dim(this.model.bottom, this.model.bottom_units, yscale, frame.yview, frame._bottom.value);\n        const draw = this.model.render_mode == 'css' ? this._css_box.bind(this) : this._canvas_box.bind(this);\n        draw(this.sleft, this.sright, this.sbottom, this.stop);\n    }\n    _css_box(sleft, sright, sbottom, stop) {\n        const line_width = this.model.properties.line_width.value();\n        const sw = Math.floor(sright - sleft) - line_width;\n        const sh = Math.floor(sbottom - stop) - line_width;\n        this.el.style.left = `${sleft}px`;\n        this.el.style.width = `${sw}px`;\n        this.el.style.top = `${stop}px`;\n        this.el.style.height = `${sh}px`;\n        if (this.visuals.line.doit) {\n            this.el.style.borderWidth = `${line_width}px`;\n            this.el.style.borderColor = this.model.properties.line_color.value();\n        }\n        if (this.visuals.fill.doit) {\n            this.el.style.backgroundColor = this.model.properties.fill_color.value();\n            this.el.style.opacity = this.model.properties.fill_alpha.value();\n        }\n        // try our best to honor line dashing in some way, if we can\n        const ld = this.model.properties.line_dash.value().length < 2 ? \"solid\" : \"dashed\";\n        this.el.style.borderStyle = ld;\n        display(this.el);\n    }\n    _canvas_box(sleft, sright, sbottom, stop) {\n        const { ctx } = this.plot_view.canvas_view;\n        ctx.save();\n        ctx.beginPath();\n        ctx.rect(sleft, stop, sright - sleft, sbottom - stop);\n        if (this.visuals.fill.doit) {\n            this.visuals.fill.set_value(ctx);\n            ctx.fill();\n        }\n        if (this.visuals.line.doit) {\n            this.visuals.line.set_value(ctx);\n            ctx.stroke();\n        }\n        ctx.restore();\n    }\n    interactive_bbox() {\n        const tol = this.model.properties.line_width.value() + EDGE_TOLERANCE;\n        return new BBox({\n            x0: this.sleft - tol,\n            y0: this.stop - tol,\n            x1: this.sright + tol,\n            y1: this.sbottom + tol,\n        });\n    }\n    interactive_hit(sx, sy) {\n        if (this.model.in_cursor == null)\n            return false;\n        const bbox = this.interactive_bbox();\n        return bbox.contains(sx, sy);\n    }\n    cursor(sx, sy) {\n        const tol = 3;\n        if (Math.abs(sx - this.sleft) < tol || Math.abs(sx - this.sright) < tol)\n            return this.model.ew_cursor;\n        else if (Math.abs(sy - this.sbottom) < tol || Math.abs(sy - this.stop) < tol)\n            return this.model.ns_cursor;\n        else if (sx > this.sleft && sx < this.sright && sy > this.stop && sy < this.sbottom)\n            return this.model.in_cursor;\n        else\n            return null;\n    }\n}\nBoxAnnotationView.__name__ = \"BoxAnnotationView\";\nexport class BoxAnnotation extends Annotation {\n    constructor(attrs) {\n        super(attrs);\n    }\n    static init_BoxAnnotation() {\n        this.prototype.default_view = BoxAnnotationView;\n        this.mixins(['line', 'fill']);\n        this.define({\n            render_mode: [p.RenderMode, 'canvas'],\n            x_range_name: [p.String, 'default'],\n            y_range_name: [p.String, 'default'],\n            top: [p.Number, null],\n            top_units: [p.SpatialUnits, 'data'],\n            bottom: [p.Number, null],\n            bottom_units: [p.SpatialUnits, 'data'],\n            left: [p.Number, null],\n            left_units: [p.SpatialUnits, 'data'],\n            right: [p.Number, null],\n            right_units: [p.SpatialUnits, 'data'],\n        });\n        this.internal({\n            screen: [p.Boolean, false],\n            ew_cursor: [p.String, null],\n            ns_cursor: [p.String, null],\n            in_cursor: [p.String, null],\n        });\n        this.override({\n            fill_color: '#fff9ba',\n            fill_alpha: 0.4,\n            line_color: '#cccccc',\n            line_alpha: 0.3,\n        });\n    }\n    initialize() {\n        super.initialize();\n        this.data_update = new Signal0(this, \"data_update\");\n    }\n    update({ left, right, top, bottom }) {\n        this.setv({ left, right, top, bottom, screen: true }, { silent: true });\n        this.data_update.emit();\n    }\n}\nBoxAnnotation.__name__ = \"BoxAnnotation\";\nBoxAnnotation.init_BoxAnnotation();\n//# sourceMappingURL=box_annotation.js.map"]},"metadata":{},"sourceType":"module"}