{"ast":null,"code":"import { BoxAnnotation, EDGE_TOLERANCE } from \"../../annotations/box_annotation\";\nimport { logger } from \"../../../core/logging\";\nimport * as p from \"../../../core/properties\";\nimport { GestureTool, GestureToolView } from \"./gesture_tool\";\nimport { bk_tool_icon_range } from \"../../../styles/icons\";\nexport function flip_side(side) {\n  switch (side) {\n    case 1\n    /* Left */\n    :\n      return 2\n      /* Right */\n      ;\n\n    case 2\n    /* Right */\n    :\n      return 1\n      /* Left */\n      ;\n\n    case 4\n    /* Bottom */\n    :\n      return 5\n      /* Top */\n      ;\n\n    case 5\n    /* Top */\n    :\n      return 4\n      /* Bottom */\n      ;\n\n    default:\n      return side;\n  }\n} // TODO (bev) This would be better directly with BoxAnnotation, but hard\n// to test on a view. Move when \"View Models\" are implemented\n\nexport function is_near(pos, value, scale, tolerance) {\n  if (value == null) return false;\n  const svalue = scale.compute(value);\n  return Math.abs(pos - svalue) < tolerance;\n} // TODO (bev) This would be better directly with BoxAnnotation, but hard\n// to test on a view. Move when \"View Models\" are implemented\n\nexport function is_inside(sx, sy, xscale, yscale, overlay) {\n  let result = true;\n\n  if (overlay.left != null && overlay.right != null) {\n    const x = xscale.invert(sx);\n    if (x < overlay.left || x > overlay.right) result = false;\n  }\n\n  if (overlay.bottom != null && overlay.top != null) {\n    const y = yscale.invert(sy);\n    if (y < overlay.bottom || y > overlay.top) result = false;\n  }\n\n  return result;\n}\nexport function sides_inside(start, end, range) {\n  let result = 0;\n  if (start >= range.start && start <= range.end) result += 1;\n  if (end >= range.start && end <= range.end) result += 1;\n  return result;\n}\nexport function compute_value(value, scale, sdelta, range) {\n  const svalue = scale.compute(value);\n  const new_value = scale.invert(svalue + sdelta);\n  if (new_value >= range.start && new_value <= range.end) return new_value;\n  return value;\n}\nexport function update_range_end_side(end, range, side) {\n  if (end > range.start) {\n    range.end = end;\n    return side;\n  } else {\n    range.end = range.start;\n    range.start = end;\n    return flip_side(side);\n  }\n}\nexport function update_range_start_side(start, range, side) {\n  if (start < range.end) {\n    range.start = start;\n    return side;\n  } else {\n    range.start = range.end;\n    range.end = start;\n    return flip_side(side);\n  }\n}\nexport function update_range(range, scale, delta, plot_range) {\n  const [sstart, send] = scale.r_compute(range.start, range.end);\n  const [start, end] = scale.r_invert(sstart + delta, send + delta);\n  const initial_sides_inside = sides_inside(range.start, range.end, plot_range);\n  const final_sides_inside = sides_inside(start, end, plot_range); // Allow the update as long as the number of sides in-bounds does not decrease\n\n  if (final_sides_inside >= initial_sides_inside) {\n    range.start = start;\n    range.end = end;\n  }\n}\nexport class RangeToolView extends GestureToolView {\n  initialize() {\n    super.initialize();\n    this.side = 0\n    /* None */\n    ;\n    this.model.update_overlay_from_ranges();\n  }\n\n  connect_signals() {\n    super.connect_signals();\n    if (this.model.x_range != null) this.connect(this.model.x_range.change, () => this.model.update_overlay_from_ranges());\n    if (this.model.y_range != null) this.connect(this.model.y_range.change, () => this.model.update_overlay_from_ranges());\n  }\n\n  _pan_start(ev) {\n    this.last_dx = 0;\n    this.last_dy = 0;\n    const xr = this.model.x_range;\n    const yr = this.model.y_range;\n    const frame = this.plot_view.frame;\n    const xscale = frame.xscales.default;\n    const yscale = frame.yscales.default;\n    const overlay = this.model.overlay;\n    const {\n      left,\n      right,\n      top,\n      bottom\n    } = overlay;\n    const tolerance = this.model.overlay.properties.line_width.value() + EDGE_TOLERANCE;\n\n    if (xr != null && this.model.x_interaction) {\n      if (is_near(ev.sx, left, xscale, tolerance)) this.side = 1\n      /* Left */\n      ;else if (is_near(ev.sx, right, xscale, tolerance)) this.side = 2\n      /* Right */\n      ;else if (is_inside(ev.sx, ev.sy, xscale, yscale, overlay)) {\n        this.side = 3\n        /* LeftRight */\n        ;\n      }\n    }\n\n    if (yr != null && this.model.y_interaction) {\n      if (this.side == 0\n      /* None */\n      && is_near(ev.sy, bottom, yscale, tolerance)) this.side = 4\n      /* Bottom */\n      ;\n      if (this.side == 0\n      /* None */\n      && is_near(ev.sy, top, yscale, tolerance)) this.side = 5\n      /* Top */\n      ;else if (is_inside(ev.sx, ev.sy, xscale, yscale, this.model.overlay)) {\n        if (this.side == 3\n        /* LeftRight */\n        ) this.side = 7\n          /* LeftRightBottomTop */\n          ;else this.side = 6\n        /* BottomTop */\n        ;\n      }\n    }\n  }\n\n  _pan(ev) {\n    const frame = this.plot_view.frame;\n    const new_dx = ev.deltaX - this.last_dx;\n    const new_dy = ev.deltaY - this.last_dy;\n    const xr = this.model.x_range;\n    const yr = this.model.y_range;\n    const xscale = frame.xscales.default;\n    const yscale = frame.yscales.default;\n\n    if (xr != null) {\n      if (this.side == 3\n      /* LeftRight */\n      || this.side == 7\n      /* LeftRightBottomTop */\n      ) update_range(xr, xscale, new_dx, frame.x_range);else if (this.side == 1\n      /* Left */\n      ) {\n          const start = compute_value(xr.start, xscale, new_dx, frame.x_range);\n          this.side = update_range_start_side(start, xr, this.side);\n        } else if (this.side == 2\n      /* Right */\n      ) {\n          const end = compute_value(xr.end, xscale, new_dx, frame.x_range);\n          this.side = update_range_end_side(end, xr, this.side);\n        }\n    }\n\n    if (yr != null) {\n      if (this.side == 6\n      /* BottomTop */\n      || this.side == 7\n      /* LeftRightBottomTop */\n      ) update_range(yr, yscale, new_dy, frame.y_range);else if (this.side == 4\n      /* Bottom */\n      ) {\n          const start = compute_value(yr.start, yscale, new_dy, frame.y_range);\n          this.side = update_range_start_side(start, yr, this.side);\n        } else if (this.side == 5\n      /* Top */\n      ) {\n          const end = compute_value(yr.end, yscale, new_dy, frame.y_range);\n          this.side = update_range_end_side(end, yr, this.side);\n        }\n    }\n\n    this.last_dx = ev.deltaX;\n    this.last_dy = ev.deltaY;\n  }\n\n  _pan_end(_ev) {\n    this.side = 0\n    /* None */\n    ;\n  }\n\n}\nRangeToolView.__name__ = \"RangeToolView\";\n\nconst DEFAULT_RANGE_OVERLAY = () => {\n  return new BoxAnnotation({\n    level: \"overlay\",\n    render_mode: \"canvas\",\n    fill_color: \"lightgrey\",\n    fill_alpha: {\n      value: 0.5\n    },\n    line_color: {\n      value: \"black\"\n    },\n    line_alpha: {\n      value: 1.0\n    },\n    line_width: {\n      value: 0.5\n    },\n    line_dash: [2, 2]\n  });\n};\n\nexport class RangeTool extends GestureTool {\n  constructor(attrs) {\n    super(attrs);\n    this.tool_name = \"Range Tool\";\n    this.icon = bk_tool_icon_range;\n    this.event_type = \"pan\";\n    this.default_order = 1;\n  }\n\n  static init_RangeTool() {\n    this.prototype.default_view = RangeToolView;\n    this.define({\n      x_range: [p.Instance, null],\n      x_interaction: [p.Boolean, true],\n      y_range: [p.Instance, null],\n      y_interaction: [p.Boolean, true],\n      overlay: [p.Instance, DEFAULT_RANGE_OVERLAY]\n    });\n  }\n\n  initialize() {\n    super.initialize();\n    this.overlay.in_cursor = \"grab\";\n    this.overlay.ew_cursor = this.x_range != null && this.x_interaction ? \"ew-resize\" : null;\n    this.overlay.ns_cursor = this.y_range != null && this.y_interaction ? \"ns-resize\" : null;\n  }\n\n  update_overlay_from_ranges() {\n    if (this.x_range == null && this.y_range == null) {\n      this.overlay.left = null;\n      this.overlay.right = null;\n      this.overlay.bottom = null;\n      this.overlay.top = null;\n      logger.warn('RangeTool not configured with any Ranges.');\n    }\n\n    if (this.x_range == null) {\n      this.overlay.left = null;\n      this.overlay.right = null;\n    } else {\n      this.overlay.left = this.x_range.start;\n      this.overlay.right = this.x_range.end;\n    }\n\n    if (this.y_range == null) {\n      this.overlay.bottom = null;\n      this.overlay.top = null;\n    } else {\n      this.overlay.bottom = this.y_range.start;\n      this.overlay.top = this.y_range.end;\n    }\n  }\n\n}\nRangeTool.__name__ = \"RangeTool\";\nRangeTool.init_RangeTool();","map":{"version":3,"sources":["/Users/gen/Desktop/defund_to_refund/node_modules/@bokeh/bokehjs/build/js/lib/models/tools/gestures/range_tool.js"],"names":["BoxAnnotation","EDGE_TOLERANCE","logger","p","GestureTool","GestureToolView","bk_tool_icon_range","flip_side","side","is_near","pos","value","scale","tolerance","svalue","compute","Math","abs","is_inside","sx","sy","xscale","yscale","overlay","result","left","right","x","invert","bottom","top","y","sides_inside","start","end","range","compute_value","sdelta","new_value","update_range_end_side","update_range_start_side","update_range","delta","plot_range","sstart","send","r_compute","r_invert","initial_sides_inside","final_sides_inside","RangeToolView","initialize","model","update_overlay_from_ranges","connect_signals","x_range","connect","change","y_range","_pan_start","ev","last_dx","last_dy","xr","yr","frame","plot_view","xscales","default","yscales","properties","line_width","x_interaction","y_interaction","_pan","new_dx","deltaX","new_dy","deltaY","_pan_end","_ev","__name__","DEFAULT_RANGE_OVERLAY","level","render_mode","fill_color","fill_alpha","line_color","line_alpha","line_dash","RangeTool","constructor","attrs","tool_name","icon","event_type","default_order","init_RangeTool","prototype","default_view","define","Instance","Boolean","in_cursor","ew_cursor","ns_cursor","warn"],"mappings":"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","sourcesContent":["import { BoxAnnotation, EDGE_TOLERANCE } from \"../../annotations/box_annotation\";\nimport { logger } from \"../../../core/logging\";\nimport * as p from \"../../../core/properties\";\nimport { GestureTool, GestureToolView } from \"./gesture_tool\";\nimport { bk_tool_icon_range } from \"../../../styles/icons\";\nexport function flip_side(side) {\n    switch (side) {\n        case 1 /* Left */: return 2 /* Right */;\n        case 2 /* Right */: return 1 /* Left */;\n        case 4 /* Bottom */: return 5 /* Top */;\n        case 5 /* Top */: return 4 /* Bottom */;\n        default: return side;\n    }\n}\n// TODO (bev) This would be better directly with BoxAnnotation, but hard\n// to test on a view. Move when \"View Models\" are implemented\nexport function is_near(pos, value, scale, tolerance) {\n    if (value == null)\n        return false;\n    const svalue = scale.compute(value);\n    return Math.abs(pos - svalue) < tolerance;\n}\n// TODO (bev) This would be better directly with BoxAnnotation, but hard\n// to test on a view. Move when \"View Models\" are implemented\nexport function is_inside(sx, sy, xscale, yscale, overlay) {\n    let result = true;\n    if (overlay.left != null && overlay.right != null) {\n        const x = xscale.invert(sx);\n        if (x < overlay.left || x > overlay.right)\n            result = false;\n    }\n    if (overlay.bottom != null && overlay.top != null) {\n        const y = yscale.invert(sy);\n        if (y < overlay.bottom || y > overlay.top)\n            result = false;\n    }\n    return result;\n}\nexport function sides_inside(start, end, range) {\n    let result = 0;\n    if (start >= range.start && start <= range.end)\n        result += 1;\n    if (end >= range.start && end <= range.end)\n        result += 1;\n    return result;\n}\nexport function compute_value(value, scale, sdelta, range) {\n    const svalue = scale.compute(value);\n    const new_value = scale.invert(svalue + sdelta);\n    if (new_value >= range.start && new_value <= range.end)\n        return new_value;\n    return value;\n}\nexport function update_range_end_side(end, range, side) {\n    if (end > range.start) {\n        range.end = end;\n        return side;\n    }\n    else {\n        range.end = range.start;\n        range.start = end;\n        return flip_side(side);\n    }\n}\nexport function update_range_start_side(start, range, side) {\n    if (start < range.end) {\n        range.start = start;\n        return side;\n    }\n    else {\n        range.start = range.end;\n        range.end = start;\n        return flip_side(side);\n    }\n}\nexport function update_range(range, scale, delta, plot_range) {\n    const [sstart, send] = scale.r_compute(range.start, range.end);\n    const [start, end] = scale.r_invert(sstart + delta, send + delta);\n    const initial_sides_inside = sides_inside(range.start, range.end, plot_range);\n    const final_sides_inside = sides_inside(start, end, plot_range);\n    // Allow the update as long as the number of sides in-bounds does not decrease\n    if (final_sides_inside >= initial_sides_inside) {\n        range.start = start;\n        range.end = end;\n    }\n}\nexport class RangeToolView extends GestureToolView {\n    initialize() {\n        super.initialize();\n        this.side = 0 /* None */;\n        this.model.update_overlay_from_ranges();\n    }\n    connect_signals() {\n        super.connect_signals();\n        if (this.model.x_range != null)\n            this.connect(this.model.x_range.change, () => this.model.update_overlay_from_ranges());\n        if (this.model.y_range != null)\n            this.connect(this.model.y_range.change, () => this.model.update_overlay_from_ranges());\n    }\n    _pan_start(ev) {\n        this.last_dx = 0;\n        this.last_dy = 0;\n        const xr = this.model.x_range;\n        const yr = this.model.y_range;\n        const frame = this.plot_view.frame;\n        const xscale = frame.xscales.default;\n        const yscale = frame.yscales.default;\n        const overlay = this.model.overlay;\n        const { left, right, top, bottom } = overlay;\n        const tolerance = this.model.overlay.properties.line_width.value() + EDGE_TOLERANCE;\n        if (xr != null && this.model.x_interaction) {\n            if (is_near(ev.sx, left, xscale, tolerance))\n                this.side = 1 /* Left */;\n            else if (is_near(ev.sx, right, xscale, tolerance))\n                this.side = 2 /* Right */;\n            else if (is_inside(ev.sx, ev.sy, xscale, yscale, overlay)) {\n                this.side = 3 /* LeftRight */;\n            }\n        }\n        if (yr != null && this.model.y_interaction) {\n            if (this.side == 0 /* None */ && is_near(ev.sy, bottom, yscale, tolerance))\n                this.side = 4 /* Bottom */;\n            if (this.side == 0 /* None */ && is_near(ev.sy, top, yscale, tolerance))\n                this.side = 5 /* Top */;\n            else if (is_inside(ev.sx, ev.sy, xscale, yscale, this.model.overlay)) {\n                if (this.side == 3 /* LeftRight */)\n                    this.side = 7 /* LeftRightBottomTop */;\n                else\n                    this.side = 6 /* BottomTop */;\n            }\n        }\n    }\n    _pan(ev) {\n        const frame = this.plot_view.frame;\n        const new_dx = ev.deltaX - this.last_dx;\n        const new_dy = ev.deltaY - this.last_dy;\n        const xr = this.model.x_range;\n        const yr = this.model.y_range;\n        const xscale = frame.xscales.default;\n        const yscale = frame.yscales.default;\n        if (xr != null) {\n            if (this.side == 3 /* LeftRight */ || this.side == 7 /* LeftRightBottomTop */)\n                update_range(xr, xscale, new_dx, frame.x_range);\n            else if (this.side == 1 /* Left */) {\n                const start = compute_value(xr.start, xscale, new_dx, frame.x_range);\n                this.side = update_range_start_side(start, xr, this.side);\n            }\n            else if (this.side == 2 /* Right */) {\n                const end = compute_value(xr.end, xscale, new_dx, frame.x_range);\n                this.side = update_range_end_side(end, xr, this.side);\n            }\n        }\n        if (yr != null) {\n            if (this.side == 6 /* BottomTop */ || this.side == 7 /* LeftRightBottomTop */)\n                update_range(yr, yscale, new_dy, frame.y_range);\n            else if (this.side == 4 /* Bottom */) {\n                const start = compute_value(yr.start, yscale, new_dy, frame.y_range);\n                this.side = update_range_start_side(start, yr, this.side);\n            }\n            else if (this.side == 5 /* Top */) {\n                const end = compute_value(yr.end, yscale, new_dy, frame.y_range);\n                this.side = update_range_end_side(end, yr, this.side);\n            }\n        }\n        this.last_dx = ev.deltaX;\n        this.last_dy = ev.deltaY;\n    }\n    _pan_end(_ev) {\n        this.side = 0 /* None */;\n    }\n}\nRangeToolView.__name__ = \"RangeToolView\";\nconst DEFAULT_RANGE_OVERLAY = () => {\n    return new BoxAnnotation({\n        level: \"overlay\",\n        render_mode: \"canvas\",\n        fill_color: \"lightgrey\",\n        fill_alpha: { value: 0.5 },\n        line_color: { value: \"black\" },\n        line_alpha: { value: 1.0 },\n        line_width: { value: 0.5 },\n        line_dash: [2, 2],\n    });\n};\nexport class RangeTool extends GestureTool {\n    constructor(attrs) {\n        super(attrs);\n        this.tool_name = \"Range Tool\";\n        this.icon = bk_tool_icon_range;\n        this.event_type = \"pan\";\n        this.default_order = 1;\n    }\n    static init_RangeTool() {\n        this.prototype.default_view = RangeToolView;\n        this.define({\n            x_range: [p.Instance, null],\n            x_interaction: [p.Boolean, true],\n            y_range: [p.Instance, null],\n            y_interaction: [p.Boolean, true],\n            overlay: [p.Instance, DEFAULT_RANGE_OVERLAY],\n        });\n    }\n    initialize() {\n        super.initialize();\n        this.overlay.in_cursor = \"grab\";\n        this.overlay.ew_cursor = this.x_range != null && this.x_interaction ? \"ew-resize\" : null;\n        this.overlay.ns_cursor = this.y_range != null && this.y_interaction ? \"ns-resize\" : null;\n    }\n    update_overlay_from_ranges() {\n        if (this.x_range == null && this.y_range == null) {\n            this.overlay.left = null;\n            this.overlay.right = null;\n            this.overlay.bottom = null;\n            this.overlay.top = null;\n            logger.warn('RangeTool not configured with any Ranges.');\n        }\n        if (this.x_range == null) {\n            this.overlay.left = null;\n            this.overlay.right = null;\n        }\n        else {\n            this.overlay.left = this.x_range.start;\n            this.overlay.right = this.x_range.end;\n        }\n        if (this.y_range == null) {\n            this.overlay.bottom = null;\n            this.overlay.top = null;\n        }\n        else {\n            this.overlay.bottom = this.y_range.start;\n            this.overlay.top = this.y_range.end;\n        }\n    }\n}\nRangeTool.__name__ = \"RangeTool\";\nRangeTool.init_RangeTool();\n//# sourceMappingURL=range_tool.js.map"]},"metadata":{},"sourceType":"module"}