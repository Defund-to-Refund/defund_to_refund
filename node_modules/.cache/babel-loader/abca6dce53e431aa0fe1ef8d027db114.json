{"ast":null,"code":"import { TickFormatter } from \"./tick_formatter\";\nimport { BasicTickFormatter } from \"./basic_tick_formatter\";\nimport * as p from \"../../core/properties\";\nexport class LogTickFormatter extends TickFormatter {\n  constructor(attrs) {\n    super(attrs);\n  }\n\n  static init_LogTickFormatter() {\n    this.define({\n      ticker: [p.Instance, null]\n    });\n  }\n\n  initialize() {\n    super.initialize();\n    this.basic_formatter = new BasicTickFormatter();\n  }\n\n  doFormat(ticks, opts) {\n    if (ticks.length == 0) return [];\n    const base = this.ticker != null ? this.ticker.base : 10;\n    let small_interval = false;\n    const labels = new Array(ticks.length);\n\n    for (let i = 0, end = ticks.length; i < end; i++) {\n      labels[i] = `${base}^${Math.round(Math.log(ticks[i]) / Math.log(base))}`;\n\n      if (i > 0 && labels[i] == labels[i - 1]) {\n        small_interval = true;\n        break;\n      }\n    }\n\n    if (small_interval) return this.basic_formatter.doFormat(ticks, opts);else return labels;\n  }\n\n}\nLogTickFormatter.__name__ = \"LogTickFormatter\";\nLogTickFormatter.init_LogTickFormatter();","map":{"version":3,"sources":["/Users/gen/Desktop/defund_to_refund/node_modules/@bokeh/bokehjs/build/js/lib/models/formatters/log_tick_formatter.js"],"names":["TickFormatter","BasicTickFormatter","p","LogTickFormatter","constructor","attrs","init_LogTickFormatter","define","ticker","Instance","initialize","basic_formatter","doFormat","ticks","opts","length","base","small_interval","labels","Array","i","end","Math","round","log","__name__"],"mappings":"AAAA,SAASA,aAAT,QAA8B,kBAA9B;AACA,SAASC,kBAAT,QAAmC,wBAAnC;AACA,OAAO,KAAKC,CAAZ,MAAmB,uBAAnB;AACA,OAAO,MAAMC,gBAAN,SAA+BH,aAA/B,CAA6C;AAChDI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACH;;AACD,SAAOC,qBAAP,GAA+B;AAC3B,SAAKC,MAAL,CAAY;AACRC,MAAAA,MAAM,EAAE,CAACN,CAAC,CAACO,QAAH,EAAa,IAAb;AADA,KAAZ;AAGH;;AACDC,EAAAA,UAAU,GAAG;AACT,UAAMA,UAAN;AACA,SAAKC,eAAL,GAAuB,IAAIV,kBAAJ,EAAvB;AACH;;AACDW,EAAAA,QAAQ,CAACC,KAAD,EAAQC,IAAR,EAAc;AAClB,QAAID,KAAK,CAACE,MAAN,IAAgB,CAApB,EACI,OAAO,EAAP;AACJ,UAAMC,IAAI,GAAG,KAAKR,MAAL,IAAe,IAAf,GAAsB,KAAKA,MAAL,CAAYQ,IAAlC,GAAyC,EAAtD;AACA,QAAIC,cAAc,GAAG,KAArB;AACA,UAAMC,MAAM,GAAG,IAAIC,KAAJ,CAAUN,KAAK,CAACE,MAAhB,CAAf;;AACA,SAAK,IAAIK,CAAC,GAAG,CAAR,EAAWC,GAAG,GAAGR,KAAK,CAACE,MAA5B,EAAoCK,CAAC,GAAGC,GAAxC,EAA6CD,CAAC,EAA9C,EAAkD;AAC9CF,MAAAA,MAAM,CAACE,CAAD,CAAN,GAAa,GAAEJ,IAAK,IAAGM,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,GAAL,CAASX,KAAK,CAACO,CAAD,CAAd,IAAqBE,IAAI,CAACE,GAAL,CAASR,IAAT,CAAhC,CAAgD,EAAvE;;AACA,UAAII,CAAC,GAAG,CAAJ,IAASF,MAAM,CAACE,CAAD,CAAN,IAAaF,MAAM,CAACE,CAAC,GAAG,CAAL,CAAhC,EAAyC;AACrCH,QAAAA,cAAc,GAAG,IAAjB;AACA;AACH;AACJ;;AACD,QAAIA,cAAJ,EACI,OAAO,KAAKN,eAAL,CAAqBC,QAArB,CAA8BC,KAA9B,EAAqCC,IAArC,CAAP,CADJ,KAGI,OAAOI,MAAP;AACP;;AA9B+C;AAgCpDf,gBAAgB,CAACsB,QAAjB,GAA4B,kBAA5B;AACAtB,gBAAgB,CAACG,qBAAjB","sourcesContent":["import { TickFormatter } from \"./tick_formatter\";\nimport { BasicTickFormatter } from \"./basic_tick_formatter\";\nimport * as p from \"../../core/properties\";\nexport class LogTickFormatter extends TickFormatter {\n    constructor(attrs) {\n        super(attrs);\n    }\n    static init_LogTickFormatter() {\n        this.define({\n            ticker: [p.Instance, null],\n        });\n    }\n    initialize() {\n        super.initialize();\n        this.basic_formatter = new BasicTickFormatter();\n    }\n    doFormat(ticks, opts) {\n        if (ticks.length == 0)\n            return [];\n        const base = this.ticker != null ? this.ticker.base : 10;\n        let small_interval = false;\n        const labels = new Array(ticks.length);\n        for (let i = 0, end = ticks.length; i < end; i++) {\n            labels[i] = `${base}^${Math.round(Math.log(ticks[i]) / Math.log(base))}`;\n            if (i > 0 && labels[i] == labels[i - 1]) {\n                small_interval = true;\n                break;\n            }\n        }\n        if (small_interval)\n            return this.basic_formatter.doFormat(ticks, opts);\n        else\n            return labels;\n    }\n}\nLogTickFormatter.__name__ = \"LogTickFormatter\";\nLogTickFormatter.init_LogTickFormatter();\n//# sourceMappingURL=log_tick_formatter.js.map"]},"metadata":{},"sourceType":"module"}