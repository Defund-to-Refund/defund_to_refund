{"ast":null,"code":"import { TickFormatter } from \"./tick_formatter\";\nimport * as p from \"../../core/properties\";\nimport { keys, values } from \"../../core/util/object\";\nimport { use_strict } from \"../../core/util/string\";\nexport class FuncTickFormatter extends TickFormatter {\n  constructor(attrs) {\n    super(attrs);\n  }\n\n  static init_FuncTickFormatter() {\n    this.define({\n      args: [p.Any, {}],\n      code: [p.String, '']\n    });\n  }\n\n  get names() {\n    return keys(this.args);\n  }\n\n  get values() {\n    return values(this.args);\n  }\n  /*protected*/\n\n\n  _make_func() {\n    const code = use_strict(this.code);\n    return new Function(\"tick\", \"index\", \"ticks\", ...this.names, code);\n  }\n\n  doFormat(ticks, _opts) {\n    const cache = {};\n\n    const func = this._make_func().bind(cache);\n\n    return ticks.map((tick, index, ticks) => func(tick, index, ticks, ...this.values));\n  }\n\n}\nFuncTickFormatter.__name__ = \"FuncTickFormatter\";\nFuncTickFormatter.init_FuncTickFormatter();","map":{"version":3,"sources":["/Users/gen/Desktop/defund_to_refund/node_modules/@bokeh/bokehjs/build/js/lib/models/formatters/func_tick_formatter.js"],"names":["TickFormatter","p","keys","values","use_strict","FuncTickFormatter","constructor","attrs","init_FuncTickFormatter","define","args","Any","code","String","names","_make_func","Function","doFormat","ticks","_opts","cache","func","bind","map","tick","index","__name__"],"mappings":"AAAA,SAASA,aAAT,QAA8B,kBAA9B;AACA,OAAO,KAAKC,CAAZ,MAAmB,uBAAnB;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,wBAA7B;AACA,SAASC,UAAT,QAA2B,wBAA3B;AACA,OAAO,MAAMC,iBAAN,SAAgCL,aAAhC,CAA8C;AACjDM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACH;;AACD,SAAOC,sBAAP,GAAgC;AAC5B,SAAKC,MAAL,CAAY;AACRC,MAAAA,IAAI,EAAE,CAACT,CAAC,CAACU,GAAH,EAAQ,EAAR,CADE;AAERC,MAAAA,IAAI,EAAE,CAACX,CAAC,CAACY,MAAH,EAAW,EAAX;AAFE,KAAZ;AAIH;;AACD,MAAIC,KAAJ,GAAY;AACR,WAAOZ,IAAI,CAAC,KAAKQ,IAAN,CAAX;AACH;;AACD,MAAIP,MAAJ,GAAa;AACT,WAAOA,MAAM,CAAC,KAAKO,IAAN,CAAb;AACH;AACD;;;AAAcK,EAAAA,UAAU,GAAG;AACvB,UAAMH,IAAI,GAAGR,UAAU,CAAC,KAAKQ,IAAN,CAAvB;AACA,WAAO,IAAII,QAAJ,CAAa,MAAb,EAAqB,OAArB,EAA8B,OAA9B,EAAuC,GAAG,KAAKF,KAA/C,EAAsDF,IAAtD,CAAP;AACH;;AACDK,EAAAA,QAAQ,CAACC,KAAD,EAAQC,KAAR,EAAe;AACnB,UAAMC,KAAK,GAAG,EAAd;;AACA,UAAMC,IAAI,GAAG,KAAKN,UAAL,GAAkBO,IAAlB,CAAuBF,KAAvB,CAAb;;AACA,WAAOF,KAAK,CAACK,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,EAAcP,KAAd,KAAwBG,IAAI,CAACG,IAAD,EAAOC,KAAP,EAAcP,KAAd,EAAqB,GAAG,KAAKf,MAA7B,CAAtC,CAAP;AACH;;AAxBgD;AA0BrDE,iBAAiB,CAACqB,QAAlB,GAA6B,mBAA7B;AACArB,iBAAiB,CAACG,sBAAlB","sourcesContent":["import { TickFormatter } from \"./tick_formatter\";\nimport * as p from \"../../core/properties\";\nimport { keys, values } from \"../../core/util/object\";\nimport { use_strict } from \"../../core/util/string\";\nexport class FuncTickFormatter extends TickFormatter {\n    constructor(attrs) {\n        super(attrs);\n    }\n    static init_FuncTickFormatter() {\n        this.define({\n            args: [p.Any, {}],\n            code: [p.String, ''],\n        });\n    }\n    get names() {\n        return keys(this.args);\n    }\n    get values() {\n        return values(this.args);\n    }\n    /*protected*/ _make_func() {\n        const code = use_strict(this.code);\n        return new Function(\"tick\", \"index\", \"ticks\", ...this.names, code);\n    }\n    doFormat(ticks, _opts) {\n        const cache = {};\n        const func = this._make_func().bind(cache);\n        return ticks.map((tick, index, ticks) => func(tick, index, ticks, ...this.values));\n    }\n}\nFuncTickFormatter.__name__ = \"FuncTickFormatter\";\nFuncTickFormatter.init_FuncTickFormatter();\n//# sourceMappingURL=func_tick_formatter.js.map"]},"metadata":{},"sourceType":"module"}