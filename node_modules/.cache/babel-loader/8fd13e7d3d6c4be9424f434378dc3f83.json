{"ast":null,"code":"//     Underscore.js 1.8.3\n//     http://underscorejs.org\n//     (c) 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n//     Underscore may be freely distributed under the MIT license.\nimport { randomIn } from \"./math\";\nimport { assert } from \"./assert\";\nimport { map, reduce, min, min_by, max, max_by, sum, cumsum, every, some, find, find_last, find_index, find_last_index, sorted_index } from \"./arrayable\";\nexport { map, reduce, min, min_by, max, max_by, sum, cumsum, every, some, find, find_last, find_index, find_last_index, sorted_index };\nconst slice = Array.prototype.slice;\nexport function head(array) {\n  return array[0];\n}\nexport function tail(array) {\n  return array[array.length - 1];\n}\nexport function last(array) {\n  return array[array.length - 1];\n}\nexport function copy(array) {\n  return slice.call(array);\n}\nexport function concat(arrays) {\n  return [].concat(...arrays);\n}\nexport function includes(array, value) {\n  return array.indexOf(value) !== -1;\n}\nexport const contains = includes;\nexport function nth(array, index) {\n  return array[index >= 0 ? index : array.length + index];\n}\nexport function zip(...arrays) {\n  if (arrays.length == 0) return [];\n  const n = min(arrays.map(a => a.length));\n  const k = arrays.length;\n  const result = new Array(n);\n\n  for (let i = 0; i < n; i++) {\n    result[i] = new Array(k);\n\n    for (let j = 0; j < k; j++) result[i][j] = arrays[j][i];\n  }\n\n  return result;\n}\nexport function unzip(array) {\n  const n = array.length;\n  const k = min(array.map(a => a.length));\n  const results = Array(k);\n\n  for (let j = 0; j < k; j++) results[j] = new Array(n);\n\n  for (let i = 0; i < n; i++) {\n    for (let j = 0; j < k; j++) results[j][i] = array[i][j];\n  }\n\n  return results;\n}\nexport function range(start, stop, step = 1) {\n  assert(step > 0, \"'step' must be a positive number\");\n\n  if (stop == null) {\n    stop = start;\n    start = 0;\n  }\n\n  const {\n    max,\n    ceil,\n    abs\n  } = Math;\n  const delta = start <= stop ? step : -step;\n  const length = max(ceil(abs(stop - start) / step), 0);\n  const range = Array(length);\n\n  for (let i = 0; i < length; i++, start += delta) {\n    range[i] = start;\n  }\n\n  return range;\n}\nexport function linspace(start, stop, num = 100) {\n  const step = (stop - start) / (num - 1);\n  const array = new Array(num);\n\n  for (let i = 0; i < num; i++) {\n    array[i] = start + step * i;\n  }\n\n  return array;\n}\nexport function transpose(array) {\n  const rows = array.length;\n  const cols = array[0].length;\n  const transposed = [];\n\n  for (let j = 0; j < cols; j++) {\n    transposed[j] = [];\n\n    for (let i = 0; i < rows; i++) {\n      transposed[j][i] = array[i][j];\n    }\n  }\n\n  return transposed;\n}\nexport function argmin(array) {\n  return min_by(range(array.length), i => array[i]);\n}\nexport function argmax(array) {\n  return max_by(range(array.length), i => array[i]);\n}\nexport function sort_by(array, key) {\n  const tmp = array.map((value, index) => {\n    return {\n      value,\n      index,\n      key: key(value)\n    };\n  });\n  tmp.sort((left, right) => {\n    const a = left.key;\n    const b = right.key;\n\n    if (a !== b) {\n      if (a > b || a === undefined) return 1;\n      if (a < b || b === undefined) return -1;\n    }\n\n    return left.index - right.index;\n  });\n  return tmp.map(item => item.value);\n}\nexport function uniq(array) {\n  const result = [];\n\n  for (const value of array) {\n    if (!includes(result, value)) {\n      result.push(value);\n    }\n  }\n\n  return result;\n}\nexport function uniq_by(array, key) {\n  const result = [];\n  const seen = [];\n\n  for (const value of array) {\n    const computed = key(value);\n\n    if (!includes(seen, computed)) {\n      seen.push(computed);\n      result.push(value);\n    }\n  }\n\n  return result;\n}\nexport function union(...arrays) {\n  return uniq(concat(arrays));\n}\nexport function intersection(array, ...arrays) {\n  const result = [];\n\n  top: for (const item of array) {\n    if (includes(result, item)) continue;\n\n    for (const other of arrays) {\n      if (!includes(other, item)) continue top;\n    }\n\n    result.push(item);\n  }\n\n  return result;\n}\nexport function difference(array, ...arrays) {\n  const rest = concat(arrays);\n  return array.filter(value => !includes(rest, value));\n}\nexport function remove_at(array, i) {\n  const result = copy(array);\n  result.splice(i, 1);\n  return result;\n}\nexport function remove_by(array, key) {\n  for (let i = 0; i < array.length;) {\n    if (key(array[i])) array.splice(i, 1);else i++;\n  }\n} // Shuffle a collection, using the modern version of the\n// [Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisherâ€“Yates_shuffle).\n\nexport function shuffle(array) {\n  const length = array.length;\n  const shuffled = new Array(length);\n\n  for (let i = 0; i < length; i++) {\n    const rand = randomIn(0, i);\n    if (rand !== i) shuffled[i] = shuffled[rand];\n    shuffled[rand] = array[i];\n  }\n\n  return shuffled;\n}\nexport function pairwise(array, fn) {\n  const n = array.length;\n  const result = new Array(n - 1);\n\n  for (let i = 0; i < n - 1; i++) {\n    result[i] = fn(array[i], array[i + 1]);\n  }\n\n  return result;\n}\nexport function reversed(array) {\n  const n = array.length;\n  const result = new Array(n);\n\n  for (let i = 0; i < n; i++) {\n    result[n - i - 1] = array[i];\n  }\n\n  return result;\n}\nexport function repeat(value, n) {\n  const result = new Array(n);\n\n  for (let i = 0; i < n; i++) {\n    result[i] = value;\n  }\n\n  return result;\n}","map":{"version":3,"sources":["/Users/gen/Desktop/defund_to_refund/node_modules/@bokeh/bokehjs/build/js/lib/core/util/array.js"],"names":["randomIn","assert","map","reduce","min","min_by","max","max_by","sum","cumsum","every","some","find","find_last","find_index","find_last_index","sorted_index","slice","Array","prototype","head","array","tail","length","last","copy","call","concat","arrays","includes","value","indexOf","contains","nth","index","zip","n","a","k","result","i","j","unzip","results","range","start","stop","step","ceil","abs","Math","delta","linspace","num","transpose","rows","cols","transposed","argmin","argmax","sort_by","key","tmp","sort","left","right","b","undefined","item","uniq","push","uniq_by","seen","computed","union","intersection","top","other","difference","rest","filter","remove_at","splice","remove_by","shuffle","shuffled","rand","pairwise","fn","reversed","repeat"],"mappings":"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","sourcesContent":["//     Underscore.js 1.8.3\n//     http://underscorejs.org\n//     (c) 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n//     Underscore may be freely distributed under the MIT license.\nimport { randomIn } from \"./math\";\nimport { assert } from \"./assert\";\nimport { map, reduce, min, min_by, max, max_by, sum, cumsum, every, some, find, find_last, find_index, find_last_index, sorted_index } from \"./arrayable\";\nexport { map, reduce, min, min_by, max, max_by, sum, cumsum, every, some, find, find_last, find_index, find_last_index, sorted_index };\nconst slice = Array.prototype.slice;\nexport function head(array) {\n    return array[0];\n}\nexport function tail(array) {\n    return array[array.length - 1];\n}\nexport function last(array) {\n    return array[array.length - 1];\n}\nexport function copy(array) {\n    return slice.call(array);\n}\nexport function concat(arrays) {\n    return [].concat(...arrays);\n}\nexport function includes(array, value) {\n    return array.indexOf(value) !== -1;\n}\nexport const contains = includes;\nexport function nth(array, index) {\n    return array[index >= 0 ? index : array.length + index];\n}\nexport function zip(...arrays) {\n    if (arrays.length == 0)\n        return [];\n    const n = min(arrays.map((a) => a.length));\n    const k = arrays.length;\n    const result = new Array(n);\n    for (let i = 0; i < n; i++) {\n        result[i] = new Array(k);\n        for (let j = 0; j < k; j++)\n            result[i][j] = arrays[j][i];\n    }\n    return result;\n}\nexport function unzip(array) {\n    const n = array.length;\n    const k = min(array.map((a) => a.length));\n    const results = Array(k);\n    for (let j = 0; j < k; j++)\n        results[j] = new Array(n);\n    for (let i = 0; i < n; i++) {\n        for (let j = 0; j < k; j++)\n            results[j][i] = array[i][j];\n    }\n    return results;\n}\nexport function range(start, stop, step = 1) {\n    assert(step > 0, \"'step' must be a positive number\");\n    if (stop == null) {\n        stop = start;\n        start = 0;\n    }\n    const { max, ceil, abs } = Math;\n    const delta = start <= stop ? step : -step;\n    const length = max(ceil(abs(stop - start) / step), 0);\n    const range = Array(length);\n    for (let i = 0; i < length; i++, start += delta) {\n        range[i] = start;\n    }\n    return range;\n}\nexport function linspace(start, stop, num = 100) {\n    const step = (stop - start) / (num - 1);\n    const array = new Array(num);\n    for (let i = 0; i < num; i++) {\n        array[i] = start + step * i;\n    }\n    return array;\n}\nexport function transpose(array) {\n    const rows = array.length;\n    const cols = array[0].length;\n    const transposed = [];\n    for (let j = 0; j < cols; j++) {\n        transposed[j] = [];\n        for (let i = 0; i < rows; i++) {\n            transposed[j][i] = array[i][j];\n        }\n    }\n    return transposed;\n}\nexport function argmin(array) {\n    return min_by(range(array.length), (i) => array[i]);\n}\nexport function argmax(array) {\n    return max_by(range(array.length), (i) => array[i]);\n}\nexport function sort_by(array, key) {\n    const tmp = array.map((value, index) => {\n        return { value, index, key: key(value) };\n    });\n    tmp.sort((left, right) => {\n        const a = left.key;\n        const b = right.key;\n        if (a !== b) {\n            if (a > b || a === undefined)\n                return 1;\n            if (a < b || b === undefined)\n                return -1;\n        }\n        return left.index - right.index;\n    });\n    return tmp.map((item) => item.value);\n}\nexport function uniq(array) {\n    const result = [];\n    for (const value of array) {\n        if (!includes(result, value)) {\n            result.push(value);\n        }\n    }\n    return result;\n}\nexport function uniq_by(array, key) {\n    const result = [];\n    const seen = [];\n    for (const value of array) {\n        const computed = key(value);\n        if (!includes(seen, computed)) {\n            seen.push(computed);\n            result.push(value);\n        }\n    }\n    return result;\n}\nexport function union(...arrays) {\n    return uniq(concat(arrays));\n}\nexport function intersection(array, ...arrays) {\n    const result = [];\n    top: for (const item of array) {\n        if (includes(result, item))\n            continue;\n        for (const other of arrays) {\n            if (!includes(other, item))\n                continue top;\n        }\n        result.push(item);\n    }\n    return result;\n}\nexport function difference(array, ...arrays) {\n    const rest = concat(arrays);\n    return array.filter((value) => !includes(rest, value));\n}\nexport function remove_at(array, i) {\n    const result = copy(array);\n    result.splice(i, 1);\n    return result;\n}\nexport function remove_by(array, key) {\n    for (let i = 0; i < array.length;) {\n        if (key(array[i]))\n            array.splice(i, 1);\n        else\n            i++;\n    }\n}\n// Shuffle a collection, using the modern version of the\n// [Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisherâ€“Yates_shuffle).\nexport function shuffle(array) {\n    const length = array.length;\n    const shuffled = new Array(length);\n    for (let i = 0; i < length; i++) {\n        const rand = randomIn(0, i);\n        if (rand !== i)\n            shuffled[i] = shuffled[rand];\n        shuffled[rand] = array[i];\n    }\n    return shuffled;\n}\nexport function pairwise(array, fn) {\n    const n = array.length;\n    const result = new Array(n - 1);\n    for (let i = 0; i < n - 1; i++) {\n        result[i] = fn(array[i], array[i + 1]);\n    }\n    return result;\n}\nexport function reversed(array) {\n    const n = array.length;\n    const result = new Array(n);\n    for (let i = 0; i < n; i++) {\n        result[n - i - 1] = array[i];\n    }\n    return result;\n}\nexport function repeat(value, n) {\n    const result = new Array(n);\n    for (let i = 0; i < n; i++) {\n        result[i] = value;\n    }\n    return result;\n}\n//# sourceMappingURL=array.js.map"]},"metadata":{},"sourceType":"module"}