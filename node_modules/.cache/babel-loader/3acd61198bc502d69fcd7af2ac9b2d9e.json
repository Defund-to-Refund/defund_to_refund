{"ast":null,"code":"import { SpatialIndex } from \"../../core/util/spatial\";\nimport { Glyph, GlyphView } from \"./glyph\";\nimport { generic_area_legend } from \"./utils\";\nimport * as hittest from \"../../core/hittest\";\nexport class BoxView extends GlyphView {\n  get_anchor_point(anchor, i, _spt) {\n    const left = Math.min(this.sleft[i], this.sright[i]);\n    const right = Math.max(this.sright[i], this.sleft[i]);\n    const top = Math.min(this.stop[i], this.sbottom[i]); // screen coordinates !!!\n\n    const bottom = Math.max(this.sbottom[i], this.stop[i]); //\n\n    switch (anchor) {\n      case \"top_left\":\n        return {\n          x: left,\n          y: top\n        };\n\n      case \"top_center\":\n        return {\n          x: (left + right) / 2,\n          y: top\n        };\n\n      case \"top_right\":\n        return {\n          x: right,\n          y: top\n        };\n\n      case \"bottom_left\":\n        return {\n          x: left,\n          y: bottom\n        };\n\n      case \"bottom_center\":\n        return {\n          x: (left + right) / 2,\n          y: bottom\n        };\n\n      case \"bottom_right\":\n        return {\n          x: right,\n          y: bottom\n        };\n\n      case \"center_left\":\n        return {\n          x: left,\n          y: (top + bottom) / 2\n        };\n\n      case \"center\":\n        return {\n          x: (left + right) / 2,\n          y: (top + bottom) / 2\n        };\n\n      case \"center_right\":\n        return {\n          x: right,\n          y: (top + bottom) / 2\n        };\n\n      default:\n        return null;\n    }\n  }\n\n  _index_box(len) {\n    const points = [];\n\n    for (let i = 0; i < len; i++) {\n      const [l, r, t, b] = this._lrtb(i);\n\n      if (isNaN(l + r + t + b) || !isFinite(l + r + t + b)) continue;\n      points.push({\n        x0: Math.min(l, r),\n        y0: Math.min(t, b),\n        x1: Math.max(r, l),\n        y1: Math.max(t, b),\n        i\n      });\n    }\n\n    return new SpatialIndex(points);\n  }\n\n  _render(ctx, indices, {\n    sleft,\n    sright,\n    stop,\n    sbottom\n  }) {\n    for (const i of indices) {\n      if (isNaN(sleft[i] + stop[i] + sright[i] + sbottom[i])) continue;\n      ctx.rect(sleft[i], stop[i], sright[i] - sleft[i], sbottom[i] - stop[i]);\n\n      if (this.visuals.fill.doit) {\n        this.visuals.fill.set_vectorize(ctx, i);\n        ctx.beginPath();\n        ctx.rect(sleft[i], stop[i], sright[i] - sleft[i], sbottom[i] - stop[i]);\n        ctx.fill();\n      }\n\n      this.visuals.hatch.doit2(ctx, i, () => {\n        ctx.beginPath();\n        ctx.rect(sleft[i], stop[i], sright[i] - sleft[i], sbottom[i] - stop[i]);\n        ctx.fill();\n      }, () => this.renderer.request_render());\n\n      if (this.visuals.line.doit) {\n        this.visuals.line.set_vectorize(ctx, i);\n        ctx.beginPath();\n        ctx.rect(sleft[i], stop[i], sright[i] - sleft[i], sbottom[i] - stop[i]);\n        ctx.stroke();\n      }\n    }\n  } // We need to clamp the endpoints inside the viewport, because various browser canvas\n  // implementations have issues drawing rects with enpoints far outside the viewport\n\n\n  _clamp_viewport() {\n    const hr = this.renderer.plot_view.frame.bbox.h_range;\n    const vr = this.renderer.plot_view.frame.bbox.v_range;\n    const n = this.stop.length;\n\n    for (let i = 0; i < n; i++) {\n      this.stop[i] = Math.max(this.stop[i], vr.start);\n      this.sbottom[i] = Math.min(this.sbottom[i], vr.end);\n      this.sleft[i] = Math.max(this.sleft[i], hr.start);\n      this.sright[i] = Math.min(this.sright[i], hr.end);\n    }\n  }\n\n  _hit_rect(geometry) {\n    return this._hit_rect_against_index(geometry);\n  }\n\n  _hit_point(geometry) {\n    const {\n      sx,\n      sy\n    } = geometry;\n    const x = this.renderer.xscale.invert(sx);\n    const y = this.renderer.yscale.invert(sy);\n    const hits = this.index.indices({\n      x0: x,\n      y0: y,\n      x1: x,\n      y1: y\n    });\n    const result = hittest.create_empty_hit_test_result();\n    result.indices = hits;\n    return result;\n  }\n\n  _hit_span(geometry) {\n    const {\n      sx,\n      sy\n    } = geometry;\n    let hits;\n\n    if (geometry.direction == 'v') {\n      const y = this.renderer.yscale.invert(sy);\n      const hr = this.renderer.plot_view.frame.bbox.h_range;\n      const [x0, x1] = this.renderer.xscale.r_invert(hr.start, hr.end);\n      hits = this.index.indices({\n        x0,\n        y0: y,\n        x1,\n        y1: y\n      });\n    } else {\n      const x = this.renderer.xscale.invert(sx);\n      const vr = this.renderer.plot_view.frame.bbox.v_range;\n      const [y0, y1] = this.renderer.yscale.r_invert(vr.start, vr.end);\n      hits = this.index.indices({\n        x0: x,\n        y0,\n        x1: x,\n        y1\n      });\n    }\n\n    const result = hittest.create_empty_hit_test_result();\n    result.indices = hits;\n    return result;\n  }\n\n  draw_legend_for_index(ctx, bbox, index) {\n    generic_area_legend(this.visuals, ctx, bbox, index);\n  }\n\n}\nBoxView.__name__ = \"BoxView\";\nexport class Box extends Glyph {\n  constructor(attrs) {\n    super(attrs);\n  }\n\n  static init_Box() {\n    this.mixins(['line', 'fill', 'hatch']);\n  }\n\n}\nBox.__name__ = \"Box\";\nBox.init_Box();","map":{"version":3,"sources":["/Users/gen/Desktop/defund_to_refund/node_modules/@bokeh/bokehjs/build/js/lib/models/glyphs/box.js"],"names":["SpatialIndex","Glyph","GlyphView","generic_area_legend","hittest","BoxView","get_anchor_point","anchor","i","_spt","left","Math","min","sleft","sright","right","max","top","stop","sbottom","bottom","x","y","_index_box","len","points","l","r","t","b","_lrtb","isNaN","isFinite","push","x0","y0","x1","y1","_render","ctx","indices","rect","visuals","fill","doit","set_vectorize","beginPath","hatch","doit2","renderer","request_render","line","stroke","_clamp_viewport","hr","plot_view","frame","bbox","h_range","vr","v_range","n","length","start","end","_hit_rect","geometry","_hit_rect_against_index","_hit_point","sx","sy","xscale","invert","yscale","hits","index","result","create_empty_hit_test_result","_hit_span","direction","r_invert","draw_legend_for_index","__name__","Box","constructor","attrs","init_Box","mixins"],"mappings":"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","sourcesContent":["import { SpatialIndex } from \"../../core/util/spatial\";\nimport { Glyph, GlyphView } from \"./glyph\";\nimport { generic_area_legend } from \"./utils\";\nimport * as hittest from \"../../core/hittest\";\nexport class BoxView extends GlyphView {\n    get_anchor_point(anchor, i, _spt) {\n        const left = Math.min(this.sleft[i], this.sright[i]);\n        const right = Math.max(this.sright[i], this.sleft[i]);\n        const top = Math.min(this.stop[i], this.sbottom[i]); // screen coordinates !!!\n        const bottom = Math.max(this.sbottom[i], this.stop[i]); //\n        switch (anchor) {\n            case \"top_left\": return { x: left, y: top };\n            case \"top_center\": return { x: (left + right) / 2, y: top };\n            case \"top_right\": return { x: right, y: top };\n            case \"bottom_left\": return { x: left, y: bottom };\n            case \"bottom_center\": return { x: (left + right) / 2, y: bottom };\n            case \"bottom_right\": return { x: right, y: bottom };\n            case \"center_left\": return { x: left, y: (top + bottom) / 2 };\n            case \"center\": return { x: (left + right) / 2, y: (top + bottom) / 2 };\n            case \"center_right\": return { x: right, y: (top + bottom) / 2 };\n            default: return null;\n        }\n    }\n    _index_box(len) {\n        const points = [];\n        for (let i = 0; i < len; i++) {\n            const [l, r, t, b] = this._lrtb(i);\n            if (isNaN(l + r + t + b) || !isFinite(l + r + t + b))\n                continue;\n            points.push({\n                x0: Math.min(l, r),\n                y0: Math.min(t, b),\n                x1: Math.max(r, l),\n                y1: Math.max(t, b),\n                i,\n            });\n        }\n        return new SpatialIndex(points);\n    }\n    _render(ctx, indices, { sleft, sright, stop, sbottom }) {\n        for (const i of indices) {\n            if (isNaN(sleft[i] + stop[i] + sright[i] + sbottom[i]))\n                continue;\n            ctx.rect(sleft[i], stop[i], sright[i] - sleft[i], sbottom[i] - stop[i]);\n            if (this.visuals.fill.doit) {\n                this.visuals.fill.set_vectorize(ctx, i);\n                ctx.beginPath();\n                ctx.rect(sleft[i], stop[i], sright[i] - sleft[i], sbottom[i] - stop[i]);\n                ctx.fill();\n            }\n            this.visuals.hatch.doit2(ctx, i, () => {\n                ctx.beginPath();\n                ctx.rect(sleft[i], stop[i], sright[i] - sleft[i], sbottom[i] - stop[i]);\n                ctx.fill();\n            }, () => this.renderer.request_render());\n            if (this.visuals.line.doit) {\n                this.visuals.line.set_vectorize(ctx, i);\n                ctx.beginPath();\n                ctx.rect(sleft[i], stop[i], sright[i] - sleft[i], sbottom[i] - stop[i]);\n                ctx.stroke();\n            }\n        }\n    }\n    // We need to clamp the endpoints inside the viewport, because various browser canvas\n    // implementations have issues drawing rects with enpoints far outside the viewport\n    _clamp_viewport() {\n        const hr = this.renderer.plot_view.frame.bbox.h_range;\n        const vr = this.renderer.plot_view.frame.bbox.v_range;\n        const n = this.stop.length;\n        for (let i = 0; i < n; i++) {\n            this.stop[i] = Math.max(this.stop[i], vr.start);\n            this.sbottom[i] = Math.min(this.sbottom[i], vr.end);\n            this.sleft[i] = Math.max(this.sleft[i], hr.start);\n            this.sright[i] = Math.min(this.sright[i], hr.end);\n        }\n    }\n    _hit_rect(geometry) {\n        return this._hit_rect_against_index(geometry);\n    }\n    _hit_point(geometry) {\n        const { sx, sy } = geometry;\n        const x = this.renderer.xscale.invert(sx);\n        const y = this.renderer.yscale.invert(sy);\n        const hits = this.index.indices({ x0: x, y0: y, x1: x, y1: y });\n        const result = hittest.create_empty_hit_test_result();\n        result.indices = hits;\n        return result;\n    }\n    _hit_span(geometry) {\n        const { sx, sy } = geometry;\n        let hits;\n        if (geometry.direction == 'v') {\n            const y = this.renderer.yscale.invert(sy);\n            const hr = this.renderer.plot_view.frame.bbox.h_range;\n            const [x0, x1] = this.renderer.xscale.r_invert(hr.start, hr.end);\n            hits = this.index.indices({ x0, y0: y, x1, y1: y });\n        }\n        else {\n            const x = this.renderer.xscale.invert(sx);\n            const vr = this.renderer.plot_view.frame.bbox.v_range;\n            const [y0, y1] = this.renderer.yscale.r_invert(vr.start, vr.end);\n            hits = this.index.indices({ x0: x, y0, x1: x, y1 });\n        }\n        const result = hittest.create_empty_hit_test_result();\n        result.indices = hits;\n        return result;\n    }\n    draw_legend_for_index(ctx, bbox, index) {\n        generic_area_legend(this.visuals, ctx, bbox, index);\n    }\n}\nBoxView.__name__ = \"BoxView\";\nexport class Box extends Glyph {\n    constructor(attrs) {\n        super(attrs);\n    }\n    static init_Box() {\n        this.mixins(['line', 'fill', 'hatch']);\n    }\n}\nBox.__name__ = \"Box\";\nBox.init_Box();\n//# sourceMappingURL=box.js.map"]},"metadata":{},"sourceType":"module"}