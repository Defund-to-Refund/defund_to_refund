{"ast":null,"code":"import { div, replaceWith } from \"../core/dom\";\nimport { bk_root } from \"../styles/root\"; // Matches Bokeh CSS class selector. Setting all Bokeh parent element class names\n// with this var prevents user configurations where css styling is unset.\n\nexport const BOKEH_ROOT = bk_root;\n\nfunction _get_element(elementid) {\n  let element = document.getElementById(elementid);\n  if (element == null) throw new Error(`Error rendering Bokeh model: could not find #${elementid} HTML tag`);\n  if (!document.body.contains(element)) throw new Error(`Error rendering Bokeh model: element #${elementid} must be under <body>`); // If autoload script, replace script tag with div for embedding.\n\n  if (element.tagName == \"SCRIPT\") {\n    const root_el = div({\n      class: BOKEH_ROOT\n    });\n    replaceWith(element, root_el);\n    element = root_el;\n  }\n\n  return element;\n}\n\nexport function _resolve_element(item) {\n  const {\n    elementid\n  } = item;\n  if (elementid != null) return _get_element(elementid);else return document.body;\n}\nexport function _resolve_root_elements(item) {\n  const roots = [];\n\n  if (item.root_ids != null && item.roots != null) {\n    for (const root_id of item.root_ids) roots.push(_get_element(item.roots[root_id]));\n  }\n\n  return roots;\n}","map":{"version":3,"sources":["/Users/gen/Desktop/defund_to_refund/node_modules/@bokeh/bokehjs/build/js/lib/embed/dom.js"],"names":["div","replaceWith","bk_root","BOKEH_ROOT","_get_element","elementid","element","document","getElementById","Error","body","contains","tagName","root_el","class","_resolve_element","item","_resolve_root_elements","roots","root_ids","root_id","push"],"mappings":"AAAA,SAASA,GAAT,EAAcC,WAAd,QAAiC,aAAjC;AACA,SAASC,OAAT,QAAwB,gBAAxB,C,CACA;AACA;;AACA,OAAO,MAAMC,UAAU,GAAGD,OAAnB;;AACP,SAASE,YAAT,CAAsBC,SAAtB,EAAiC;AAC7B,MAAIC,OAAO,GAAGC,QAAQ,CAACC,cAAT,CAAwBH,SAAxB,CAAd;AACA,MAAIC,OAAO,IAAI,IAAf,EACI,MAAM,IAAIG,KAAJ,CAAW,gDAA+CJ,SAAU,WAApE,CAAN;AACJ,MAAI,CAACE,QAAQ,CAACG,IAAT,CAAcC,QAAd,CAAuBL,OAAvB,CAAL,EACI,MAAM,IAAIG,KAAJ,CAAW,yCAAwCJ,SAAU,uBAA7D,CAAN,CALyB,CAM7B;;AACA,MAAIC,OAAO,CAACM,OAAR,IAAmB,QAAvB,EAAiC;AAC7B,UAAMC,OAAO,GAAGb,GAAG,CAAC;AAAEc,MAAAA,KAAK,EAAEX;AAAT,KAAD,CAAnB;AACAF,IAAAA,WAAW,CAACK,OAAD,EAAUO,OAAV,CAAX;AACAP,IAAAA,OAAO,GAAGO,OAAV;AACH;;AACD,SAAOP,OAAP;AACH;;AACD,OAAO,SAASS,gBAAT,CAA0BC,IAA1B,EAAgC;AACnC,QAAM;AAAEX,IAAAA;AAAF,MAAgBW,IAAtB;AACA,MAAIX,SAAS,IAAI,IAAjB,EACI,OAAOD,YAAY,CAACC,SAAD,CAAnB,CADJ,KAGI,OAAOE,QAAQ,CAACG,IAAhB;AACP;AACD,OAAO,SAASO,sBAAT,CAAgCD,IAAhC,EAAsC;AACzC,QAAME,KAAK,GAAG,EAAd;;AACA,MAAKF,IAAI,CAACG,QAAL,IAAiB,IAAlB,IAA4BH,IAAI,CAACE,KAAL,IAAc,IAA9C,EAAqD;AACjD,SAAK,MAAME,OAAX,IAAsBJ,IAAI,CAACG,QAA3B,EACID,KAAK,CAACG,IAAN,CAAWjB,YAAY,CAACY,IAAI,CAACE,KAAL,CAAWE,OAAX,CAAD,CAAvB;AACP;;AACD,SAAOF,KAAP;AACH","sourcesContent":["import { div, replaceWith } from \"../core/dom\";\nimport { bk_root } from \"../styles/root\";\n// Matches Bokeh CSS class selector. Setting all Bokeh parent element class names\n// with this var prevents user configurations where css styling is unset.\nexport const BOKEH_ROOT = bk_root;\nfunction _get_element(elementid) {\n    let element = document.getElementById(elementid);\n    if (element == null)\n        throw new Error(`Error rendering Bokeh model: could not find #${elementid} HTML tag`);\n    if (!document.body.contains(element))\n        throw new Error(`Error rendering Bokeh model: element #${elementid} must be under <body>`);\n    // If autoload script, replace script tag with div for embedding.\n    if (element.tagName == \"SCRIPT\") {\n        const root_el = div({ class: BOKEH_ROOT });\n        replaceWith(element, root_el);\n        element = root_el;\n    }\n    return element;\n}\nexport function _resolve_element(item) {\n    const { elementid } = item;\n    if (elementid != null)\n        return _get_element(elementid);\n    else\n        return document.body;\n}\nexport function _resolve_root_elements(item) {\n    const roots = [];\n    if ((item.root_ids != null) && (item.roots != null)) {\n        for (const root_id of item.root_ids)\n            roots.push(_get_element(item.roots[root_id]));\n    }\n    return roots;\n}\n//# sourceMappingURL=dom.js.map"]},"metadata":{},"sourceType":"module"}