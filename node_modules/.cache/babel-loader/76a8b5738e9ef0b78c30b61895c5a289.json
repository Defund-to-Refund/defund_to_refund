{"ast":null,"code":"import { Document } from \"../document\";\nimport * as embed from \"../embed\";\nimport * as models from \"./models\";\nimport { VectorSpec } from \"../core/properties\";\nimport { startsWith } from \"../core/util/string\";\nimport { isEqual } from \"../core/util/eq\";\nimport { some, every, includes } from \"../core/util/array\";\nimport { clone } from \"../core/util/object\";\nimport { isNumber, isString, isArray } from \"../core/util/types\";\nimport { GlyphRenderer, Axis, Grid, Tool, Plot } from \"./models\";\nimport { Legend } from \"../models/annotations/legend\";\nexport { gridplot } from \"./gridplot\";\nexport { rgb2hex as color } from \"../core/util/color\";\nconst _default_tools = [\"pan\", \"wheel_zoom\", \"box_zoom\", \"save\", \"reset\", \"help\"];\nconst _default_color = \"#1f77b4\";\nconst _default_alpha = 1.0;\n\nfunction _with_default(value, default_value) {\n  return value === undefined ? default_value : value;\n}\n\nexport class Figure extends Plot {\n  constructor(attrs = {}) {\n    attrs = Object.assign({}, attrs);\n\n    const tools = _with_default(attrs.tools, _default_tools);\n\n    delete attrs.tools;\n\n    const x_axis_type = _with_default(attrs.x_axis_type, \"auto\");\n\n    const y_axis_type = _with_default(attrs.y_axis_type, \"auto\");\n\n    delete attrs.x_axis_type;\n    delete attrs.y_axis_type;\n    const x_minor_ticks = attrs.x_minor_ticks != null ? attrs.x_minor_ticks : \"auto\";\n    const y_minor_ticks = attrs.y_minor_ticks != null ? attrs.y_minor_ticks : \"auto\";\n    delete attrs.x_minor_ticks;\n    delete attrs.y_minor_ticks;\n    const x_axis_location = attrs.x_axis_location != null ? attrs.x_axis_location : \"below\";\n    const y_axis_location = attrs.y_axis_location != null ? attrs.y_axis_location : \"left\";\n    delete attrs.x_axis_location;\n    delete attrs.y_axis_location;\n    const x_axis_label = attrs.x_axis_label != null ? attrs.x_axis_label : \"\";\n    const y_axis_label = attrs.y_axis_label != null ? attrs.y_axis_label : \"\";\n    delete attrs.x_axis_label;\n    delete attrs.y_axis_label;\n\n    const x_range = Figure._get_range(attrs.x_range);\n\n    const y_range = Figure._get_range(attrs.y_range);\n\n    delete attrs.x_range;\n    delete attrs.y_range;\n    const x_scale = attrs.x_scale != null ? attrs.x_scale : Figure._get_scale(x_range, x_axis_type);\n    const y_scale = attrs.y_scale != null ? attrs.y_scale : Figure._get_scale(y_range, y_axis_type);\n    delete attrs.x_scale;\n    delete attrs.y_scale;\n    super(Object.assign(Object.assign({}, attrs), {\n      x_range,\n      y_range,\n      x_scale,\n      y_scale\n    }));\n\n    this._process_axis_and_grid(x_axis_type, x_axis_location, x_minor_ticks, x_axis_label, x_range, 0);\n\n    this._process_axis_and_grid(y_axis_type, y_axis_location, y_minor_ticks, y_axis_label, y_range, 1);\n\n    this.add_tools(...this._process_tools(tools));\n  }\n\n  get xgrid() {\n    return this.center.filter(r => r instanceof Grid && r.dimension == 0);\n  }\n\n  get ygrid() {\n    return this.center.filter(r => r instanceof Grid && r.dimension == 1);\n  }\n\n  get xaxis() {\n    return this.below.concat(this.above).filter(r => r instanceof Axis);\n  }\n\n  get yaxis() {\n    return this.left.concat(this.right).filter(r => r instanceof Axis);\n  }\n\n  get legend() {\n    const legends = this.panels.filter(r => r instanceof Legend);\n\n    if (legends.length == 0) {\n      const legend = new Legend();\n      this.add_layout(legend);\n      return legend;\n    } else {\n      const [legend] = legends;\n      return legend;\n    }\n  }\n\n  annular_wedge(...args) {\n    return this._glyph(models.AnnularWedge, \"x,y,inner_radius,outer_radius,start_angle,end_angle\", args);\n  }\n\n  annulus(...args) {\n    return this._glyph(models.Annulus, \"x,y,inner_radius,outer_radius\", args);\n  }\n\n  arc(...args) {\n    return this._glyph(models.Arc, \"x,y,radius,start_angle,end_angle\", args);\n  }\n\n  bezier(...args) {\n    return this._glyph(models.Bezier, \"x0,y0,x1,y1,cx0,cy0,cx1,cy1\", args);\n  }\n\n  circle(...args) {\n    return this._glyph(models.Circle, \"x,y\", args);\n  }\n\n  ellipse(...args) {\n    return this._glyph(models.Ellipse, \"x,y,width,height\", args);\n  }\n\n  hbar(...args) {\n    return this._glyph(models.HBar, \"y,height,right,left\", args);\n  }\n\n  hex_tile(...args) {\n    return this._glyph(models.HexTile, \"q,r\", args);\n  }\n\n  image(...args) {\n    return this._glyph(models.Image, \"color_mapper,image,rows,cols,x,y,dw,dh\", args);\n  }\n\n  image_rgba(...args) {\n    return this._glyph(models.ImageRGBA, \"image,rows,cols,x,y,dw,dh\", args);\n  }\n\n  image_url(...args) {\n    return this._glyph(models.ImageURL, \"url,x,y,w,h\", args);\n  }\n\n  line(...args) {\n    return this._glyph(models.Line, \"x,y\", args);\n  }\n\n  multi_line(...args) {\n    return this._glyph(models.MultiLine, \"xs,ys\", args);\n  }\n\n  multi_polygons(...args) {\n    return this._glyph(models.MultiPolygons, \"xs,ys\", args);\n  }\n\n  oval(...args) {\n    return this._glyph(models.Oval, \"x,y,width,height\", args);\n  }\n\n  patch(...args) {\n    return this._glyph(models.Patch, \"x,y\", args);\n  }\n\n  patches(...args) {\n    return this._glyph(models.Patches, \"xs,ys\", args);\n  }\n\n  quad(...args) {\n    return this._glyph(models.Quad, \"left,right,bottom,top\", args);\n  }\n\n  quadratic(...args) {\n    return this._glyph(models.Quadratic, \"x0,y0,x1,y1,cx,cy\", args);\n  }\n\n  ray(...args) {\n    return this._glyph(models.Ray, \"x,y,length\", args);\n  }\n\n  rect(...args) {\n    return this._glyph(models.Rect, \"x,y,width,height\", args);\n  }\n\n  segment(...args) {\n    return this._glyph(models.Segment, \"x0,y0,x1,y1\", args);\n  }\n\n  step(...args) {\n    return this._glyph(models.Step, \"x,y,mode\", args);\n  }\n\n  text(...args) {\n    return this._glyph(models.Text, \"x,y,text\", args);\n  }\n\n  vbar(...args) {\n    return this._glyph(models.VBar, \"x,width,top,bottom\", args);\n  }\n\n  wedge(...args) {\n    return this._glyph(models.Wedge, \"x,y,radius,start_angle,end_angle\", args);\n  }\n\n  asterisk(...args) {\n    return this._marker(models.Asterisk, args);\n  }\n\n  circle_cross(...args) {\n    return this._marker(models.CircleCross, args);\n  }\n\n  circle_x(...args) {\n    return this._marker(models.CircleX, args);\n  }\n\n  cross(...args) {\n    return this._marker(models.Cross, args);\n  }\n\n  dash(...args) {\n    return this._marker(models.Dash, args);\n  }\n\n  diamond(...args) {\n    return this._marker(models.Diamond, args);\n  }\n\n  diamond_cross(...args) {\n    return this._marker(models.DiamondCross, args);\n  }\n\n  inverted_triangle(...args) {\n    return this._marker(models.InvertedTriangle, args);\n  }\n\n  square(...args) {\n    return this._marker(models.Square, args);\n  }\n\n  square_cross(...args) {\n    return this._marker(models.SquareCross, args);\n  }\n\n  square_x(...args) {\n    return this._marker(models.SquareX, args);\n  }\n\n  triangle(...args) {\n    return this._marker(models.Triangle, args);\n  }\n\n  x(...args) {\n    return this._marker(models.X, args);\n  }\n\n  scatter(...args) {\n    return this._marker(models.Scatter, args);\n  }\n\n  _pop_visuals(cls, props, prefix = \"\", defaults = {}, override_defaults = {}) {\n    const _split_feature_trait = function (ft) {\n      const fta = ft.split('_', 2);\n\n      if (fta.length == 2) {\n        return fta;\n      } else {\n        return fta.concat(['']);\n      }\n    };\n\n    const _is_visual = function (ft) {\n      const [feature, trait] = _split_feature_trait(ft);\n\n      return includes(['line', 'fill', 'text', 'global'], feature) && trait !== '';\n    };\n\n    defaults = Object.assign({}, defaults);\n\n    if (!defaults.hasOwnProperty('text_color')) {\n      defaults.text_color = 'black';\n    }\n\n    const trait_defaults = {};\n\n    if (!trait_defaults.hasOwnProperty('color')) {\n      trait_defaults.color = _default_color;\n    }\n\n    if (!trait_defaults.hasOwnProperty('alpha')) {\n      trait_defaults.alpha = _default_alpha;\n    }\n\n    const result = {};\n    const traits = new Set();\n\n    for (const pname in cls.prototype.props) {\n      if (_is_visual(pname)) {\n        const trait = _split_feature_trait(pname)[1];\n\n        if (props.hasOwnProperty(prefix + pname)) {\n          result[pname] = props[prefix + pname];\n          delete props[prefix + pname];\n        } else if (!cls.prototype.props.hasOwnProperty(trait) && props.hasOwnProperty(prefix + trait)) {\n          result[pname] = props[prefix + trait];\n        } else if (override_defaults.hasOwnProperty(trait)) {\n          result[pname] = override_defaults[trait];\n        } else if (defaults.hasOwnProperty(pname)) {\n          result[pname] = defaults[pname];\n        } else if (trait_defaults.hasOwnProperty(trait)) {\n          result[pname] = trait_defaults[trait];\n        }\n\n        if (!cls.prototype.props.hasOwnProperty(trait)) {\n          traits.add(trait);\n        }\n      }\n    }\n\n    traits.forEach(function (_key, val, _obj) {\n      delete props[prefix + val];\n    });\n    return result;\n  }\n\n  _find_uniq_name(data, name) {\n    let i = 1;\n\n    while (true) {\n      const new_name = `${name}__${i}`;\n\n      if (data[new_name] != null) {\n        i += 1;\n      } else {\n        return new_name;\n      }\n    }\n  }\n\n  _fixup_values(cls, data, attrs) {\n    for (const name in attrs) {\n      const value = attrs[name];\n      const prop = cls.prototype.props[name];\n\n      if (prop != null) {\n        if (prop.type.prototype instanceof VectorSpec) {\n          if (value != null) {\n            if (isArray(value)) {\n              let field;\n\n              if (data[name] != null) {\n                if (data[name] !== value) {\n                  field = this._find_uniq_name(data, name);\n                  data[field] = value;\n                } else {\n                  field = name;\n                }\n              } else {\n                field = name;\n                data[field] = value;\n              }\n\n              attrs[name] = {\n                field\n              };\n            } else if (isNumber(value) || isString(value)) {\n              // or Date?\n              attrs[name] = {\n                value\n              };\n            }\n          }\n        }\n      }\n    }\n  }\n\n  _glyph(cls, params_string, args) {\n    const params = params_string.split(\",\");\n    let attrs;\n\n    if (args.length == 0) {\n      attrs = {};\n    } else if (args.length == 1) {\n      attrs = clone(args[0]);\n    } else {\n      attrs = clone(args[args.length - 1]);\n\n      for (let i = 0; i < params.length; i++) {\n        const param = params[i];\n        attrs[param] = args[i];\n      }\n    }\n\n    const source = attrs.source != null ? attrs.source : new models.ColumnDataSource();\n    const data = clone(source.data);\n    delete attrs.source;\n\n    const legend = this._process_legend(attrs.legend, source);\n\n    delete attrs.legend;\n    const has_sglyph = some(Object.keys(attrs), key => startsWith(key, \"selection_\"));\n    const has_hglyph = some(Object.keys(attrs), key => startsWith(key, \"hover_\"));\n\n    const glyph_ca = this._pop_visuals(cls, attrs);\n\n    const nsglyph_ca = this._pop_visuals(cls, attrs, \"nonselection_\", glyph_ca, {\n      alpha: 0.1\n    });\n\n    const sglyph_ca = has_sglyph ? this._pop_visuals(cls, attrs, \"selection_\", glyph_ca) : {};\n    const hglyph_ca = has_hglyph ? this._pop_visuals(cls, attrs, \"hover_\", glyph_ca) : {};\n\n    this._fixup_values(cls, data, glyph_ca);\n\n    this._fixup_values(cls, data, nsglyph_ca);\n\n    this._fixup_values(cls, data, sglyph_ca);\n\n    this._fixup_values(cls, data, hglyph_ca);\n\n    this._fixup_values(cls, data, attrs);\n\n    source.data = data;\n\n    const _make_glyph = (cls, attrs, extra_attrs) => {\n      return new cls(Object.assign(Object.assign({}, attrs), extra_attrs));\n    };\n\n    const glyph = _make_glyph(cls, attrs, glyph_ca);\n\n    const nsglyph = _make_glyph(cls, attrs, nsglyph_ca);\n\n    const sglyph = has_sglyph ? _make_glyph(cls, attrs, sglyph_ca) : undefined;\n    const hglyph = has_hglyph ? _make_glyph(cls, attrs, hglyph_ca) : undefined;\n    const glyph_renderer = new GlyphRenderer({\n      data_source: source,\n      glyph,\n      nonselection_glyph: nsglyph,\n      selection_glyph: sglyph,\n      hover_glyph: hglyph\n    });\n\n    if (legend != null) {\n      this._update_legend(legend, glyph_renderer);\n    }\n\n    this.add_renderers(glyph_renderer);\n    return glyph_renderer;\n  }\n\n  _marker(cls, args) {\n    return this._glyph(cls, \"x,y\", args);\n  }\n\n  static _get_range(range) {\n    if (range == null) {\n      return new models.DataRange1d();\n    }\n\n    if (range instanceof models.Range) {\n      return range;\n    }\n\n    if (isArray(range)) {\n      if (every(range, isString)) {\n        const factors = range;\n        return new models.FactorRange({\n          factors\n        });\n      }\n\n      if (range.length == 2) {\n        const [start, end] = range;\n        return new models.Range1d({\n          start,\n          end\n        });\n      }\n    }\n\n    throw new Error(`unable to determine proper range for: '${range}'`);\n  }\n\n  static _get_scale(range_input, axis_type) {\n    if (range_input instanceof models.DataRange1d || range_input instanceof models.Range1d) {\n      switch (axis_type) {\n        case null:\n        case \"auto\":\n        case \"linear\":\n        case \"datetime\":\n          return new models.LinearScale();\n\n        case \"log\":\n          return new models.LogScale();\n      }\n    }\n\n    if (range_input instanceof models.FactorRange) {\n      return new models.CategoricalScale();\n    }\n\n    throw new Error(`unable to determine proper scale for: '${range_input}'`);\n  }\n\n  _process_axis_and_grid(axis_type, axis_location, minor_ticks, axis_label, rng, dim) {\n    const axiscls = this._get_axis_class(axis_type, rng);\n\n    if (axiscls != null) {\n      if (axiscls === models.LogAxis) {\n        if (dim === 0) {\n          this.x_scale = new models.LogScale();\n        } else {\n          this.y_scale = new models.LogScale();\n        }\n      }\n\n      const axis = new axiscls();\n\n      if (axis.ticker instanceof models.ContinuousTicker) {\n        axis.ticker.num_minor_ticks = this._get_num_minor_ticks(axiscls, minor_ticks);\n      }\n\n      if (axis_label.length !== 0) {\n        axis.axis_label = axis_label;\n      }\n\n      const grid = new models.Grid({\n        dimension: dim,\n        ticker: axis.ticker\n      });\n\n      if (axis_location !== null) {\n        this.add_layout(axis, axis_location);\n      }\n\n      this.add_layout(grid);\n    }\n  }\n\n  _get_axis_class(axis_type, range) {\n    switch (axis_type) {\n      case null:\n        return null;\n\n      case \"linear\":\n        return models.LinearAxis;\n\n      case \"log\":\n        return models.LogAxis;\n\n      case \"datetime\":\n        return models.DatetimeAxis;\n\n      case \"auto\":\n        if (range instanceof models.FactorRange) return models.CategoricalAxis;else return models.LinearAxis;\n      // TODO: return models.DatetimeAxis (Date type)\n\n      default:\n        throw new Error(\"shouldn't have happened\");\n    }\n  }\n\n  _get_num_minor_ticks(axis_class, num_minor_ticks) {\n    if (isNumber(num_minor_ticks)) {\n      if (num_minor_ticks <= 1) {\n        throw new Error(\"num_minor_ticks must be > 1\");\n      }\n\n      return num_minor_ticks;\n    }\n\n    if (num_minor_ticks == null) {\n      return 0;\n    }\n\n    if (num_minor_ticks === 'auto') {\n      if (axis_class === models.LogAxis) {\n        return 10;\n      }\n\n      return 5;\n    }\n\n    throw new Error(\"shouldn't have happened\");\n  }\n\n  _process_tools(tools) {\n    if (isString(tools)) tools = tools.split(/\\s*,\\s*/).filter(tool => tool.length > 0);\n    return tools.map(tool => isString(tool) ? Tool.from_string(tool) : tool);\n  }\n\n  _process_legend(legend, source) {\n    let legend_item_label = null;\n\n    if (legend != null) {\n      if (isString(legend)) {\n        legend_item_label = {\n          value: legend\n        };\n\n        if (source.columns() != null) {\n          if (includes(source.columns(), legend)) {\n            legend_item_label = {\n              field: legend\n            };\n          }\n        }\n      } else {\n        legend_item_label = legend;\n      }\n    }\n\n    return legend_item_label;\n  }\n\n  _update_legend(legend_item_label, glyph_renderer) {\n    const {\n      legend\n    } = this;\n    let added = false;\n\n    for (const item of legend.items) {\n      if (item.label != null && isEqual(item.label, legend_item_label)) {\n        // XXX: remove this when vectorable properties are refined\n        const label = item.label;\n\n        if (\"value\" in label) {\n          item.renderers.push(glyph_renderer);\n          added = true;\n          break;\n        }\n\n        if (\"field\" in label && glyph_renderer.data_source == item.renderers[0].data_source) {\n          item.renderers.push(glyph_renderer);\n          added = true;\n          break;\n        }\n      }\n    }\n\n    if (!added) {\n      const new_item = new models.LegendItem({\n        label: legend_item_label,\n        renderers: [glyph_renderer]\n      });\n      legend.items.push(new_item);\n    }\n  }\n\n}\nFigure.__name__ = \"Plot\";\nexport function figure(attributes) {\n  return new Figure(attributes);\n}\nexport async function show(obj, target) {\n  const doc = new Document();\n\n  for (const item of isArray(obj) ? obj : [obj]) doc.add_root(item);\n\n  let element;\n\n  if (target == null) {\n    element = document.body;\n  } else if (isString(target)) {\n    const found = document.querySelector(target);\n    if (found != null && found instanceof HTMLElement) element = found;else throw new Error(`'${target}' selector didn't match any elements`);\n  } else if (target instanceof HTMLElement) {\n    element = target;\n  } else if (typeof $ !== 'undefined' && target instanceof $) {\n    element = target[0];\n  } else {\n    throw new Error(\"target should be HTMLElement, string selector, $ or null\");\n  }\n\n  const views = await embed.add_document_standalone(doc, element);\n  return new Promise((resolve, _reject) => {\n    const result = isArray(obj) ? views : views[0];\n    if (doc.is_idle) resolve(result);else doc.idle.connect(() => resolve(result));\n  });\n}","map":{"version":3,"sources":["/Users/gen/Desktop/defund_to_refund/node_modules/@bokeh/bokehjs/build/js/lib/api/plotting.js"],"names":["Document","embed","models","VectorSpec","startsWith","isEqual","some","every","includes","clone","isNumber","isString","isArray","GlyphRenderer","Axis","Grid","Tool","Plot","Legend","gridplot","rgb2hex","color","_default_tools","_default_color","_default_alpha","_with_default","value","default_value","undefined","Figure","constructor","attrs","Object","assign","tools","x_axis_type","y_axis_type","x_minor_ticks","y_minor_ticks","x_axis_location","y_axis_location","x_axis_label","y_axis_label","x_range","_get_range","y_range","x_scale","_get_scale","y_scale","_process_axis_and_grid","add_tools","_process_tools","xgrid","center","filter","r","dimension","ygrid","xaxis","below","concat","above","yaxis","left","right","legend","legends","panels","length","add_layout","annular_wedge","args","_glyph","AnnularWedge","annulus","Annulus","arc","Arc","bezier","Bezier","circle","Circle","ellipse","Ellipse","hbar","HBar","hex_tile","HexTile","image","Image","image_rgba","ImageRGBA","image_url","ImageURL","line","Line","multi_line","MultiLine","multi_polygons","MultiPolygons","oval","Oval","patch","Patch","patches","Patches","quad","Quad","quadratic","Quadratic","ray","Ray","rect","Rect","segment","Segment","step","Step","text","Text","vbar","VBar","wedge","Wedge","asterisk","_marker","Asterisk","circle_cross","CircleCross","circle_x","CircleX","cross","Cross","dash","Dash","diamond","Diamond","diamond_cross","DiamondCross","inverted_triangle","InvertedTriangle","square","Square","square_cross","SquareCross","square_x","SquareX","triangle","Triangle","x","X","scatter","Scatter","_pop_visuals","cls","props","prefix","defaults","override_defaults","_split_feature_trait","ft","fta","split","_is_visual","feature","trait","hasOwnProperty","text_color","trait_defaults","alpha","result","traits","Set","pname","prototype","add","forEach","_key","val","_obj","_find_uniq_name","data","name","i","new_name","_fixup_values","prop","type","field","params_string","params","param","source","ColumnDataSource","_process_legend","has_sglyph","keys","key","has_hglyph","glyph_ca","nsglyph_ca","sglyph_ca","hglyph_ca","_make_glyph","extra_attrs","glyph","nsglyph","sglyph","hglyph","glyph_renderer","data_source","nonselection_glyph","selection_glyph","hover_glyph","_update_legend","add_renderers","range","DataRange1d","Range","factors","FactorRange","start","end","Range1d","Error","range_input","axis_type","LinearScale","LogScale","CategoricalScale","axis_location","minor_ticks","axis_label","rng","dim","axiscls","_get_axis_class","LogAxis","axis","ticker","ContinuousTicker","num_minor_ticks","_get_num_minor_ticks","grid","LinearAxis","DatetimeAxis","CategoricalAxis","axis_class","tool","map","from_string","legend_item_label","columns","added","item","items","label","renderers","push","new_item","LegendItem","__name__","figure","attributes","show","obj","target","doc","add_root","element","document","body","found","querySelector","HTMLElement","$","views","add_document_standalone","Promise","resolve","_reject","is_idle","idle","connect"],"mappings":"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","sourcesContent":["import { Document } from \"../document\";\nimport * as embed from \"../embed\";\nimport * as models from \"./models\";\nimport { VectorSpec } from \"../core/properties\";\nimport { startsWith } from \"../core/util/string\";\nimport { isEqual } from \"../core/util/eq\";\nimport { some, every, includes } from \"../core/util/array\";\nimport { clone } from \"../core/util/object\";\nimport { isNumber, isString, isArray } from \"../core/util/types\";\nimport { GlyphRenderer, Axis, Grid, Tool, Plot } from \"./models\";\nimport { Legend } from \"../models/annotations/legend\";\nexport { gridplot } from \"./gridplot\";\nexport { rgb2hex as color } from \"../core/util/color\";\nconst _default_tools = [\"pan\", \"wheel_zoom\", \"box_zoom\", \"save\", \"reset\", \"help\"];\nconst _default_color = \"#1f77b4\";\nconst _default_alpha = 1.0;\nfunction _with_default(value, default_value) {\n    return value === undefined ? default_value : value;\n}\nexport class Figure extends Plot {\n    constructor(attrs = {}) {\n        attrs = Object.assign({}, attrs);\n        const tools = _with_default(attrs.tools, _default_tools);\n        delete attrs.tools;\n        const x_axis_type = _with_default(attrs.x_axis_type, \"auto\");\n        const y_axis_type = _with_default(attrs.y_axis_type, \"auto\");\n        delete attrs.x_axis_type;\n        delete attrs.y_axis_type;\n        const x_minor_ticks = attrs.x_minor_ticks != null ? attrs.x_minor_ticks : \"auto\";\n        const y_minor_ticks = attrs.y_minor_ticks != null ? attrs.y_minor_ticks : \"auto\";\n        delete attrs.x_minor_ticks;\n        delete attrs.y_minor_ticks;\n        const x_axis_location = attrs.x_axis_location != null ? attrs.x_axis_location : \"below\";\n        const y_axis_location = attrs.y_axis_location != null ? attrs.y_axis_location : \"left\";\n        delete attrs.x_axis_location;\n        delete attrs.y_axis_location;\n        const x_axis_label = attrs.x_axis_label != null ? attrs.x_axis_label : \"\";\n        const y_axis_label = attrs.y_axis_label != null ? attrs.y_axis_label : \"\";\n        delete attrs.x_axis_label;\n        delete attrs.y_axis_label;\n        const x_range = Figure._get_range(attrs.x_range);\n        const y_range = Figure._get_range(attrs.y_range);\n        delete attrs.x_range;\n        delete attrs.y_range;\n        const x_scale = attrs.x_scale != null ? attrs.x_scale : Figure._get_scale(x_range, x_axis_type);\n        const y_scale = attrs.y_scale != null ? attrs.y_scale : Figure._get_scale(y_range, y_axis_type);\n        delete attrs.x_scale;\n        delete attrs.y_scale;\n        super(Object.assign(Object.assign({}, attrs), { x_range, y_range, x_scale, y_scale }));\n        this._process_axis_and_grid(x_axis_type, x_axis_location, x_minor_ticks, x_axis_label, x_range, 0);\n        this._process_axis_and_grid(y_axis_type, y_axis_location, y_minor_ticks, y_axis_label, y_range, 1);\n        this.add_tools(...this._process_tools(tools));\n    }\n    get xgrid() {\n        return this.center.filter((r) => r instanceof Grid && r.dimension == 0);\n    }\n    get ygrid() {\n        return this.center.filter((r) => r instanceof Grid && r.dimension == 1);\n    }\n    get xaxis() {\n        return this.below.concat(this.above).filter((r) => r instanceof Axis);\n    }\n    get yaxis() {\n        return this.left.concat(this.right).filter((r) => r instanceof Axis);\n    }\n    get legend() {\n        const legends = this.panels.filter((r) => r instanceof Legend);\n        if (legends.length == 0) {\n            const legend = new Legend();\n            this.add_layout(legend);\n            return legend;\n        }\n        else {\n            const [legend] = legends;\n            return legend;\n        }\n    }\n    annular_wedge(...args) {\n        return this._glyph(models.AnnularWedge, \"x,y,inner_radius,outer_radius,start_angle,end_angle\", args);\n    }\n    annulus(...args) {\n        return this._glyph(models.Annulus, \"x,y,inner_radius,outer_radius\", args);\n    }\n    arc(...args) {\n        return this._glyph(models.Arc, \"x,y,radius,start_angle,end_angle\", args);\n    }\n    bezier(...args) {\n        return this._glyph(models.Bezier, \"x0,y0,x1,y1,cx0,cy0,cx1,cy1\", args);\n    }\n    circle(...args) {\n        return this._glyph(models.Circle, \"x,y\", args);\n    }\n    ellipse(...args) {\n        return this._glyph(models.Ellipse, \"x,y,width,height\", args);\n    }\n    hbar(...args) {\n        return this._glyph(models.HBar, \"y,height,right,left\", args);\n    }\n    hex_tile(...args) {\n        return this._glyph(models.HexTile, \"q,r\", args);\n    }\n    image(...args) {\n        return this._glyph(models.Image, \"color_mapper,image,rows,cols,x,y,dw,dh\", args);\n    }\n    image_rgba(...args) {\n        return this._glyph(models.ImageRGBA, \"image,rows,cols,x,y,dw,dh\", args);\n    }\n    image_url(...args) {\n        return this._glyph(models.ImageURL, \"url,x,y,w,h\", args);\n    }\n    line(...args) {\n        return this._glyph(models.Line, \"x,y\", args);\n    }\n    multi_line(...args) {\n        return this._glyph(models.MultiLine, \"xs,ys\", args);\n    }\n    multi_polygons(...args) {\n        return this._glyph(models.MultiPolygons, \"xs,ys\", args);\n    }\n    oval(...args) {\n        return this._glyph(models.Oval, \"x,y,width,height\", args);\n    }\n    patch(...args) {\n        return this._glyph(models.Patch, \"x,y\", args);\n    }\n    patches(...args) {\n        return this._glyph(models.Patches, \"xs,ys\", args);\n    }\n    quad(...args) {\n        return this._glyph(models.Quad, \"left,right,bottom,top\", args);\n    }\n    quadratic(...args) {\n        return this._glyph(models.Quadratic, \"x0,y0,x1,y1,cx,cy\", args);\n    }\n    ray(...args) {\n        return this._glyph(models.Ray, \"x,y,length\", args);\n    }\n    rect(...args) {\n        return this._glyph(models.Rect, \"x,y,width,height\", args);\n    }\n    segment(...args) {\n        return this._glyph(models.Segment, \"x0,y0,x1,y1\", args);\n    }\n    step(...args) {\n        return this._glyph(models.Step, \"x,y,mode\", args);\n    }\n    text(...args) {\n        return this._glyph(models.Text, \"x,y,text\", args);\n    }\n    vbar(...args) {\n        return this._glyph(models.VBar, \"x,width,top,bottom\", args);\n    }\n    wedge(...args) {\n        return this._glyph(models.Wedge, \"x,y,radius,start_angle,end_angle\", args);\n    }\n    asterisk(...args) {\n        return this._marker(models.Asterisk, args);\n    }\n    circle_cross(...args) {\n        return this._marker(models.CircleCross, args);\n    }\n    circle_x(...args) {\n        return this._marker(models.CircleX, args);\n    }\n    cross(...args) {\n        return this._marker(models.Cross, args);\n    }\n    dash(...args) {\n        return this._marker(models.Dash, args);\n    }\n    diamond(...args) {\n        return this._marker(models.Diamond, args);\n    }\n    diamond_cross(...args) {\n        return this._marker(models.DiamondCross, args);\n    }\n    inverted_triangle(...args) {\n        return this._marker(models.InvertedTriangle, args);\n    }\n    square(...args) {\n        return this._marker(models.Square, args);\n    }\n    square_cross(...args) {\n        return this._marker(models.SquareCross, args);\n    }\n    square_x(...args) {\n        return this._marker(models.SquareX, args);\n    }\n    triangle(...args) {\n        return this._marker(models.Triangle, args);\n    }\n    x(...args) {\n        return this._marker(models.X, args);\n    }\n    scatter(...args) {\n        return this._marker(models.Scatter, args);\n    }\n    _pop_visuals(cls, props, prefix = \"\", defaults = {}, override_defaults = {}) {\n        const _split_feature_trait = function (ft) {\n            const fta = ft.split('_', 2);\n            if (fta.length == 2) {\n                return fta;\n            }\n            else {\n                return fta.concat(['']);\n            }\n        };\n        const _is_visual = function (ft) {\n            const [feature, trait] = _split_feature_trait(ft);\n            return includes(['line', 'fill', 'text', 'global'], feature) && (trait !== '');\n        };\n        defaults = Object.assign({}, defaults);\n        if (!defaults.hasOwnProperty('text_color')) {\n            defaults.text_color = 'black';\n        }\n        const trait_defaults = {};\n        if (!trait_defaults.hasOwnProperty('color')) {\n            trait_defaults.color = _default_color;\n        }\n        if (!trait_defaults.hasOwnProperty('alpha')) {\n            trait_defaults.alpha = _default_alpha;\n        }\n        const result = {};\n        const traits = new Set();\n        for (const pname in cls.prototype.props) {\n            if (_is_visual(pname)) {\n                const trait = _split_feature_trait(pname)[1];\n                if (props.hasOwnProperty(prefix + pname)) {\n                    result[pname] = props[prefix + pname];\n                    delete props[prefix + pname];\n                }\n                else if (!cls.prototype.props.hasOwnProperty(trait)\n                    && props.hasOwnProperty(prefix + trait)) {\n                    result[pname] = props[prefix + trait];\n                }\n                else if (override_defaults.hasOwnProperty(trait)) {\n                    result[pname] = override_defaults[trait];\n                }\n                else if (defaults.hasOwnProperty(pname)) {\n                    result[pname] = defaults[pname];\n                }\n                else if (trait_defaults.hasOwnProperty(trait)) {\n                    result[pname] = trait_defaults[trait];\n                }\n                if (!cls.prototype.props.hasOwnProperty(trait)) {\n                    traits.add(trait);\n                }\n            }\n        }\n        traits.forEach(function (_key, val, _obj) {\n            delete props[prefix + val];\n        });\n        return result;\n    }\n    _find_uniq_name(data, name) {\n        let i = 1;\n        while (true) {\n            const new_name = `${name}__${i}`;\n            if (data[new_name] != null) {\n                i += 1;\n            }\n            else {\n                return new_name;\n            }\n        }\n    }\n    _fixup_values(cls, data, attrs) {\n        for (const name in attrs) {\n            const value = attrs[name];\n            const prop = cls.prototype.props[name];\n            if (prop != null) {\n                if (prop.type.prototype instanceof VectorSpec) {\n                    if (value != null) {\n                        if (isArray(value)) {\n                            let field;\n                            if (data[name] != null) {\n                                if (data[name] !== value) {\n                                    field = this._find_uniq_name(data, name);\n                                    data[field] = value;\n                                }\n                                else {\n                                    field = name;\n                                }\n                            }\n                            else {\n                                field = name;\n                                data[field] = value;\n                            }\n                            attrs[name] = { field };\n                        }\n                        else if (isNumber(value) || isString(value)) { // or Date?\n                            attrs[name] = { value };\n                        }\n                    }\n                }\n            }\n        }\n    }\n    _glyph(cls, params_string, args) {\n        const params = params_string.split(\",\");\n        let attrs;\n        if (args.length == 0) {\n            attrs = {};\n        }\n        else if (args.length == 1) {\n            attrs = clone(args[0]);\n        }\n        else {\n            attrs = clone(args[args.length - 1]);\n            for (let i = 0; i < params.length; i++) {\n                const param = params[i];\n                attrs[param] = args[i];\n            }\n        }\n        const source = attrs.source != null ? attrs.source : new models.ColumnDataSource();\n        const data = clone(source.data);\n        delete attrs.source;\n        const legend = this._process_legend(attrs.legend, source);\n        delete attrs.legend;\n        const has_sglyph = some(Object.keys(attrs), key => startsWith(key, \"selection_\"));\n        const has_hglyph = some(Object.keys(attrs), key => startsWith(key, \"hover_\"));\n        const glyph_ca = this._pop_visuals(cls, attrs);\n        const nsglyph_ca = this._pop_visuals(cls, attrs, \"nonselection_\", glyph_ca, { alpha: 0.1 });\n        const sglyph_ca = has_sglyph ? this._pop_visuals(cls, attrs, \"selection_\", glyph_ca) : {};\n        const hglyph_ca = has_hglyph ? this._pop_visuals(cls, attrs, \"hover_\", glyph_ca) : {};\n        this._fixup_values(cls, data, glyph_ca);\n        this._fixup_values(cls, data, nsglyph_ca);\n        this._fixup_values(cls, data, sglyph_ca);\n        this._fixup_values(cls, data, hglyph_ca);\n        this._fixup_values(cls, data, attrs);\n        source.data = data;\n        const _make_glyph = (cls, attrs, extra_attrs) => {\n            return new cls(Object.assign(Object.assign({}, attrs), extra_attrs));\n        };\n        const glyph = _make_glyph(cls, attrs, glyph_ca);\n        const nsglyph = _make_glyph(cls, attrs, nsglyph_ca);\n        const sglyph = has_sglyph ? _make_glyph(cls, attrs, sglyph_ca) : undefined;\n        const hglyph = has_hglyph ? _make_glyph(cls, attrs, hglyph_ca) : undefined;\n        const glyph_renderer = new GlyphRenderer({\n            data_source: source,\n            glyph,\n            nonselection_glyph: nsglyph,\n            selection_glyph: sglyph,\n            hover_glyph: hglyph,\n        });\n        if (legend != null) {\n            this._update_legend(legend, glyph_renderer);\n        }\n        this.add_renderers(glyph_renderer);\n        return glyph_renderer;\n    }\n    _marker(cls, args) {\n        return this._glyph(cls, \"x,y\", args);\n    }\n    static _get_range(range) {\n        if (range == null) {\n            return new models.DataRange1d();\n        }\n        if (range instanceof models.Range) {\n            return range;\n        }\n        if (isArray(range)) {\n            if (every(range, isString)) {\n                const factors = range;\n                return new models.FactorRange({ factors });\n            }\n            if (range.length == 2) {\n                const [start, end] = range;\n                return new models.Range1d({ start, end });\n            }\n        }\n        throw new Error(`unable to determine proper range for: '${range}'`);\n    }\n    static _get_scale(range_input, axis_type) {\n        if (range_input instanceof models.DataRange1d ||\n            range_input instanceof models.Range1d) {\n            switch (axis_type) {\n                case null:\n                case \"auto\":\n                case \"linear\":\n                case \"datetime\":\n                    return new models.LinearScale();\n                case \"log\":\n                    return new models.LogScale();\n            }\n        }\n        if (range_input instanceof models.FactorRange) {\n            return new models.CategoricalScale();\n        }\n        throw new Error(`unable to determine proper scale for: '${range_input}'`);\n    }\n    _process_axis_and_grid(axis_type, axis_location, minor_ticks, axis_label, rng, dim) {\n        const axiscls = this._get_axis_class(axis_type, rng);\n        if (axiscls != null) {\n            if (axiscls === models.LogAxis) {\n                if (dim === 0) {\n                    this.x_scale = new models.LogScale();\n                }\n                else {\n                    this.y_scale = new models.LogScale();\n                }\n            }\n            const axis = new axiscls();\n            if (axis.ticker instanceof models.ContinuousTicker) {\n                axis.ticker.num_minor_ticks = this._get_num_minor_ticks(axiscls, minor_ticks);\n            }\n            if (axis_label.length !== 0) {\n                axis.axis_label = axis_label;\n            }\n            const grid = new models.Grid({ dimension: dim, ticker: axis.ticker });\n            if (axis_location !== null) {\n                this.add_layout(axis, axis_location);\n            }\n            this.add_layout(grid);\n        }\n    }\n    _get_axis_class(axis_type, range) {\n        switch (axis_type) {\n            case null:\n                return null;\n            case \"linear\":\n                return models.LinearAxis;\n            case \"log\":\n                return models.LogAxis;\n            case \"datetime\":\n                return models.DatetimeAxis;\n            case \"auto\":\n                if (range instanceof models.FactorRange)\n                    return models.CategoricalAxis;\n                else\n                    return models.LinearAxis; // TODO: return models.DatetimeAxis (Date type)\n            default:\n                throw new Error(\"shouldn't have happened\");\n        }\n    }\n    _get_num_minor_ticks(axis_class, num_minor_ticks) {\n        if (isNumber(num_minor_ticks)) {\n            if (num_minor_ticks <= 1) {\n                throw new Error(\"num_minor_ticks must be > 1\");\n            }\n            return num_minor_ticks;\n        }\n        if (num_minor_ticks == null) {\n            return 0;\n        }\n        if (num_minor_ticks === 'auto') {\n            if (axis_class === models.LogAxis) {\n                return 10;\n            }\n            return 5;\n        }\n        throw new Error(\"shouldn't have happened\");\n    }\n    _process_tools(tools) {\n        if (isString(tools))\n            tools = tools.split(/\\s*,\\s*/).filter((tool) => tool.length > 0);\n        return tools.map((tool) => isString(tool) ? Tool.from_string(tool) : tool);\n    }\n    _process_legend(legend, source) {\n        let legend_item_label = null;\n        if (legend != null) {\n            if (isString(legend)) {\n                legend_item_label = { value: legend };\n                if (source.columns() != null) {\n                    if (includes(source.columns(), legend)) {\n                        legend_item_label = { field: legend };\n                    }\n                }\n            }\n            else {\n                legend_item_label = legend;\n            }\n        }\n        return legend_item_label;\n    }\n    _update_legend(legend_item_label, glyph_renderer) {\n        const { legend } = this;\n        let added = false;\n        for (const item of legend.items) {\n            if (item.label != null && isEqual(item.label, legend_item_label)) {\n                // XXX: remove this when vectorable properties are refined\n                const label = item.label;\n                if (\"value\" in label) {\n                    item.renderers.push(glyph_renderer);\n                    added = true;\n                    break;\n                }\n                if (\"field\" in label && glyph_renderer.data_source == item.renderers[0].data_source) {\n                    item.renderers.push(glyph_renderer);\n                    added = true;\n                    break;\n                }\n            }\n        }\n        if (!added) {\n            const new_item = new models.LegendItem({ label: legend_item_label, renderers: [glyph_renderer] });\n            legend.items.push(new_item);\n        }\n    }\n}\nFigure.__name__ = \"Plot\";\nexport function figure(attributes) {\n    return new Figure(attributes);\n}\nexport async function show(obj, target) {\n    const doc = new Document();\n    for (const item of isArray(obj) ? obj : [obj])\n        doc.add_root(item);\n    let element;\n    if (target == null) {\n        element = document.body;\n    }\n    else if (isString(target)) {\n        const found = document.querySelector(target);\n        if (found != null && found instanceof HTMLElement)\n            element = found;\n        else\n            throw new Error(`'${target}' selector didn't match any elements`);\n    }\n    else if (target instanceof HTMLElement) {\n        element = target;\n    }\n    else if (typeof $ !== 'undefined' && target instanceof $) {\n        element = target[0];\n    }\n    else {\n        throw new Error(\"target should be HTMLElement, string selector, $ or null\");\n    }\n    const views = await embed.add_document_standalone(doc, element);\n    return new Promise((resolve, _reject) => {\n        const result = isArray(obj) ? views : views[0];\n        if (doc.is_idle)\n            resolve(result);\n        else\n            doc.idle.connect(() => resolve(result));\n    });\n}\n//# sourceMappingURL=plotting.js.map"]},"metadata":{},"sourceType":"module"}