{"ast":null,"code":"import { index_of, find_index } from \"../../core/util/arrayable\";\nimport { isString } from \"../../core/util/types\";\nexport function _cat_equals(a, b) {\n  if (a.length != b.length) return false;\n\n  for (let i = 0, end = a.length; i < end; i++) {\n    if (a[i] !== b[i]) return false;\n  }\n\n  return true;\n}\nexport function cat_v_compute(data, factors, targets, values, start, end, extra_value) {\n  for (let i = 0, N = data.length; i < N; i++) {\n    let d = data[i];\n    let key;\n    if (isString(d)) key = index_of(factors, d);else {\n      if (start != null) {\n        if (end != null) d = d.slice(start, end);else d = d.slice(start);\n      } else if (end != null) d = d.slice(0, end);\n\n      if (d.length == 1) key = index_of(factors, d[0]);else key = find_index(factors, x => _cat_equals(x, d));\n    }\n    let value;\n    if (key < 0 || key >= targets.length) value = extra_value;else value = targets[key];\n    values[i] = value;\n  }\n}","map":{"version":3,"sources":["/Users/gen/Desktop/defund_to_refund/node_modules/@bokeh/bokehjs/build/js/lib/models/mappers/categorical_mapper.js"],"names":["index_of","find_index","isString","_cat_equals","a","b","length","i","end","cat_v_compute","data","factors","targets","values","start","extra_value","N","d","key","slice","x","value"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,UAAnB,QAAqC,2BAArC;AACA,SAASC,QAAT,QAAyB,uBAAzB;AACA,OAAO,SAASC,WAAT,CAAqBC,CAArB,EAAwBC,CAAxB,EAA2B;AAC9B,MAAID,CAAC,CAACE,MAAF,IAAYD,CAAC,CAACC,MAAlB,EACI,OAAO,KAAP;;AACJ,OAAK,IAAIC,CAAC,GAAG,CAAR,EAAWC,GAAG,GAAGJ,CAAC,CAACE,MAAxB,EAAgCC,CAAC,GAAGC,GAApC,EAAyCD,CAAC,EAA1C,EAA8C;AAC1C,QAAIH,CAAC,CAACG,CAAD,CAAD,KAASF,CAAC,CAACE,CAAD,CAAd,EACI,OAAO,KAAP;AACP;;AACD,SAAO,IAAP;AACH;AACD,OAAO,SAASE,aAAT,CAAuBC,IAAvB,EAA6BC,OAA7B,EAAsCC,OAAtC,EAA+CC,MAA/C,EAAuDC,KAAvD,EAA8DN,GAA9D,EAAmEO,WAAnE,EAAgF;AACnF,OAAK,IAAIR,CAAC,GAAG,CAAR,EAAWS,CAAC,GAAGN,IAAI,CAACJ,MAAzB,EAAiCC,CAAC,GAAGS,CAArC,EAAwCT,CAAC,EAAzC,EAA6C;AACzC,QAAIU,CAAC,GAAGP,IAAI,CAACH,CAAD,CAAZ;AACA,QAAIW,GAAJ;AACA,QAAIhB,QAAQ,CAACe,CAAD,CAAZ,EACIC,GAAG,GAAGlB,QAAQ,CAACW,OAAD,EAAUM,CAAV,CAAd,CADJ,KAEK;AACD,UAAIH,KAAK,IAAI,IAAb,EAAmB;AACf,YAAIN,GAAG,IAAI,IAAX,EACIS,CAAC,GAAGA,CAAC,CAACE,KAAF,CAAQL,KAAR,EAAeN,GAAf,CAAJ,CADJ,KAGIS,CAAC,GAAGA,CAAC,CAACE,KAAF,CAAQL,KAAR,CAAJ;AACP,OALD,MAMK,IAAIN,GAAG,IAAI,IAAX,EACDS,CAAC,GAAGA,CAAC,CAACE,KAAF,CAAQ,CAAR,EAAWX,GAAX,CAAJ;;AACJ,UAAIS,CAAC,CAACX,MAAF,IAAY,CAAhB,EACIY,GAAG,GAAGlB,QAAQ,CAACW,OAAD,EAAUM,CAAC,CAAC,CAAD,CAAX,CAAd,CADJ,KAGIC,GAAG,GAAGjB,UAAU,CAACU,OAAD,EAAWS,CAAD,IAAOjB,WAAW,CAACiB,CAAD,EAAIH,CAAJ,CAA5B,CAAhB;AACP;AACD,QAAII,KAAJ;AACA,QAAIH,GAAG,GAAG,CAAN,IAAWA,GAAG,IAAIN,OAAO,CAACN,MAA9B,EACIe,KAAK,GAAGN,WAAR,CADJ,KAGIM,KAAK,GAAGT,OAAO,CAACM,GAAD,CAAf;AACJL,IAAAA,MAAM,CAACN,CAAD,CAAN,GAAYc,KAAZ;AACH;AACJ","sourcesContent":["import { index_of, find_index } from \"../../core/util/arrayable\";\nimport { isString } from \"../../core/util/types\";\nexport function _cat_equals(a, b) {\n    if (a.length != b.length)\n        return false;\n    for (let i = 0, end = a.length; i < end; i++) {\n        if (a[i] !== b[i])\n            return false;\n    }\n    return true;\n}\nexport function cat_v_compute(data, factors, targets, values, start, end, extra_value) {\n    for (let i = 0, N = data.length; i < N; i++) {\n        let d = data[i];\n        let key;\n        if (isString(d))\n            key = index_of(factors, d);\n        else {\n            if (start != null) {\n                if (end != null)\n                    d = d.slice(start, end);\n                else\n                    d = d.slice(start);\n            }\n            else if (end != null)\n                d = d.slice(0, end);\n            if (d.length == 1)\n                key = index_of(factors, d[0]);\n            else\n                key = find_index(factors, (x) => _cat_equals(x, d));\n        }\n        let value;\n        if (key < 0 || key >= targets.length)\n            value = extra_value;\n        else\n            value = targets[key];\n        values[i] = value;\n    }\n}\n//# sourceMappingURL=categorical_mapper.js.map"]},"metadata":{},"sourceType":"module"}