{"ast":null,"code":"import { Document } from \"../document\";\nimport { logger } from \"../core/logging\";\nimport { unescape, uuid4 } from \"../core/util/string\";\nimport { isString } from \"../core/util/types\";\nimport { defer } from \"../core/util/callback\";\nimport { add_document_standalone } from \"./standalone\";\nimport { add_document_from_session, _get_ws_url } from \"./server\";\nimport { BOKEH_ROOT, _resolve_element, _resolve_root_elements } from \"./dom\";\nexport { add_document_standalone, index } from \"./standalone\";\nexport { add_document_from_session } from \"./server\";\nexport { embed_items_notebook, kernels } from \"./notebook\";\nexport { BOKEH_ROOT } from \"./dom\";\nexport async function embed_item(item, target_id) {\n  const docs_json = {};\n  const doc_id = uuid4();\n  docs_json[doc_id] = item.doc;\n  if (target_id == null) target_id = item.target_id;\n  const element = document.getElementById(target_id);\n  if (element != null) element.classList.add(BOKEH_ROOT);\n  const roots = {\n    [item.root_id]: target_id\n  };\n  const render_item = {\n    roots,\n    root_ids: [item.root_id],\n    docid: doc_id\n  };\n  const [views] = await defer(() => _embed_items(docs_json, [render_item]));\n  return views;\n} // TODO (bev) this is currently clunky. Standalone embeds only provide\n// the first two args, whereas server provide the app_app, and *may* prove and\n// absolute_url as well if non-relative links are needed for resources. This function\n// should probably be split in to two pieces to reflect the different usage patterns\n\nexport async function embed_items(docs_json, render_items, app_path, absolute_url) {\n  return await defer(() => _embed_items(docs_json, render_items, app_path, absolute_url));\n}\n\nasync function _embed_items(docs_json, render_items, app_path, absolute_url) {\n  if (isString(docs_json)) docs_json = JSON.parse(unescape(docs_json));\n  const docs = {};\n\n  for (const docid in docs_json) {\n    const doc_json = docs_json[docid];\n    docs[docid] = Document.from_json(doc_json);\n  }\n\n  const views = [];\n\n  for (const item of render_items) {\n    const element = _resolve_element(item);\n\n    const roots = _resolve_root_elements(item);\n\n    if (item.docid != null) {\n      views.push(await add_document_standalone(docs[item.docid], element, roots, item.use_for_title));\n    } else if (item.token != null) {\n      const websocket_url = _get_ws_url(app_path, absolute_url);\n\n      logger.debug(`embed: computed ws url: ${websocket_url}`);\n\n      try {\n        views.push(await add_document_from_session(websocket_url, item.token, element, roots, item.use_for_title));\n        console.log(\"Bokeh items were rendered successfully\");\n      } catch (error) {\n        console.log(\"Error rendering Bokeh items:\", error);\n      }\n    } else throw new Error(`Error rendering Bokeh items: either 'docid' or 'token' was expected.`);\n  }\n\n  return views;\n}","map":{"version":3,"sources":["/Users/gen/Desktop/defund_to_refund/node_modules/@bokeh/bokehjs/build/js/lib/embed/index.js"],"names":["Document","logger","unescape","uuid4","isString","defer","add_document_standalone","add_document_from_session","_get_ws_url","BOKEH_ROOT","_resolve_element","_resolve_root_elements","index","embed_items_notebook","kernels","embed_item","item","target_id","docs_json","doc_id","doc","element","document","getElementById","classList","add","roots","root_id","render_item","root_ids","docid","views","_embed_items","embed_items","render_items","app_path","absolute_url","JSON","parse","docs","doc_json","from_json","push","use_for_title","token","websocket_url","debug","console","log","error","Error"],"mappings":"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","sourcesContent":["import { Document } from \"../document\";\nimport { logger } from \"../core/logging\";\nimport { unescape, uuid4 } from \"../core/util/string\";\nimport { isString } from \"../core/util/types\";\nimport { defer } from \"../core/util/callback\";\nimport { add_document_standalone } from \"./standalone\";\nimport { add_document_from_session, _get_ws_url } from \"./server\";\nimport { BOKEH_ROOT, _resolve_element, _resolve_root_elements } from \"./dom\";\nexport { add_document_standalone, index } from \"./standalone\";\nexport { add_document_from_session } from \"./server\";\nexport { embed_items_notebook, kernels } from \"./notebook\";\nexport { BOKEH_ROOT } from \"./dom\";\nexport async function embed_item(item, target_id) {\n    const docs_json = {};\n    const doc_id = uuid4();\n    docs_json[doc_id] = item.doc;\n    if (target_id == null)\n        target_id = item.target_id;\n    const element = document.getElementById(target_id);\n    if (element != null)\n        element.classList.add(BOKEH_ROOT);\n    const roots = { [item.root_id]: target_id };\n    const render_item = { roots, root_ids: [item.root_id], docid: doc_id };\n    const [views] = await defer(() => _embed_items(docs_json, [render_item]));\n    return views;\n}\n// TODO (bev) this is currently clunky. Standalone embeds only provide\n// the first two args, whereas server provide the app_app, and *may* prove and\n// absolute_url as well if non-relative links are needed for resources. This function\n// should probably be split in to two pieces to reflect the different usage patterns\nexport async function embed_items(docs_json, render_items, app_path, absolute_url) {\n    return await defer(() => _embed_items(docs_json, render_items, app_path, absolute_url));\n}\nasync function _embed_items(docs_json, render_items, app_path, absolute_url) {\n    if (isString(docs_json))\n        docs_json = JSON.parse(unescape(docs_json));\n    const docs = {};\n    for (const docid in docs_json) {\n        const doc_json = docs_json[docid];\n        docs[docid] = Document.from_json(doc_json);\n    }\n    const views = [];\n    for (const item of render_items) {\n        const element = _resolve_element(item);\n        const roots = _resolve_root_elements(item);\n        if (item.docid != null) {\n            views.push(await add_document_standalone(docs[item.docid], element, roots, item.use_for_title));\n        }\n        else if (item.token != null) {\n            const websocket_url = _get_ws_url(app_path, absolute_url);\n            logger.debug(`embed: computed ws url: ${websocket_url}`);\n            try {\n                views.push(await add_document_from_session(websocket_url, item.token, element, roots, item.use_for_title));\n                console.log(\"Bokeh items were rendered successfully\");\n            }\n            catch (error) {\n                console.log(\"Error rendering Bokeh items:\", error);\n            }\n        }\n        else\n            throw new Error(`Error rendering Bokeh items: either 'docid' or 'token' was expected.`);\n    }\n    return views;\n}\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}