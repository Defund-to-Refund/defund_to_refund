{"ast":null,"code":"export function splice(array, start, k, ...items) {\n  const len = array.length;\n  if (start < 0) start += len;\n  if (start < 0) start = 0;else if (start > len) start = len;\n  if (k == null || k > len - start) k = len - start;else if (k < 0) k = 0;\n  const n = len - k + items.length;\n  const result = new array.constructor(n);\n  let i = 0;\n\n  for (; i < start; i++) {\n    result[i] = array[i];\n  }\n\n  for (const item of items) {\n    result[i++] = item;\n  }\n\n  for (let j = start + k; j < len; j++) {\n    result[i++] = array[j];\n  }\n\n  return result;\n}\nexport function head(array, n) {\n  return splice(array, n, array.length - n);\n}\nexport function insert(array, item, i) {\n  return splice(array, i, 0, item);\n}\nexport function append(array, item) {\n  return splice(array, array.length, 0, item);\n}\nexport function prepend(array, item) {\n  return splice(array, 0, 0, item);\n}\nexport function indexOf(array, item) {\n  for (let i = 0, n = array.length; i < n; i++) {\n    if (array[i] === item) return i;\n  }\n\n  return -1;\n}\nexport function map(array, fn) {\n  const n = array.length;\n  const result = new array.constructor(n);\n\n  for (let i = 0; i < n; i++) {\n    result[i] = fn(array[i], i, array);\n  }\n\n  return result;\n}\nexport function filter(array, pred) {\n  const n = array.length;\n  const result = new array.constructor(n);\n  let k = 0;\n\n  for (let i = 0; i < n; i++) {\n    const value = array[i];\n    if (pred(value, i, array)) result[k++] = value;\n  }\n\n  return head(result, k);\n}\nexport function reduce(array, fn, initial) {\n  const n = array.length;\n  if (initial === undefined && n == 0) throw new Error(\"can't reduce an empty array without an initial value\");\n  let value;\n  let i;\n\n  if (initial === undefined) {\n    value = array[0];\n    i = 1;\n  } else {\n    value = initial;\n    i = 0;\n  }\n\n  for (; i < n; i++) {\n    value = fn(value, array[i], i, array);\n  }\n\n  return value;\n}\nexport function min(array) {\n  let value;\n  let result = Infinity;\n\n  for (let i = 0, length = array.length; i < length; i++) {\n    value = array[i];\n\n    if (value < result) {\n      result = value;\n    }\n  }\n\n  return result;\n}\nexport function min_by(array, key) {\n  if (array.length == 0) throw new Error(\"min_by() called with an empty array\");\n  let result = array[0];\n  let resultComputed = key(result);\n\n  for (let i = 1, length = array.length; i < length; i++) {\n    const value = array[i];\n    const computed = key(value);\n\n    if (computed < resultComputed) {\n      result = value;\n      resultComputed = computed;\n    }\n  }\n\n  return result;\n}\nexport function max(array) {\n  let value;\n  let result = -Infinity;\n\n  for (let i = 0, length = array.length; i < length; i++) {\n    value = array[i];\n\n    if (value > result) {\n      result = value;\n    }\n  }\n\n  return result;\n}\nexport function max_by(array, key) {\n  if (array.length == 0) throw new Error(\"max_by() called with an empty array\");\n  let result = array[0];\n  let resultComputed = key(result);\n\n  for (let i = 1, length = array.length; i < length; i++) {\n    const value = array[i];\n    const computed = key(value);\n\n    if (computed > resultComputed) {\n      result = value;\n      resultComputed = computed;\n    }\n  }\n\n  return result;\n}\nexport function sum(array) {\n  let result = 0;\n\n  for (let i = 0, n = array.length; i < n; i++) {\n    result += array[i];\n  }\n\n  return result;\n}\nexport function cumsum(array) {\n  const result = new array.constructor(array.length);\n  reduce(array, (a, b, i) => result[i] = a + b, 0);\n  return result;\n}\nexport function every(array, predicate) {\n  for (let i = 0, length = array.length; i < length; i++) {\n    if (!predicate(array[i])) return false;\n  }\n\n  return true;\n}\nexport function some(array, predicate) {\n  for (let i = 0, length = array.length; i < length; i++) {\n    if (predicate(array[i])) return true;\n  }\n\n  return false;\n}\nexport function index_of(array, value) {\n  for (let i = 0, length = array.length; i < length; i++) {\n    if (array[i] === value) return i;\n  }\n\n  return -1;\n}\n\nfunction _find_index(dir) {\n  return function (array, predicate) {\n    const length = array.length;\n    let index = dir > 0 ? 0 : length - 1;\n\n    for (; index >= 0 && index < length; index += dir) {\n      if (predicate(array[index])) return index;\n    }\n\n    return -1;\n  };\n}\n\nexport const find_index = _find_index(1);\nexport const find_last_index = _find_index(-1);\nexport function find(array, predicate) {\n  const index = find_index(array, predicate);\n  return index == -1 ? undefined : array[index];\n}\nexport function find_last(array, predicate) {\n  const index = find_last_index(array, predicate);\n  return index == -1 ? undefined : array[index];\n}\nexport function sorted_index(array, value) {\n  let low = 0;\n  let high = array.length;\n\n  while (low < high) {\n    const mid = Math.floor((low + high) / 2);\n    if (array[mid] < value) low = mid + 1;else high = mid;\n  }\n\n  return low;\n}","map":{"version":3,"sources":["/Users/gen/Desktop/defund_to_refund/node_modules/@bokeh/bokehjs/build/js/lib/core/util/arrayable.js"],"names":["splice","array","start","k","items","len","length","n","result","constructor","i","item","j","head","insert","append","prepend","indexOf","map","fn","filter","pred","value","reduce","initial","undefined","Error","min","Infinity","min_by","key","resultComputed","computed","max","max_by","sum","cumsum","a","b","every","predicate","some","index_of","_find_index","dir","index","find_index","find_last_index","find","find_last","sorted_index","low","high","mid","Math","floor"],"mappings":"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","sourcesContent":["export function splice(array, start, k, ...items) {\n    const len = array.length;\n    if (start < 0)\n        start += len;\n    if (start < 0)\n        start = 0;\n    else if (start > len)\n        start = len;\n    if (k == null || k > len - start)\n        k = len - start;\n    else if (k < 0)\n        k = 0;\n    const n = len - k + items.length;\n    const result = new array.constructor(n);\n    let i = 0;\n    for (; i < start; i++) {\n        result[i] = array[i];\n    }\n    for (const item of items) {\n        result[i++] = item;\n    }\n    for (let j = start + k; j < len; j++) {\n        result[i++] = array[j];\n    }\n    return result;\n}\nexport function head(array, n) {\n    return splice(array, n, array.length - n);\n}\nexport function insert(array, item, i) {\n    return splice(array, i, 0, item);\n}\nexport function append(array, item) {\n    return splice(array, array.length, 0, item);\n}\nexport function prepend(array, item) {\n    return splice(array, 0, 0, item);\n}\nexport function indexOf(array, item) {\n    for (let i = 0, n = array.length; i < n; i++) {\n        if (array[i] === item)\n            return i;\n    }\n    return -1;\n}\nexport function map(array, fn) {\n    const n = array.length;\n    const result = new array.constructor(n);\n    for (let i = 0; i < n; i++) {\n        result[i] = fn(array[i], i, array);\n    }\n    return result;\n}\nexport function filter(array, pred) {\n    const n = array.length;\n    const result = new array.constructor(n);\n    let k = 0;\n    for (let i = 0; i < n; i++) {\n        const value = array[i];\n        if (pred(value, i, array))\n            result[k++] = value;\n    }\n    return head(result, k);\n}\nexport function reduce(array, fn, initial) {\n    const n = array.length;\n    if (initial === undefined && n == 0)\n        throw new Error(\"can't reduce an empty array without an initial value\");\n    let value;\n    let i;\n    if (initial === undefined) {\n        value = array[0];\n        i = 1;\n    }\n    else {\n        value = initial;\n        i = 0;\n    }\n    for (; i < n; i++) {\n        value = fn(value, array[i], i, array);\n    }\n    return value;\n}\nexport function min(array) {\n    let value;\n    let result = Infinity;\n    for (let i = 0, length = array.length; i < length; i++) {\n        value = array[i];\n        if (value < result) {\n            result = value;\n        }\n    }\n    return result;\n}\nexport function min_by(array, key) {\n    if (array.length == 0)\n        throw new Error(\"min_by() called with an empty array\");\n    let result = array[0];\n    let resultComputed = key(result);\n    for (let i = 1, length = array.length; i < length; i++) {\n        const value = array[i];\n        const computed = key(value);\n        if (computed < resultComputed) {\n            result = value;\n            resultComputed = computed;\n        }\n    }\n    return result;\n}\nexport function max(array) {\n    let value;\n    let result = -Infinity;\n    for (let i = 0, length = array.length; i < length; i++) {\n        value = array[i];\n        if (value > result) {\n            result = value;\n        }\n    }\n    return result;\n}\nexport function max_by(array, key) {\n    if (array.length == 0)\n        throw new Error(\"max_by() called with an empty array\");\n    let result = array[0];\n    let resultComputed = key(result);\n    for (let i = 1, length = array.length; i < length; i++) {\n        const value = array[i];\n        const computed = key(value);\n        if (computed > resultComputed) {\n            result = value;\n            resultComputed = computed;\n        }\n    }\n    return result;\n}\nexport function sum(array) {\n    let result = 0;\n    for (let i = 0, n = array.length; i < n; i++) {\n        result += array[i];\n    }\n    return result;\n}\nexport function cumsum(array) {\n    const result = new array.constructor(array.length);\n    reduce(array, (a, b, i) => result[i] = a + b, 0);\n    return result;\n}\nexport function every(array, predicate) {\n    for (let i = 0, length = array.length; i < length; i++) {\n        if (!predicate(array[i]))\n            return false;\n    }\n    return true;\n}\nexport function some(array, predicate) {\n    for (let i = 0, length = array.length; i < length; i++) {\n        if (predicate(array[i]))\n            return true;\n    }\n    return false;\n}\nexport function index_of(array, value) {\n    for (let i = 0, length = array.length; i < length; i++) {\n        if (array[i] === value)\n            return i;\n    }\n    return -1;\n}\nfunction _find_index(dir) {\n    return function (array, predicate) {\n        const length = array.length;\n        let index = dir > 0 ? 0 : length - 1;\n        for (; index >= 0 && index < length; index += dir) {\n            if (predicate(array[index]))\n                return index;\n        }\n        return -1;\n    };\n}\nexport const find_index = _find_index(1);\nexport const find_last_index = _find_index(-1);\nexport function find(array, predicate) {\n    const index = find_index(array, predicate);\n    return index == -1 ? undefined : array[index];\n}\nexport function find_last(array, predicate) {\n    const index = find_last_index(array, predicate);\n    return index == -1 ? undefined : array[index];\n}\nexport function sorted_index(array, value) {\n    let low = 0;\n    let high = array.length;\n    while (low < high) {\n        const mid = Math.floor((low + high) / 2);\n        if (array[mid] < value)\n            low = mid + 1;\n        else\n            high = mid;\n    }\n    return low;\n}\n//# sourceMappingURL=arrayable.js.map"]},"metadata":{},"sourceType":"module"}