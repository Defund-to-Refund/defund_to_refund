{"ast":null,"code":"import { Annotation, AnnotationView } from \"./annotation\";\nimport { div, display, undisplay, empty } from \"../../core/dom\";\nimport * as p from \"../../core/properties\";\nimport { bk_tooltip, bk_tooltip_custom, bk_tooltip_arrow } from \"../../styles/tooltips\";\nimport { bk_left, bk_right, bk_above, bk_below } from \"../../styles/mixins\";\nexport function compute_side(attachment, sx, sy, hcenter, vcenter) {\n  switch (attachment) {\n    case \"horizontal\":\n      return sx < hcenter ? \"right\" : \"left\";\n\n    case \"vertical\":\n      return sy < vcenter ? \"below\" : \"above\";\n\n    default:\n      return attachment;\n  }\n}\nexport class TooltipView extends AnnotationView {\n  initialize() {\n    super.initialize(); // TODO (bev) really probably need multiple divs\n\n    this.plot_view.canvas_view.add_overlay(this.el);\n    undisplay(this.el);\n  }\n\n  connect_signals() {\n    super.connect_signals();\n    this.connect(this.model.properties.data.change, () => this._draw_tips());\n  }\n\n  css_classes() {\n    return super.css_classes().concat(bk_tooltip);\n  }\n\n  render() {\n    if (!this.model.visible) return;\n\n    this._draw_tips();\n  }\n\n  _draw_tips() {\n    const {\n      data\n    } = this.model;\n    empty(this.el);\n    undisplay(this.el);\n    if (this.model.custom) this.el.classList.add(bk_tooltip_custom);else this.el.classList.remove(bk_tooltip_custom);\n    if (data.length == 0) return;\n    const {\n      frame\n    } = this.plot_view;\n\n    for (const [sx, sy, content] of data) {\n      if (this.model.inner_only && !frame.bbox.contains(sx, sy)) continue;\n      const tip = div({}, content);\n      this.el.appendChild(tip);\n    }\n\n    const [sx, sy] = data[data.length - 1]; // XXX: this previously depended on {sx, sy} leaking from the for-loop\n\n    const side = compute_side(this.model.attachment, sx, sy, frame._hcenter.value, frame._vcenter.value);\n    this.el.classList.remove(bk_right);\n    this.el.classList.remove(bk_left);\n    this.el.classList.remove(bk_above);\n    this.el.classList.remove(bk_below);\n    const arrow_size = 10; // XXX: keep in sync with less\n\n    display(this.el); // XXX: {offset,client}Width() gives 0 when display=\"none\"\n    // slightly confusing: side \"left\" (for example) is relative to point that\n    // is being annotated but CS class \".bk-left\" is relative to the tooltip itself\n\n    let top;\n    let left = 0;\n    let right = 0;\n\n    switch (side) {\n      case \"right\":\n        this.el.classList.add(bk_left);\n        left = sx + (this.el.offsetWidth - this.el.clientWidth) + arrow_size;\n        top = sy - this.el.offsetHeight / 2;\n        break;\n\n      case \"left\":\n        this.el.classList.add(bk_right);\n        right = this.plot_view.layout.bbox.width - sx + arrow_size;\n        top = sy - this.el.offsetHeight / 2;\n        break;\n\n      case \"below\":\n        this.el.classList.add(bk_above);\n        top = sy + (this.el.offsetHeight - this.el.clientHeight) + arrow_size;\n        left = Math.round(sx - this.el.offsetWidth / 2);\n        break;\n\n      case \"above\":\n        this.el.classList.add(bk_below);\n        top = sy - this.el.offsetHeight - arrow_size;\n        left = Math.round(sx - this.el.offsetWidth / 2);\n        break;\n    }\n\n    if (this.model.show_arrow) this.el.classList.add(bk_tooltip_arrow); // TODO (bev) this is not currently bulletproof. If there are\n    // two hits, not colocated and one is off the screen, that can\n    // be problematic\n\n    if (this.el.childNodes.length > 0) {\n      this.el.style.top = `${top}px`;\n      this.el.style.left = left ? `${left}px` : 'auto';\n      this.el.style.right = right ? `${right}px` : 'auto';\n    } else undisplay(this.el);\n  }\n\n}\nTooltipView.__name__ = \"TooltipView\";\nexport class Tooltip extends Annotation {\n  constructor(attrs) {\n    super(attrs);\n  }\n\n  static init_Tooltip() {\n    this.prototype.default_view = TooltipView;\n    this.define({\n      attachment: [p.TooltipAttachment, 'horizontal'],\n      inner_only: [p.Boolean, true],\n      show_arrow: [p.Boolean, true]\n    });\n    this.override({\n      level: 'overlay'\n    });\n    this.internal({\n      data: [p.Any, []],\n      custom: [p.Any]\n    });\n  }\n\n  clear() {\n    this.data = [];\n  }\n\n  add(sx, sy, content) {\n    this.data = this.data.concat([[sx, sy, content]]);\n  }\n\n}\nTooltip.__name__ = \"Tooltip\";\nTooltip.init_Tooltip();","map":{"version":3,"sources":["/Users/gen/Desktop/defund_to_refund/node_modules/@bokeh/bokehjs/build/js/lib/models/annotations/tooltip.js"],"names":["Annotation","AnnotationView","div","display","undisplay","empty","p","bk_tooltip","bk_tooltip_custom","bk_tooltip_arrow","bk_left","bk_right","bk_above","bk_below","compute_side","attachment","sx","sy","hcenter","vcenter","TooltipView","initialize","plot_view","canvas_view","add_overlay","el","connect_signals","connect","model","properties","data","change","_draw_tips","css_classes","concat","render","visible","custom","classList","add","remove","length","frame","content","inner_only","bbox","contains","tip","appendChild","side","_hcenter","value","_vcenter","arrow_size","top","left","right","offsetWidth","clientWidth","offsetHeight","layout","width","clientHeight","Math","round","show_arrow","childNodes","style","__name__","Tooltip","constructor","attrs","init_Tooltip","prototype","default_view","define","TooltipAttachment","Boolean","override","level","internal","Any","clear"],"mappings":"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","sourcesContent":["import { Annotation, AnnotationView } from \"./annotation\";\nimport { div, display, undisplay, empty } from \"../../core/dom\";\nimport * as p from \"../../core/properties\";\nimport { bk_tooltip, bk_tooltip_custom, bk_tooltip_arrow } from \"../../styles/tooltips\";\nimport { bk_left, bk_right, bk_above, bk_below } from \"../../styles/mixins\";\nexport function compute_side(attachment, sx, sy, hcenter, vcenter) {\n    switch (attachment) {\n        case \"horizontal\":\n            return sx < hcenter ? \"right\" : \"left\";\n        case \"vertical\":\n            return sy < vcenter ? \"below\" : \"above\";\n        default:\n            return attachment;\n    }\n}\nexport class TooltipView extends AnnotationView {\n    initialize() {\n        super.initialize();\n        // TODO (bev) really probably need multiple divs\n        this.plot_view.canvas_view.add_overlay(this.el);\n        undisplay(this.el);\n    }\n    connect_signals() {\n        super.connect_signals();\n        this.connect(this.model.properties.data.change, () => this._draw_tips());\n    }\n    css_classes() {\n        return super.css_classes().concat(bk_tooltip);\n    }\n    render() {\n        if (!this.model.visible)\n            return;\n        this._draw_tips();\n    }\n    _draw_tips() {\n        const { data } = this.model;\n        empty(this.el);\n        undisplay(this.el);\n        if (this.model.custom)\n            this.el.classList.add(bk_tooltip_custom);\n        else\n            this.el.classList.remove(bk_tooltip_custom);\n        if (data.length == 0)\n            return;\n        const { frame } = this.plot_view;\n        for (const [sx, sy, content] of data) {\n            if (this.model.inner_only && !frame.bbox.contains(sx, sy))\n                continue;\n            const tip = div({}, content);\n            this.el.appendChild(tip);\n        }\n        const [sx, sy] = data[data.length - 1]; // XXX: this previously depended on {sx, sy} leaking from the for-loop\n        const side = compute_side(this.model.attachment, sx, sy, frame._hcenter.value, frame._vcenter.value);\n        this.el.classList.remove(bk_right);\n        this.el.classList.remove(bk_left);\n        this.el.classList.remove(bk_above);\n        this.el.classList.remove(bk_below);\n        const arrow_size = 10; // XXX: keep in sync with less\n        display(this.el); // XXX: {offset,client}Width() gives 0 when display=\"none\"\n        // slightly confusing: side \"left\" (for example) is relative to point that\n        // is being annotated but CS class \".bk-left\" is relative to the tooltip itself\n        let top;\n        let left = 0;\n        let right = 0;\n        switch (side) {\n            case \"right\":\n                this.el.classList.add(bk_left);\n                left = sx + (this.el.offsetWidth - this.el.clientWidth) + arrow_size;\n                top = sy - this.el.offsetHeight / 2;\n                break;\n            case \"left\":\n                this.el.classList.add(bk_right);\n                right = (this.plot_view.layout.bbox.width - sx) + arrow_size;\n                top = sy - this.el.offsetHeight / 2;\n                break;\n            case \"below\":\n                this.el.classList.add(bk_above);\n                top = sy + (this.el.offsetHeight - this.el.clientHeight) + arrow_size;\n                left = Math.round(sx - this.el.offsetWidth / 2);\n                break;\n            case \"above\":\n                this.el.classList.add(bk_below);\n                top = sy - this.el.offsetHeight - arrow_size;\n                left = Math.round(sx - this.el.offsetWidth / 2);\n                break;\n        }\n        if (this.model.show_arrow)\n            this.el.classList.add(bk_tooltip_arrow);\n        // TODO (bev) this is not currently bulletproof. If there are\n        // two hits, not colocated and one is off the screen, that can\n        // be problematic\n        if (this.el.childNodes.length > 0) {\n            this.el.style.top = `${top}px`;\n            this.el.style.left = left ? `${left}px` : 'auto';\n            this.el.style.right = right ? `${right}px` : 'auto';\n        }\n        else\n            undisplay(this.el);\n    }\n}\nTooltipView.__name__ = \"TooltipView\";\nexport class Tooltip extends Annotation {\n    constructor(attrs) {\n        super(attrs);\n    }\n    static init_Tooltip() {\n        this.prototype.default_view = TooltipView;\n        this.define({\n            attachment: [p.TooltipAttachment, 'horizontal'],\n            inner_only: [p.Boolean, true],\n            show_arrow: [p.Boolean, true],\n        });\n        this.override({\n            level: 'overlay',\n        });\n        this.internal({\n            data: [p.Any, []],\n            custom: [p.Any],\n        });\n    }\n    clear() {\n        this.data = [];\n    }\n    add(sx, sy, content) {\n        this.data = this.data.concat([[sx, sy, content]]);\n    }\n}\nTooltip.__name__ = \"Tooltip\";\nTooltip.init_Tooltip();\n//# sourceMappingURL=tooltip.js.map"]},"metadata":{},"sourceType":"module"}