{"ast":null,"code":"import { MercatorTileSource } from './mercator_tile_source';\nimport * as p from \"../../core/properties\";\nexport class BBoxTileSource extends MercatorTileSource {\n  constructor(attrs) {\n    super(attrs);\n  }\n\n  static init_BBoxTileSource() {\n    this.define({\n      use_latlon: [p.Boolean, false]\n    });\n  }\n\n  get_image_url(x, y, z) {\n    const image_url = this.string_lookup_replace(this.url, this.extra_url_vars);\n    let xmax, xmin, ymax, ymin;\n    if (this.use_latlon) [xmin, ymin, xmax, ymax] = this.get_tile_geographic_bounds(x, y, z);else [xmin, ymin, xmax, ymax] = this.get_tile_meter_bounds(x, y, z);\n    return image_url.replace(\"{XMIN}\", xmin.toString()).replace(\"{YMIN}\", ymin.toString()).replace(\"{XMAX}\", xmax.toString()).replace(\"{YMAX}\", ymax.toString());\n  }\n\n}\nBBoxTileSource.__name__ = \"BBoxTileSource\";\nBBoxTileSource.init_BBoxTileSource();","map":{"version":3,"sources":["/Users/gen/Desktop/defund_to_refund/node_modules/@bokeh/bokehjs/build/js/lib/models/tiles/bbox_tile_source.js"],"names":["MercatorTileSource","p","BBoxTileSource","constructor","attrs","init_BBoxTileSource","define","use_latlon","Boolean","get_image_url","x","y","z","image_url","string_lookup_replace","url","extra_url_vars","xmax","xmin","ymax","ymin","get_tile_geographic_bounds","get_tile_meter_bounds","replace","toString","__name__"],"mappings":"AAAA,SAASA,kBAAT,QAAmC,wBAAnC;AACA,OAAO,KAAKC,CAAZ,MAAmB,uBAAnB;AACA,OAAO,MAAMC,cAAN,SAA6BF,kBAA7B,CAAgD;AACnDG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACH;;AACD,SAAOC,mBAAP,GAA6B;AACzB,SAAKC,MAAL,CAAY;AACRC,MAAAA,UAAU,EAAE,CAACN,CAAC,CAACO,OAAH,EAAY,KAAZ;AADJ,KAAZ;AAGH;;AACDC,EAAAA,aAAa,CAACC,CAAD,EAAIC,CAAJ,EAAOC,CAAP,EAAU;AACnB,UAAMC,SAAS,GAAG,KAAKC,qBAAL,CAA2B,KAAKC,GAAhC,EAAqC,KAAKC,cAA1C,CAAlB;AACA,QAAIC,IAAJ,EAAUC,IAAV,EAAgBC,IAAhB,EAAsBC,IAAtB;AACA,QAAI,KAAKb,UAAT,EACI,CAACW,IAAD,EAAOE,IAAP,EAAaH,IAAb,EAAmBE,IAAnB,IAA2B,KAAKE,0BAAL,CAAgCX,CAAhC,EAAmCC,CAAnC,EAAsCC,CAAtC,CAA3B,CADJ,KAGI,CAACM,IAAD,EAAOE,IAAP,EAAaH,IAAb,EAAmBE,IAAnB,IAA2B,KAAKG,qBAAL,CAA2BZ,CAA3B,EAA8BC,CAA9B,EAAiCC,CAAjC,CAA3B;AACJ,WAAOC,SAAS,CACXU,OADE,CACM,QADN,EACgBL,IAAI,CAACM,QAAL,EADhB,EAEFD,OAFE,CAEM,QAFN,EAEgBH,IAAI,CAACI,QAAL,EAFhB,EAGFD,OAHE,CAGM,QAHN,EAGgBN,IAAI,CAACO,QAAL,EAHhB,EAIFD,OAJE,CAIM,QAJN,EAIgBJ,IAAI,CAACK,QAAL,EAJhB,CAAP;AAKH;;AArBkD;AAuBvDtB,cAAc,CAACuB,QAAf,GAA0B,gBAA1B;AACAvB,cAAc,CAACG,mBAAf","sourcesContent":["import { MercatorTileSource } from './mercator_tile_source';\nimport * as p from \"../../core/properties\";\nexport class BBoxTileSource extends MercatorTileSource {\n    constructor(attrs) {\n        super(attrs);\n    }\n    static init_BBoxTileSource() {\n        this.define({\n            use_latlon: [p.Boolean, false],\n        });\n    }\n    get_image_url(x, y, z) {\n        const image_url = this.string_lookup_replace(this.url, this.extra_url_vars);\n        let xmax, xmin, ymax, ymin;\n        if (this.use_latlon)\n            [xmin, ymin, xmax, ymax] = this.get_tile_geographic_bounds(x, y, z);\n        else\n            [xmin, ymin, xmax, ymax] = this.get_tile_meter_bounds(x, y, z);\n        return image_url\n            .replace(\"{XMIN}\", xmin.toString())\n            .replace(\"{YMIN}\", ymin.toString())\n            .replace(\"{XMAX}\", xmax.toString())\n            .replace(\"{YMAX}\", ymax.toString());\n    }\n}\nBBoxTileSource.__name__ = \"BBoxTileSource\";\nBBoxTileSource.init_BBoxTileSource();\n//# sourceMappingURL=bbox_tile_source.js.map"]},"metadata":{},"sourceType":"module"}