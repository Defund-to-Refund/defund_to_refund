{"ast":null,"code":"import { TextAnnotation, TextAnnotationView } from \"./text_annotation\";\nimport { ColumnDataSource } from \"../sources/column_data_source\";\nimport { div, display, undisplay } from \"../../core/dom\";\nimport * as p from \"../../core/properties\";\nimport { bk_annotation_child } from \"../../styles/annotations\";\nexport class LabelSetView extends TextAnnotationView {\n  initialize() {\n    super.initialize();\n    this.set_data(this.model.source);\n\n    if (this.model.render_mode == 'css') {\n      for (let i = 0, end = this._text.length; i < end; i++) {\n        const el = div({\n          class: bk_annotation_child,\n          style: {\n            display: \"none\"\n          }\n        });\n        this.el.appendChild(el);\n      }\n    }\n  }\n\n  connect_signals() {\n    super.connect_signals();\n\n    if (this.model.render_mode == 'css') {\n      // dispatch CSS update immediately\n      this.connect(this.model.change, () => {\n        this.set_data(this.model.source);\n        this.render();\n      });\n      this.connect(this.model.source.streaming, () => {\n        this.set_data(this.model.source);\n        this.render();\n      });\n      this.connect(this.model.source.patching, () => {\n        this.set_data(this.model.source);\n        this.render();\n      });\n      this.connect(this.model.source.change, () => {\n        this.set_data(this.model.source);\n        this.render();\n      });\n    } else {\n      this.connect(this.model.change, () => {\n        this.set_data(this.model.source);\n        this.plot_view.request_render();\n      });\n      this.connect(this.model.source.streaming, () => {\n        this.set_data(this.model.source);\n        this.plot_view.request_render();\n      });\n      this.connect(this.model.source.patching, () => {\n        this.set_data(this.model.source);\n        this.plot_view.request_render();\n      });\n      this.connect(this.model.source.change, () => {\n        this.set_data(this.model.source);\n        this.plot_view.request_render();\n      });\n    }\n  }\n\n  set_data(source) {\n    super.set_data(source);\n    this.visuals.warm_cache(source);\n  }\n\n  _map_data() {\n    const xscale = this.plot_view.frame.xscales[this.model.x_range_name];\n    const yscale = this.plot_view.frame.yscales[this.model.y_range_name];\n    const panel = this.panel != null ? this.panel : this.plot_view.frame;\n    const sx = this.model.x_units == \"data\" ? xscale.v_compute(this._x) : panel.xview.v_compute(this._x);\n    const sy = this.model.y_units == \"data\" ? yscale.v_compute(this._y) : panel.yview.v_compute(this._y);\n    return [sx, sy];\n  }\n\n  render() {\n    if (!this.model.visible && this.model.render_mode == 'css') undisplay(this.el);\n    if (!this.model.visible) return;\n    const draw = this.model.render_mode == 'canvas' ? this._v_canvas_text.bind(this) : this._v_css_text.bind(this);\n    const {\n      ctx\n    } = this.plot_view.canvas_view;\n\n    const [sx, sy] = this._map_data();\n\n    for (let i = 0, end = this._text.length; i < end; i++) {\n      draw(ctx, i, this._text[i], sx[i] + this._x_offset[i], sy[i] - this._y_offset[i], this._angle[i]);\n    }\n  }\n\n  _get_size() {\n    const {\n      ctx\n    } = this.plot_view.canvas_view;\n    this.visuals.text.set_value(ctx);\n    const {\n      width,\n      ascent\n    } = ctx.measureText(this._text[0]);\n    return {\n      width,\n      height: ascent\n    };\n  }\n\n  _v_canvas_text(ctx, i, text, sx, sy, angle) {\n    this.visuals.text.set_vectorize(ctx, i);\n\n    const bbox_dims = this._calculate_bounding_box_dimensions(ctx, text);\n\n    ctx.save();\n    ctx.beginPath();\n    ctx.translate(sx, sy);\n    ctx.rotate(angle);\n    ctx.rect(bbox_dims[0], bbox_dims[1], bbox_dims[2], bbox_dims[3]);\n\n    if (this.visuals.background_fill.doit) {\n      this.visuals.background_fill.set_vectorize(ctx, i);\n      ctx.fill();\n    }\n\n    if (this.visuals.border_line.doit) {\n      this.visuals.border_line.set_vectorize(ctx, i);\n      ctx.stroke();\n    }\n\n    if (this.visuals.text.doit) {\n      this.visuals.text.set_vectorize(ctx, i);\n      ctx.fillText(text, 0, 0);\n    }\n\n    ctx.restore();\n  }\n\n  _v_css_text(ctx, i, text, sx, sy, angle) {\n    const el = this.el.children[i];\n    el.textContent = text;\n    this.visuals.text.set_vectorize(ctx, i);\n\n    const bbox_dims = this._calculate_bounding_box_dimensions(ctx, text); // attempt to support vector-style (\"8 4 8\") line dashing for css mode\n\n\n    const ld = this.visuals.border_line.line_dash.value();\n    const line_dash = ld.length < 2 ? \"solid\" : \"dashed\";\n    this.visuals.border_line.set_vectorize(ctx, i);\n    this.visuals.background_fill.set_vectorize(ctx, i);\n    el.style.position = 'absolute';\n    el.style.left = `${sx + bbox_dims[0]}px`;\n    el.style.top = `${sy + bbox_dims[1]}px`;\n    el.style.color = `${this.visuals.text.text_color.value()}`;\n    el.style.opacity = `${this.visuals.text.text_alpha.value()}`;\n    el.style.font = `${this.visuals.text.font_value()}`;\n    el.style.lineHeight = \"normal\"; // needed to prevent ipynb css override\n\n    if (angle) {\n      el.style.transform = `rotate(${angle}rad)`;\n    }\n\n    if (this.visuals.background_fill.doit) {\n      el.style.backgroundColor = `${this.visuals.background_fill.color_value()}`;\n    }\n\n    if (this.visuals.border_line.doit) {\n      el.style.borderStyle = `${line_dash}`;\n      el.style.borderWidth = `${this.visuals.border_line.line_width.value()}px`;\n      el.style.borderColor = `${this.visuals.border_line.color_value()}`;\n    }\n\n    display(el);\n  }\n\n}\nLabelSetView.__name__ = \"LabelSetView\";\nexport class LabelSet extends TextAnnotation {\n  constructor(attrs) {\n    super(attrs);\n  }\n\n  static init_LabelSet() {\n    this.prototype.default_view = LabelSetView;\n    this.mixins(['text', 'line:border_', 'fill:background_']);\n    this.define({\n      x: [p.NumberSpec],\n      y: [p.NumberSpec],\n      x_units: [p.SpatialUnits, 'data'],\n      y_units: [p.SpatialUnits, 'data'],\n      text: [p.StringSpec, {\n        field: \"text\"\n      }],\n      angle: [p.AngleSpec, 0],\n      x_offset: [p.NumberSpec, {\n        value: 0\n      }],\n      y_offset: [p.NumberSpec, {\n        value: 0\n      }],\n      source: [p.Instance, () => new ColumnDataSource()],\n      x_range_name: [p.String, 'default'],\n      y_range_name: [p.String, 'default']\n    });\n    this.override({\n      background_fill_color: null,\n      border_line_color: null\n    });\n  }\n\n}\nLabelSet.__name__ = \"LabelSet\";\nLabelSet.init_LabelSet();","map":{"version":3,"sources":["/Users/gen/Desktop/defund_to_refund/node_modules/@bokeh/bokehjs/build/js/lib/models/annotations/label_set.js"],"names":["TextAnnotation","TextAnnotationView","ColumnDataSource","div","display","undisplay","p","bk_annotation_child","LabelSetView","initialize","set_data","model","source","render_mode","i","end","_text","length","el","class","style","appendChild","connect_signals","connect","change","render","streaming","patching","plot_view","request_render","visuals","warm_cache","_map_data","xscale","frame","xscales","x_range_name","yscale","yscales","y_range_name","panel","sx","x_units","v_compute","_x","xview","sy","y_units","_y","yview","visible","draw","_v_canvas_text","bind","_v_css_text","ctx","canvas_view","_x_offset","_y_offset","_angle","_get_size","text","set_value","width","ascent","measureText","height","angle","set_vectorize","bbox_dims","_calculate_bounding_box_dimensions","save","beginPath","translate","rotate","rect","background_fill","doit","fill","border_line","stroke","fillText","restore","children","textContent","ld","line_dash","value","position","left","top","color","text_color","opacity","text_alpha","font","font_value","lineHeight","transform","backgroundColor","color_value","borderStyle","borderWidth","line_width","borderColor","__name__","LabelSet","constructor","attrs","init_LabelSet","prototype","default_view","mixins","define","x","NumberSpec","y","SpatialUnits","StringSpec","field","AngleSpec","x_offset","y_offset","Instance","String","override","background_fill_color","border_line_color"],"mappings":"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","sourcesContent":["import { TextAnnotation, TextAnnotationView } from \"./text_annotation\";\nimport { ColumnDataSource } from \"../sources/column_data_source\";\nimport { div, display, undisplay } from \"../../core/dom\";\nimport * as p from \"../../core/properties\";\nimport { bk_annotation_child } from \"../../styles/annotations\";\nexport class LabelSetView extends TextAnnotationView {\n    initialize() {\n        super.initialize();\n        this.set_data(this.model.source);\n        if (this.model.render_mode == 'css') {\n            for (let i = 0, end = this._text.length; i < end; i++) {\n                const el = div({ class: bk_annotation_child, style: { display: \"none\" } });\n                this.el.appendChild(el);\n            }\n        }\n    }\n    connect_signals() {\n        super.connect_signals();\n        if (this.model.render_mode == 'css') {\n            // dispatch CSS update immediately\n            this.connect(this.model.change, () => {\n                this.set_data(this.model.source);\n                this.render();\n            });\n            this.connect(this.model.source.streaming, () => {\n                this.set_data(this.model.source);\n                this.render();\n            });\n            this.connect(this.model.source.patching, () => {\n                this.set_data(this.model.source);\n                this.render();\n            });\n            this.connect(this.model.source.change, () => {\n                this.set_data(this.model.source);\n                this.render();\n            });\n        }\n        else {\n            this.connect(this.model.change, () => {\n                this.set_data(this.model.source);\n                this.plot_view.request_render();\n            });\n            this.connect(this.model.source.streaming, () => {\n                this.set_data(this.model.source);\n                this.plot_view.request_render();\n            });\n            this.connect(this.model.source.patching, () => {\n                this.set_data(this.model.source);\n                this.plot_view.request_render();\n            });\n            this.connect(this.model.source.change, () => {\n                this.set_data(this.model.source);\n                this.plot_view.request_render();\n            });\n        }\n    }\n    set_data(source) {\n        super.set_data(source);\n        this.visuals.warm_cache(source);\n    }\n    _map_data() {\n        const xscale = this.plot_view.frame.xscales[this.model.x_range_name];\n        const yscale = this.plot_view.frame.yscales[this.model.y_range_name];\n        const panel = this.panel != null ? this.panel : this.plot_view.frame;\n        const sx = this.model.x_units == \"data\" ? xscale.v_compute(this._x) : panel.xview.v_compute(this._x);\n        const sy = this.model.y_units == \"data\" ? yscale.v_compute(this._y) : panel.yview.v_compute(this._y);\n        return [sx, sy];\n    }\n    render() {\n        if (!this.model.visible && this.model.render_mode == 'css')\n            undisplay(this.el);\n        if (!this.model.visible)\n            return;\n        const draw = this.model.render_mode == 'canvas' ? this._v_canvas_text.bind(this) : this._v_css_text.bind(this);\n        const { ctx } = this.plot_view.canvas_view;\n        const [sx, sy] = this._map_data();\n        for (let i = 0, end = this._text.length; i < end; i++) {\n            draw(ctx, i, this._text[i], sx[i] + this._x_offset[i], sy[i] - this._y_offset[i], this._angle[i]);\n        }\n    }\n    _get_size() {\n        const { ctx } = this.plot_view.canvas_view;\n        this.visuals.text.set_value(ctx);\n        const { width, ascent } = ctx.measureText(this._text[0]);\n        return { width, height: ascent };\n    }\n    _v_canvas_text(ctx, i, text, sx, sy, angle) {\n        this.visuals.text.set_vectorize(ctx, i);\n        const bbox_dims = this._calculate_bounding_box_dimensions(ctx, text);\n        ctx.save();\n        ctx.beginPath();\n        ctx.translate(sx, sy);\n        ctx.rotate(angle);\n        ctx.rect(bbox_dims[0], bbox_dims[1], bbox_dims[2], bbox_dims[3]);\n        if (this.visuals.background_fill.doit) {\n            this.visuals.background_fill.set_vectorize(ctx, i);\n            ctx.fill();\n        }\n        if (this.visuals.border_line.doit) {\n            this.visuals.border_line.set_vectorize(ctx, i);\n            ctx.stroke();\n        }\n        if (this.visuals.text.doit) {\n            this.visuals.text.set_vectorize(ctx, i);\n            ctx.fillText(text, 0, 0);\n        }\n        ctx.restore();\n    }\n    _v_css_text(ctx, i, text, sx, sy, angle) {\n        const el = this.el.children[i];\n        el.textContent = text;\n        this.visuals.text.set_vectorize(ctx, i);\n        const bbox_dims = this._calculate_bounding_box_dimensions(ctx, text);\n        // attempt to support vector-style (\"8 4 8\") line dashing for css mode\n        const ld = this.visuals.border_line.line_dash.value();\n        const line_dash = ld.length < 2 ? \"solid\" : \"dashed\";\n        this.visuals.border_line.set_vectorize(ctx, i);\n        this.visuals.background_fill.set_vectorize(ctx, i);\n        el.style.position = 'absolute';\n        el.style.left = `${sx + bbox_dims[0]}px`;\n        el.style.top = `${sy + bbox_dims[1]}px`;\n        el.style.color = `${this.visuals.text.text_color.value()}`;\n        el.style.opacity = `${this.visuals.text.text_alpha.value()}`;\n        el.style.font = `${this.visuals.text.font_value()}`;\n        el.style.lineHeight = \"normal\"; // needed to prevent ipynb css override\n        if (angle) {\n            el.style.transform = `rotate(${angle}rad)`;\n        }\n        if (this.visuals.background_fill.doit) {\n            el.style.backgroundColor = `${this.visuals.background_fill.color_value()}`;\n        }\n        if (this.visuals.border_line.doit) {\n            el.style.borderStyle = `${line_dash}`;\n            el.style.borderWidth = `${this.visuals.border_line.line_width.value()}px`;\n            el.style.borderColor = `${this.visuals.border_line.color_value()}`;\n        }\n        display(el);\n    }\n}\nLabelSetView.__name__ = \"LabelSetView\";\nexport class LabelSet extends TextAnnotation {\n    constructor(attrs) {\n        super(attrs);\n    }\n    static init_LabelSet() {\n        this.prototype.default_view = LabelSetView;\n        this.mixins(['text', 'line:border_', 'fill:background_']);\n        this.define({\n            x: [p.NumberSpec],\n            y: [p.NumberSpec],\n            x_units: [p.SpatialUnits, 'data'],\n            y_units: [p.SpatialUnits, 'data'],\n            text: [p.StringSpec, { field: \"text\" }],\n            angle: [p.AngleSpec, 0],\n            x_offset: [p.NumberSpec, { value: 0 }],\n            y_offset: [p.NumberSpec, { value: 0 }],\n            source: [p.Instance, () => new ColumnDataSource()],\n            x_range_name: [p.String, 'default'],\n            y_range_name: [p.String, 'default'],\n        });\n        this.override({\n            background_fill_color: null,\n            border_line_color: null,\n        });\n    }\n}\nLabelSet.__name__ = \"LabelSet\";\nLabelSet.init_LabelSet();\n//# sourceMappingURL=label_set.js.map"]},"metadata":{},"sourceType":"module"}