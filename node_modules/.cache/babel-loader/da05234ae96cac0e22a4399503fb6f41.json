{"ast":null,"code":"import { Data } from \"@bokeh/slickgrid\";\nconst {\n  Avg,\n  Min,\n  Max,\n  Sum\n} = Data.Aggregators;\nimport * as p from \"../../../core/properties\";\nimport { Model } from \"../../../model\";\nexport class RowAggregator extends Model {\n  constructor(attrs) {\n    super(attrs);\n  }\n\n  static init_RowAggregator() {\n    this.define({\n      field_: [p.String, '']\n    });\n  }\n\n}\nRowAggregator.__name__ = \"RowAggregator\";\nRowAggregator.init_RowAggregator();\nconst avg = new Avg();\nexport class AvgAggregator extends RowAggregator {\n  constructor() {\n    super(...arguments);\n    this.key = 'avg';\n    this.init = avg.init;\n    this.accumulate = avg.accumulate;\n    this.storeResult = avg.storeResult;\n  }\n\n}\nAvgAggregator.__name__ = \"AvgAggregator\";\nconst min = new Min();\nexport class MinAggregator extends RowAggregator {\n  constructor() {\n    super(...arguments);\n    this.key = 'min';\n    this.init = min.init;\n    this.accumulate = min.accumulate;\n    this.storeResult = min.storeResult;\n  }\n\n}\nMinAggregator.__name__ = \"MinAggregator\";\nconst max = new Max();\nexport class MaxAggregator extends RowAggregator {\n  constructor() {\n    super(...arguments);\n    this.key = 'max';\n    this.init = max.init;\n    this.accumulate = max.accumulate;\n    this.storeResult = max.storeResult;\n  }\n\n}\nMaxAggregator.__name__ = \"MaxAggregator\";\nconst sum = new Sum();\nexport class SumAggregator extends RowAggregator {\n  constructor() {\n    super(...arguments);\n    this.key = 'sum';\n    this.init = sum.init;\n    this.accumulate = sum.accumulate;\n    this.storeResult = sum.storeResult;\n  }\n\n}\nSumAggregator.__name__ = \"SumAggregator\";","map":{"version":3,"sources":["/Users/gen/Desktop/defund_to_refund/node_modules/@bokeh/bokehjs/build/js/lib/models/widgets/tables/row_aggregators.js"],"names":["Data","Avg","Min","Max","Sum","Aggregators","p","Model","RowAggregator","constructor","attrs","init_RowAggregator","define","field_","String","__name__","avg","AvgAggregator","arguments","key","init","accumulate","storeResult","min","MinAggregator","max","MaxAggregator","sum","SumAggregator"],"mappings":"AAAA,SAASA,IAAT,QAAqB,kBAArB;AACA,MAAM;AAAEC,EAAAA,GAAF;AAAOC,EAAAA,GAAP;AAAYC,EAAAA,GAAZ;AAAiBC,EAAAA;AAAjB,IAAyBJ,IAAI,CAACK,WAApC;AACA,OAAO,KAAKC,CAAZ,MAAmB,0BAAnB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAO,MAAMC,aAAN,SAA4BD,KAA5B,CAAkC;AACrCE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACH;;AACD,SAAOC,kBAAP,GAA4B;AACxB,SAAKC,MAAL,CAAY;AACRC,MAAAA,MAAM,EAAE,CAACP,CAAC,CAACQ,MAAH,EAAW,EAAX;AADA,KAAZ;AAGH;;AARoC;AAUzCN,aAAa,CAACO,QAAd,GAAyB,eAAzB;AACAP,aAAa,CAACG,kBAAd;AACA,MAAMK,GAAG,GAAG,IAAIf,GAAJ,EAAZ;AACA,OAAO,MAAMgB,aAAN,SAA4BT,aAA5B,CAA0C;AAC7CC,EAAAA,WAAW,GAAG;AACV,UAAM,GAAGS,SAAT;AACA,SAAKC,GAAL,GAAW,KAAX;AACA,SAAKC,IAAL,GAAYJ,GAAG,CAACI,IAAhB;AACA,SAAKC,UAAL,GAAkBL,GAAG,CAACK,UAAtB;AACA,SAAKC,WAAL,GAAmBN,GAAG,CAACM,WAAvB;AACH;;AAP4C;AASjDL,aAAa,CAACF,QAAd,GAAyB,eAAzB;AACA,MAAMQ,GAAG,GAAG,IAAIrB,GAAJ,EAAZ;AACA,OAAO,MAAMsB,aAAN,SAA4BhB,aAA5B,CAA0C;AAC7CC,EAAAA,WAAW,GAAG;AACV,UAAM,GAAGS,SAAT;AACA,SAAKC,GAAL,GAAW,KAAX;AACA,SAAKC,IAAL,GAAYG,GAAG,CAACH,IAAhB;AACA,SAAKC,UAAL,GAAkBE,GAAG,CAACF,UAAtB;AACA,SAAKC,WAAL,GAAmBC,GAAG,CAACD,WAAvB;AACH;;AAP4C;AASjDE,aAAa,CAACT,QAAd,GAAyB,eAAzB;AACA,MAAMU,GAAG,GAAG,IAAItB,GAAJ,EAAZ;AACA,OAAO,MAAMuB,aAAN,SAA4BlB,aAA5B,CAA0C;AAC7CC,EAAAA,WAAW,GAAG;AACV,UAAM,GAAGS,SAAT;AACA,SAAKC,GAAL,GAAW,KAAX;AACA,SAAKC,IAAL,GAAYK,GAAG,CAACL,IAAhB;AACA,SAAKC,UAAL,GAAkBI,GAAG,CAACJ,UAAtB;AACA,SAAKC,WAAL,GAAmBG,GAAG,CAACH,WAAvB;AACH;;AAP4C;AASjDI,aAAa,CAACX,QAAd,GAAyB,eAAzB;AACA,MAAMY,GAAG,GAAG,IAAIvB,GAAJ,EAAZ;AACA,OAAO,MAAMwB,aAAN,SAA4BpB,aAA5B,CAA0C;AAC7CC,EAAAA,WAAW,GAAG;AACV,UAAM,GAAGS,SAAT;AACA,SAAKC,GAAL,GAAW,KAAX;AACA,SAAKC,IAAL,GAAYO,GAAG,CAACP,IAAhB;AACA,SAAKC,UAAL,GAAkBM,GAAG,CAACN,UAAtB;AACA,SAAKC,WAAL,GAAmBK,GAAG,CAACL,WAAvB;AACH;;AAP4C;AASjDM,aAAa,CAACb,QAAd,GAAyB,eAAzB","sourcesContent":["import { Data } from \"@bokeh/slickgrid\";\nconst { Avg, Min, Max, Sum } = Data.Aggregators;\nimport * as p from \"../../../core/properties\";\nimport { Model } from \"../../../model\";\nexport class RowAggregator extends Model {\n    constructor(attrs) {\n        super(attrs);\n    }\n    static init_RowAggregator() {\n        this.define({\n            field_: [p.String, ''],\n        });\n    }\n}\nRowAggregator.__name__ = \"RowAggregator\";\nRowAggregator.init_RowAggregator();\nconst avg = new Avg();\nexport class AvgAggregator extends RowAggregator {\n    constructor() {\n        super(...arguments);\n        this.key = 'avg';\n        this.init = avg.init;\n        this.accumulate = avg.accumulate;\n        this.storeResult = avg.storeResult;\n    }\n}\nAvgAggregator.__name__ = \"AvgAggregator\";\nconst min = new Min();\nexport class MinAggregator extends RowAggregator {\n    constructor() {\n        super(...arguments);\n        this.key = 'min';\n        this.init = min.init;\n        this.accumulate = min.accumulate;\n        this.storeResult = min.storeResult;\n    }\n}\nMinAggregator.__name__ = \"MinAggregator\";\nconst max = new Max();\nexport class MaxAggregator extends RowAggregator {\n    constructor() {\n        super(...arguments);\n        this.key = 'max';\n        this.init = max.init;\n        this.accumulate = max.accumulate;\n        this.storeResult = max.storeResult;\n    }\n}\nMaxAggregator.__name__ = \"MaxAggregator\";\nconst sum = new Sum();\nexport class SumAggregator extends RowAggregator {\n    constructor() {\n        super(...arguments);\n        this.key = 'sum';\n        this.init = sum.init;\n        this.accumulate = sum.accumulate;\n        this.storeResult = sum.storeResult;\n    }\n}\nSumAggregator.__name__ = \"SumAggregator\";\n//# sourceMappingURL=row_aggregators.js.map"]},"metadata":{},"sourceType":"module"}