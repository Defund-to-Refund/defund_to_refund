{"ast":null,"code":"import { TextAnnotation, TextAnnotationView } from \"./text_annotation\";\nimport { undisplay } from \"../../core/dom\";\nimport { Text } from \"../../core/visuals\";\nimport * as p from \"../../core/properties\";\nexport class TitleView extends TextAnnotationView {\n  initialize() {\n    super.initialize();\n    this.visuals.text = new Text(this.model);\n  }\n\n  _get_location() {\n    const panel = this.panel;\n    const hmargin = this.model.offset;\n    const vmargin = 5;\n    let sx, sy;\n\n    switch (panel.side) {\n      case 'above':\n      case 'below':\n        {\n          switch (this.model.vertical_align) {\n            case 'top':\n              sy = panel._top.value + vmargin;\n              break;\n\n            case 'middle':\n              sy = panel._vcenter.value;\n              break;\n\n            case 'bottom':\n              sy = panel._bottom.value - vmargin;\n              break;\n          }\n\n          switch (this.model.align) {\n            case 'left':\n              sx = panel._left.value + hmargin;\n              break;\n\n            case 'center':\n              sx = panel._hcenter.value;\n              break;\n\n            case 'right':\n              sx = panel._right.value - hmargin;\n              break;\n          }\n\n          break;\n        }\n\n      case 'left':\n        {\n          switch (this.model.vertical_align) {\n            case 'top':\n              sx = panel._left.value - vmargin;\n              break;\n\n            case 'middle':\n              sx = panel._hcenter.value;\n              break;\n\n            case 'bottom':\n              sx = panel._right.value + vmargin;\n              break;\n          }\n\n          switch (this.model.align) {\n            case 'left':\n              sy = panel._bottom.value - hmargin;\n              break;\n\n            case 'center':\n              sy = panel._vcenter.value;\n              break;\n\n            case 'right':\n              sy = panel._top.value + hmargin;\n              break;\n          }\n\n          break;\n        }\n\n      case 'right':\n        {\n          switch (this.model.vertical_align) {\n            case 'top':\n              sx = panel._right.value - vmargin;\n              break;\n\n            case 'middle':\n              sx = panel._hcenter.value;\n              break;\n\n            case 'bottom':\n              sx = panel._left.value + vmargin;\n              break;\n          }\n\n          switch (this.model.align) {\n            case 'left':\n              sy = panel._top.value + hmargin;\n              break;\n\n            case 'center':\n              sy = panel._vcenter.value;\n              break;\n\n            case 'right':\n              sy = panel._bottom.value - hmargin;\n              break;\n          }\n\n          break;\n        }\n    }\n\n    return [sx, sy];\n  }\n\n  render() {\n    if (!this.model.visible) {\n      if (this.model.render_mode == 'css') undisplay(this.el);\n      return;\n    }\n\n    const {\n      text\n    } = this.model;\n    if (text == null || text.length == 0) return;\n    this.model.text_baseline = this.model.vertical_align;\n    this.model.text_align = this.model.align;\n\n    const [sx, sy] = this._get_location();\n\n    const angle = this.panel.get_label_angle_heuristic('parallel');\n    const draw = this.model.render_mode == 'canvas' ? this._canvas_text.bind(this) : this._css_text.bind(this);\n    draw(this.plot_view.canvas_view.ctx, text, sx, sy, angle);\n  }\n\n  _get_size() {\n    const {\n      text\n    } = this.model;\n    if (text == null || text.length == 0) return {\n      width: 0,\n      height: 0\n    };else {\n      this.visuals.text.set_value(this.ctx);\n      const {\n        width,\n        ascent\n      } = this.ctx.measureText(text);\n      return {\n        width,\n        height: ascent * this.visuals.text.text_line_height.value() + 10\n      };\n    }\n  }\n\n}\nTitleView.__name__ = \"TitleView\";\nexport class Title extends TextAnnotation {\n  constructor(attrs) {\n    super(attrs);\n  }\n\n  static init_Title() {\n    this.prototype.default_view = TitleView;\n    this.mixins(['line:border_', 'fill:background_']);\n    this.define({\n      text: [p.String],\n      text_font: [p.Font, 'helvetica'],\n      text_font_size: [p.FontSizeSpec, '13px'],\n      text_font_style: [p.FontStyle, 'bold'],\n      text_color: [p.ColorSpec, '#444444'],\n      text_alpha: [p.NumberSpec, 1.0],\n      text_line_height: [p.Number, 1.0],\n      vertical_align: [p.VerticalAlign, 'bottom'],\n      align: [p.TextAlign, 'left'],\n      offset: [p.Number, 0]\n    });\n    this.override({\n      background_fill_color: null,\n      border_line_color: null\n    });\n    this.internal({\n      text_align: [p.TextAlign, 'left'],\n      text_baseline: [p.TextBaseline, 'bottom']\n    });\n  }\n\n}\nTitle.__name__ = \"Title\";\nTitle.init_Title();","map":{"version":3,"sources":["/Users/gen/Desktop/defund_to_refund/node_modules/@bokeh/bokehjs/build/js/lib/models/annotations/title.js"],"names":["TextAnnotation","TextAnnotationView","undisplay","Text","p","TitleView","initialize","visuals","text","model","_get_location","panel","hmargin","offset","vmargin","sx","sy","side","vertical_align","_top","value","_vcenter","_bottom","align","_left","_hcenter","_right","render","visible","render_mode","el","length","text_baseline","text_align","angle","get_label_angle_heuristic","draw","_canvas_text","bind","_css_text","plot_view","canvas_view","ctx","_get_size","width","height","set_value","ascent","measureText","text_line_height","__name__","Title","constructor","attrs","init_Title","prototype","default_view","mixins","define","String","text_font","Font","text_font_size","FontSizeSpec","text_font_style","FontStyle","text_color","ColorSpec","text_alpha","NumberSpec","Number","VerticalAlign","TextAlign","override","background_fill_color","border_line_color","internal","TextBaseline"],"mappings":"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","sourcesContent":["import { TextAnnotation, TextAnnotationView } from \"./text_annotation\";\nimport { undisplay } from \"../../core/dom\";\nimport { Text } from \"../../core/visuals\";\nimport * as p from \"../../core/properties\";\nexport class TitleView extends TextAnnotationView {\n    initialize() {\n        super.initialize();\n        this.visuals.text = new Text(this.model);\n    }\n    _get_location() {\n        const panel = this.panel;\n        const hmargin = this.model.offset;\n        const vmargin = 5;\n        let sx, sy;\n        switch (panel.side) {\n            case 'above':\n            case 'below': {\n                switch (this.model.vertical_align) {\n                    case 'top':\n                        sy = panel._top.value + vmargin;\n                        break;\n                    case 'middle':\n                        sy = panel._vcenter.value;\n                        break;\n                    case 'bottom':\n                        sy = panel._bottom.value - vmargin;\n                        break;\n                }\n                switch (this.model.align) {\n                    case 'left':\n                        sx = panel._left.value + hmargin;\n                        break;\n                    case 'center':\n                        sx = panel._hcenter.value;\n                        break;\n                    case 'right':\n                        sx = panel._right.value - hmargin;\n                        break;\n                }\n                break;\n            }\n            case 'left': {\n                switch (this.model.vertical_align) {\n                    case 'top':\n                        sx = panel._left.value - vmargin;\n                        break;\n                    case 'middle':\n                        sx = panel._hcenter.value;\n                        break;\n                    case 'bottom':\n                        sx = panel._right.value + vmargin;\n                        break;\n                }\n                switch (this.model.align) {\n                    case 'left':\n                        sy = panel._bottom.value - hmargin;\n                        break;\n                    case 'center':\n                        sy = panel._vcenter.value;\n                        break;\n                    case 'right':\n                        sy = panel._top.value + hmargin;\n                        break;\n                }\n                break;\n            }\n            case 'right': {\n                switch (this.model.vertical_align) {\n                    case 'top':\n                        sx = panel._right.value - vmargin;\n                        break;\n                    case 'middle':\n                        sx = panel._hcenter.value;\n                        break;\n                    case 'bottom':\n                        sx = panel._left.value + vmargin;\n                        break;\n                }\n                switch (this.model.align) {\n                    case 'left':\n                        sy = panel._top.value + hmargin;\n                        break;\n                    case 'center':\n                        sy = panel._vcenter.value;\n                        break;\n                    case 'right':\n                        sy = panel._bottom.value - hmargin;\n                        break;\n                }\n                break;\n            }\n        }\n        return [sx, sy];\n    }\n    render() {\n        if (!this.model.visible) {\n            if (this.model.render_mode == 'css')\n                undisplay(this.el);\n            return;\n        }\n        const { text } = this.model;\n        if (text == null || text.length == 0)\n            return;\n        this.model.text_baseline = this.model.vertical_align;\n        this.model.text_align = this.model.align;\n        const [sx, sy] = this._get_location();\n        const angle = this.panel.get_label_angle_heuristic('parallel');\n        const draw = this.model.render_mode == 'canvas' ? this._canvas_text.bind(this) : this._css_text.bind(this);\n        draw(this.plot_view.canvas_view.ctx, text, sx, sy, angle);\n    }\n    _get_size() {\n        const { text } = this.model;\n        if (text == null || text.length == 0)\n            return { width: 0, height: 0 };\n        else {\n            this.visuals.text.set_value(this.ctx);\n            const { width, ascent } = this.ctx.measureText(text);\n            return { width, height: ascent * this.visuals.text.text_line_height.value() + 10 };\n        }\n    }\n}\nTitleView.__name__ = \"TitleView\";\nexport class Title extends TextAnnotation {\n    constructor(attrs) {\n        super(attrs);\n    }\n    static init_Title() {\n        this.prototype.default_view = TitleView;\n        this.mixins(['line:border_', 'fill:background_']);\n        this.define({\n            text: [p.String],\n            text_font: [p.Font, 'helvetica'],\n            text_font_size: [p.FontSizeSpec, '13px'],\n            text_font_style: [p.FontStyle, 'bold'],\n            text_color: [p.ColorSpec, '#444444'],\n            text_alpha: [p.NumberSpec, 1.0],\n            text_line_height: [p.Number, 1.0],\n            vertical_align: [p.VerticalAlign, 'bottom'],\n            align: [p.TextAlign, 'left'],\n            offset: [p.Number, 0],\n        });\n        this.override({\n            background_fill_color: null,\n            border_line_color: null,\n        });\n        this.internal({\n            text_align: [p.TextAlign, 'left'],\n            text_baseline: [p.TextBaseline, 'bottom'],\n        });\n    }\n}\nTitle.__name__ = \"Title\";\nTitle.init_Title();\n//# sourceMappingURL=title.js.map"]},"metadata":{},"sourceType":"module"}