{"ast":null,"code":"var _jsxFileName = \"/Users/gen/Desktop/defund_to_refund/src/App.js\";\nimport React, { useState } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport Bokeh from '@bokeh/bokehjs';\nimport Title from './components/title';\nimport TotalFunds from './components/totalFunds';\nimport SliderBar from './components/sliderBar';\nimport { groups } from './dummy_data/groups';\nimport bokeh_data from './data/bokeh_data.json';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      funds: 1000000000,\n      percentage: [0, 0, 0, 0]\n    };\n\n    this.handlePercentage = (e, value) => {\n      let index = parseInt(e.target.id, 10);\n      this.setState({\n        percentage: [...this.state.percentage.slice(0, index), value, ...this.state.percentage.slice(index + 1)]\n      });\n    };\n  }\n\n  componentDidMount() {\n    Bokeh.embed.embed_item(bokeh_data);\n  }\n\n  render() {\n    // const [funds, setFunds] = useState(1000000000)\n    // const [percentage, setPercentage] = useState([0, 0, 0, 0])\n\n    /*\n    const handlePercentage = (e, value) => {\n      let index = parseInt(e.target.id, 10)\n      setPercentage([...percentage.slice(0, index), value, ...percentage.slice(index + 1)])\n    }\n    */\n    const groupSections = groups.map((group, idx) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: idx,\n        style: {\n          display: 'flex'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }\n      }, group, \": \"), /*#__PURE__*/React.createElement(SliderBar, {\n        handlePercentage: this.handlePercentage,\n        idx: idx,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }\n      }, \"Percentage: \", this.state.percentage[idx]));\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      className: \"App-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(TotalFunds, {\n      funds: this.state.funds,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }\n    }, groupSections), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"myplot\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/gen/Desktop/defund_to_refund/src/App.js"],"names":["React","useState","Bokeh","Title","TotalFunds","SliderBar","groups","bokeh_data","App","Component","state","funds","percentage","handlePercentage","e","value","index","parseInt","target","id","setState","slice","componentDidMount","embed","embed_item","render","groupSections","map","group","idx","display","flexDirection"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,OAAO,WAAP;AAEA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,SAASC,MAAT,QAAuB,qBAAvB;AACA,OAAOC,UAAP,MAAuB,wBAAvB;;AAEA,MAAMC,GAAN,SAAkBR,KAAK,CAACS,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCC,KADgC,GACxB;AACNC,MAAAA,KAAK,EAAE,UADD;AAENC,MAAAA,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV;AAFN,KADwB;;AAAA,SAMhCC,gBANgC,GAMb,CAACC,CAAD,EAAIC,KAAJ,KAAc;AAC/B,UAAIC,KAAK,GAAGC,QAAQ,CAACH,CAAC,CAACI,MAAF,CAASC,EAAV,EAAc,EAAd,CAApB;AACA,WAAKC,QAAL,CAAc;AAACR,QAAAA,UAAU,EAAE,CAAC,GAAG,KAAKF,KAAL,CAAWE,UAAX,CAAsBS,KAAtB,CAA4B,CAA5B,EAA+BL,KAA/B,CAAJ,EAA2CD,KAA3C,EAAkD,GAAG,KAAKL,KAAL,CAAWE,UAAX,CAAsBS,KAAtB,CAA4BL,KAAK,GAAG,CAApC,CAArD;AAAb,OAAd;AACD,KAT+B;AAAA;;AAWhCM,EAAAA,iBAAiB,GAAE;AACjBpB,IAAAA,KAAK,CAACqB,KAAN,CAAYC,UAAZ,CAAuBjB,UAAvB;AACD;;AAEDkB,EAAAA,MAAM,GAAG;AACP;AACA;;AAEA;;;;;;AAOA,UAAMC,aAAa,GAAGpB,MAAM,CAACqB,GAAP,CAAW,CAACC,KAAD,EAAQC,GAAR,KAAgB;AAC/C,0BACE;AAAK,QAAA,GAAG,EAAEA,GAAV;AAAe,QAAA,KAAK,EAAE;AAAEC,UAAAA,OAAO,EAAE;AAAX,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIF,KAAJ,OADF,eAEE,oBAAC,SAAD;AAAW,QAAA,gBAAgB,EAAE,KAAKf,gBAAlC;AAAoD,QAAA,GAAG,EAAEgB,GAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAgB,KAAKnB,KAAL,CAAWE,UAAX,CAAsBiB,GAAtB,CAAhB,CAHF,CADF;AAOD,KARqB,CAAtB;AAUA,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,UAAD;AAAY,MAAA,KAAK,EAAE,KAAKnB,KAAL,CAAWC,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE;AAAK,MAAA,KAAK,EAAE;AAAEmB,QAAAA,OAAO,EAAE,MAAX;AAAmBC,QAAAA,aAAa,EAAE;AAAlC,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGL,aADH,CAHF,eAME;AAAK,MAAA,EAAE,EAAC,QAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CAFF,CADF;AAaD;;AAjD+B;;AAoDlC,eAAelB,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport Bokeh from '@bokeh/bokehjs'\nimport Title from './components/title'\nimport TotalFunds from './components/totalFunds'\nimport SliderBar from './components/sliderBar'\nimport { groups } from './dummy_data/groups'\nimport bokeh_data from './data/bokeh_data.json'\n\nclass App extends React.Component {\n  state = {\n    funds: 1000000000,\n    percentage: [0, 0, 0, 0]\n  }\n\n  handlePercentage = (e, value) => {\n    let index = parseInt(e.target.id, 10)\n    this.setState({percentage: [...this.state.percentage.slice(0, index), value, ...this.state.percentage.slice(index + 1)]})\n  }\n\n  componentDidMount(){\n    Bokeh.embed.embed_item(bokeh_data);\n  }\n\n  render() {\n    // const [funds, setFunds] = useState(1000000000)\n    // const [percentage, setPercentage] = useState([0, 0, 0, 0])\n\n    /*\n    const handlePercentage = (e, value) => {\n      let index = parseInt(e.target.id, 10)\n      setPercentage([...percentage.slice(0, index), value, ...percentage.slice(index + 1)])\n    }\n    */\n\n    const groupSections = groups.map((group, idx) => {\n      return (\n        <div key={idx} style={{ display: 'flex' }}>\n          <p>{group}: </p>\n          <SliderBar handlePercentage={this.handlePercentage} idx={idx} />\n          <p>Percentage: {this.state.percentage[idx]}</p>\n        </div>\n      )\n    })\n\n    return (\n      <div className=\"App\">\n\n        <header className=\"App-header\">\n          <Title />\n          <TotalFunds funds={this.state.funds} />\n          <div style={{ display: 'flex', flexDirection: 'column' }}>\n            {groupSections}\n          </div>\n          <div id=\"myplot\" />\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}