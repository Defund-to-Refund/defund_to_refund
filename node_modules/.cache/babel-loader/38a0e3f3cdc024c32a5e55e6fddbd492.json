{"ast":null,"code":"import { Filter } from \"./filter\";\nimport * as p from \"../../core/properties\";\nimport { logger } from \"../../core/logging\";\nimport { isInteger } from \"../../core/util/types\";\nimport { every } from \"../../core/util/array\";\nexport class IndexFilter extends Filter {\n  constructor(attrs) {\n    super(attrs);\n  }\n\n  static init_IndexFilter() {\n    this.define({\n      indices: [p.Array, null]\n    });\n  }\n\n  compute_indices(_source) {\n    if (this.indices != null) {\n      if (every(this.indices, isInteger)) return this.indices;else {\n        logger.warn(`IndexFilter ${this.id}: indices should be array of integers, defaulting to no filtering`);\n        return null;\n      }\n    } else {\n      logger.warn(`IndexFilter ${this.id}: indices was not set, defaulting to no filtering`);\n      return null;\n    }\n  }\n\n}\nIndexFilter.__name__ = \"IndexFilter\";\nIndexFilter.init_IndexFilter();","map":{"version":3,"sources":["/Users/gen/Desktop/defund_to_refund/node_modules/@bokeh/bokehjs/build/js/lib/models/filters/index_filter.js"],"names":["Filter","p","logger","isInteger","every","IndexFilter","constructor","attrs","init_IndexFilter","define","indices","Array","compute_indices","_source","warn","id","__name__"],"mappings":"AAAA,SAASA,MAAT,QAAuB,UAAvB;AACA,OAAO,KAAKC,CAAZ,MAAmB,uBAAnB;AACA,SAASC,MAAT,QAAuB,oBAAvB;AACA,SAASC,SAAT,QAA0B,uBAA1B;AACA,SAASC,KAAT,QAAsB,uBAAtB;AACA,OAAO,MAAMC,WAAN,SAA0BL,MAA1B,CAAiC;AACpCM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACH;;AACD,SAAOC,gBAAP,GAA0B;AACtB,SAAKC,MAAL,CAAY;AACRC,MAAAA,OAAO,EAAE,CAACT,CAAC,CAACU,KAAH,EAAU,IAAV;AADD,KAAZ;AAGH;;AACDC,EAAAA,eAAe,CAACC,OAAD,EAAU;AACrB,QAAI,KAAKH,OAAL,IAAgB,IAApB,EAA0B;AACtB,UAAIN,KAAK,CAAC,KAAKM,OAAN,EAAeP,SAAf,CAAT,EACI,OAAO,KAAKO,OAAZ,CADJ,KAEK;AACDR,QAAAA,MAAM,CAACY,IAAP,CAAa,eAAc,KAAKC,EAAG,mEAAnC;AACA,eAAO,IAAP;AACH;AACJ,KAPD,MAQK;AACDb,MAAAA,MAAM,CAACY,IAAP,CAAa,eAAc,KAAKC,EAAG,mDAAnC;AACA,aAAO,IAAP;AACH;AACJ;;AAtBmC;AAwBxCV,WAAW,CAACW,QAAZ,GAAuB,aAAvB;AACAX,WAAW,CAACG,gBAAZ","sourcesContent":["import { Filter } from \"./filter\";\nimport * as p from \"../../core/properties\";\nimport { logger } from \"../../core/logging\";\nimport { isInteger } from \"../../core/util/types\";\nimport { every } from \"../../core/util/array\";\nexport class IndexFilter extends Filter {\n    constructor(attrs) {\n        super(attrs);\n    }\n    static init_IndexFilter() {\n        this.define({\n            indices: [p.Array, null],\n        });\n    }\n    compute_indices(_source) {\n        if (this.indices != null) {\n            if (every(this.indices, isInteger))\n                return this.indices;\n            else {\n                logger.warn(`IndexFilter ${this.id}: indices should be array of integers, defaulting to no filtering`);\n                return null;\n            }\n        }\n        else {\n            logger.warn(`IndexFilter ${this.id}: indices was not set, defaulting to no filtering`);\n            return null;\n        }\n    }\n}\nIndexFilter.__name__ = \"IndexFilter\";\nIndexFilter.init_IndexFilter();\n//# sourceMappingURL=index_filter.js.map"]},"metadata":{},"sourceType":"module"}