{"ast":null,"code":"import { Expression } from \"./expression\";\nimport * as p from \"../../core/properties\";\nexport class CumSum extends Expression {\n  constructor(attrs) {\n    super(attrs);\n  }\n\n  static init_CumSum() {\n    this.define({\n      field: [p.String],\n      include_zero: [p.Boolean, false]\n    });\n  }\n\n  _v_compute(source) {\n    const result = new Float64Array(source.get_length() || 0);\n    const col = source.data[this.field];\n    const offset = this.include_zero ? 1 : 0;\n    result[0] = this.include_zero ? 0 : col[0];\n\n    for (let i = 1; i < result.length; i++) {\n      result[i] = result[i - 1] + col[i - offset];\n    }\n\n    return result;\n  }\n\n}\nCumSum.__name__ = \"CumSum\";\nCumSum.init_CumSum();","map":{"version":3,"sources":["/Users/gen/Desktop/defund_to_refund/node_modules/@bokeh/bokehjs/build/js/lib/models/expressions/cumsum.js"],"names":["Expression","p","CumSum","constructor","attrs","init_CumSum","define","field","String","include_zero","Boolean","_v_compute","source","result","Float64Array","get_length","col","data","offset","i","length","__name__"],"mappings":"AAAA,SAASA,UAAT,QAA2B,cAA3B;AACA,OAAO,KAAKC,CAAZ,MAAmB,uBAAnB;AACA,OAAO,MAAMC,MAAN,SAAqBF,UAArB,CAAgC;AACnCG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACH;;AACD,SAAOC,WAAP,GAAqB;AACjB,SAAKC,MAAL,CAAY;AACRC,MAAAA,KAAK,EAAE,CAACN,CAAC,CAACO,MAAH,CADC;AAERC,MAAAA,YAAY,EAAE,CAACR,CAAC,CAACS,OAAH,EAAY,KAAZ;AAFN,KAAZ;AAIH;;AACDC,EAAAA,UAAU,CAACC,MAAD,EAAS;AACf,UAAMC,MAAM,GAAG,IAAIC,YAAJ,CAAiBF,MAAM,CAACG,UAAP,MAAuB,CAAxC,CAAf;AACA,UAAMC,GAAG,GAAGJ,MAAM,CAACK,IAAP,CAAY,KAAKV,KAAjB,CAAZ;AACA,UAAMW,MAAM,GAAG,KAAKT,YAAL,GAAoB,CAApB,GAAwB,CAAvC;AACAI,IAAAA,MAAM,CAAC,CAAD,CAAN,GAAY,KAAKJ,YAAL,GAAoB,CAApB,GAAwBO,GAAG,CAAC,CAAD,CAAvC;;AACA,SAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,MAAM,CAACO,MAA3B,EAAmCD,CAAC,EAApC,EAAwC;AACpCN,MAAAA,MAAM,CAACM,CAAD,CAAN,GAAYN,MAAM,CAACM,CAAC,GAAG,CAAL,CAAN,GAAgBH,GAAG,CAACG,CAAC,GAAGD,MAAL,CAA/B;AACH;;AACD,WAAOL,MAAP;AACH;;AAnBkC;AAqBvCX,MAAM,CAACmB,QAAP,GAAkB,QAAlB;AACAnB,MAAM,CAACG,WAAP","sourcesContent":["import { Expression } from \"./expression\";\nimport * as p from \"../../core/properties\";\nexport class CumSum extends Expression {\n    constructor(attrs) {\n        super(attrs);\n    }\n    static init_CumSum() {\n        this.define({\n            field: [p.String],\n            include_zero: [p.Boolean, false],\n        });\n    }\n    _v_compute(source) {\n        const result = new Float64Array(source.get_length() || 0);\n        const col = source.data[this.field];\n        const offset = this.include_zero ? 1 : 0;\n        result[0] = this.include_zero ? 0 : col[0];\n        for (let i = 1; i < result.length; i++) {\n            result[i] = result[i - 1] + col[i - offset];\n        }\n        return result;\n    }\n}\nCumSum.__name__ = \"CumSum\";\nCumSum.init_CumSum();\n//# sourceMappingURL=cumsum.js.map"]},"metadata":{},"sourceType":"module"}