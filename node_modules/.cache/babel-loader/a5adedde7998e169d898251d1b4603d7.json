{"ast":null,"code":"import { Filter } from \"./filter\";\nimport * as p from \"../../core/properties\";\nimport { logger } from \"../../core/logging\";\nimport { range, every } from \"../../core/util/array\";\nimport { isBoolean } from \"../../core/util/types\";\nexport class BooleanFilter extends Filter {\n  constructor(attrs) {\n    super(attrs);\n  }\n\n  static init_BooleanFilter() {\n    this.define({\n      booleans: [p.Array, null]\n    });\n  }\n\n  compute_indices(source) {\n    const booleans = this.booleans;\n\n    if (booleans != null && booleans.length > 0) {\n      if (every(booleans, isBoolean)) {\n        if (booleans.length !== source.get_length()) {\n          logger.warn(`BooleanFilter ${this.id}: length of booleans doesn't match data source`);\n        }\n\n        return range(0, booleans.length).filter(i => booleans[i] === true);\n      } else {\n        logger.warn(`BooleanFilter ${this.id}: booleans should be array of booleans, defaulting to no filtering`);\n        return null;\n      }\n    } else {\n      if (booleans != null && booleans.length == 0) logger.warn(`BooleanFilter ${this.id}: booleans is empty, defaulting to no filtering`);else logger.warn(`BooleanFilter ${this.id}: booleans was not set, defaulting to no filtering`);\n      return null;\n    }\n  }\n\n}\nBooleanFilter.__name__ = \"BooleanFilter\";\nBooleanFilter.init_BooleanFilter();","map":{"version":3,"sources":["/Users/gen/Desktop/defund_to_refund/node_modules/@bokeh/bokehjs/build/js/lib/models/filters/boolean_filter.js"],"names":["Filter","p","logger","range","every","isBoolean","BooleanFilter","constructor","attrs","init_BooleanFilter","define","booleans","Array","compute_indices","source","length","get_length","warn","id","filter","i","__name__"],"mappings":"AAAA,SAASA,MAAT,QAAuB,UAAvB;AACA,OAAO,KAAKC,CAAZ,MAAmB,uBAAnB;AACA,SAASC,MAAT,QAAuB,oBAAvB;AACA,SAASC,KAAT,EAAgBC,KAAhB,QAA6B,uBAA7B;AACA,SAASC,SAAT,QAA0B,uBAA1B;AACA,OAAO,MAAMC,aAAN,SAA4BN,MAA5B,CAAmC;AACtCO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACH;;AACD,SAAOC,kBAAP,GAA4B;AACxB,SAAKC,MAAL,CAAY;AACRC,MAAAA,QAAQ,EAAE,CAACV,CAAC,CAACW,KAAH,EAAU,IAAV;AADF,KAAZ;AAGH;;AACDC,EAAAA,eAAe,CAACC,MAAD,EAAS;AACpB,UAAMH,QAAQ,GAAG,KAAKA,QAAtB;;AACA,QAAIA,QAAQ,IAAI,IAAZ,IAAoBA,QAAQ,CAACI,MAAT,GAAkB,CAA1C,EAA6C;AACzC,UAAIX,KAAK,CAACO,QAAD,EAAWN,SAAX,CAAT,EAAgC;AAC5B,YAAIM,QAAQ,CAACI,MAAT,KAAoBD,MAAM,CAACE,UAAP,EAAxB,EAA6C;AACzCd,UAAAA,MAAM,CAACe,IAAP,CAAa,iBAAgB,KAAKC,EAAG,gDAArC;AACH;;AACD,eAAOf,KAAK,CAAC,CAAD,EAAIQ,QAAQ,CAACI,MAAb,CAAL,CAA0BI,MAA1B,CAAkCC,CAAD,IAAOT,QAAQ,CAACS,CAAD,CAAR,KAAgB,IAAxD,CAAP;AACH,OALD,MAMK;AACDlB,QAAAA,MAAM,CAACe,IAAP,CAAa,iBAAgB,KAAKC,EAAG,oEAArC;AACA,eAAO,IAAP;AACH;AACJ,KAXD,MAYK;AACD,UAAIP,QAAQ,IAAI,IAAZ,IAAoBA,QAAQ,CAACI,MAAT,IAAmB,CAA3C,EACIb,MAAM,CAACe,IAAP,CAAa,iBAAgB,KAAKC,EAAG,iDAArC,EADJ,KAGIhB,MAAM,CAACe,IAAP,CAAa,iBAAgB,KAAKC,EAAG,oDAArC;AACJ,aAAO,IAAP;AACH;AACJ;;AA9BqC;AAgC1CZ,aAAa,CAACe,QAAd,GAAyB,eAAzB;AACAf,aAAa,CAACG,kBAAd","sourcesContent":["import { Filter } from \"./filter\";\nimport * as p from \"../../core/properties\";\nimport { logger } from \"../../core/logging\";\nimport { range, every } from \"../../core/util/array\";\nimport { isBoolean } from \"../../core/util/types\";\nexport class BooleanFilter extends Filter {\n    constructor(attrs) {\n        super(attrs);\n    }\n    static init_BooleanFilter() {\n        this.define({\n            booleans: [p.Array, null],\n        });\n    }\n    compute_indices(source) {\n        const booleans = this.booleans;\n        if (booleans != null && booleans.length > 0) {\n            if (every(booleans, isBoolean)) {\n                if (booleans.length !== source.get_length()) {\n                    logger.warn(`BooleanFilter ${this.id}: length of booleans doesn't match data source`);\n                }\n                return range(0, booleans.length).filter((i) => booleans[i] === true);\n            }\n            else {\n                logger.warn(`BooleanFilter ${this.id}: booleans should be array of booleans, defaulting to no filtering`);\n                return null;\n            }\n        }\n        else {\n            if (booleans != null && booleans.length == 0)\n                logger.warn(`BooleanFilter ${this.id}: booleans is empty, defaulting to no filtering`);\n            else\n                logger.warn(`BooleanFilter ${this.id}: booleans was not set, defaulting to no filtering`);\n            return null;\n        }\n    }\n}\nBooleanFilter.__name__ = \"BooleanFilter\";\nBooleanFilter.init_BooleanFilter();\n//# sourceMappingURL=boolean_filter.js.map"]},"metadata":{},"sourceType":"module"}