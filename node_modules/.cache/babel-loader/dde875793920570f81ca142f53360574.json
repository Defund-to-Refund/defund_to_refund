{"ast":null,"code":"import { Keys } from \"../../../core/dom\";\nimport * as p from \"../../../core/properties\";\nimport { EditTool, EditToolView } from \"./edit_tool\";\nimport { bk_tool_icon_point_draw } from \"../../../styles/icons\";\nexport class PointDrawToolView extends EditToolView {\n  _tap(ev) {\n    const append = ev.shiftKey;\n\n    const renderers = this._select_event(ev, append, this.model.renderers);\n\n    if (renderers.length || !this.model.add) {\n      return;\n    }\n\n    const renderer = this.model.renderers[0];\n\n    const point = this._map_drag(ev.sx, ev.sy, renderer);\n\n    if (point == null) return; // Type once dataspecs are typed\n\n    const glyph = renderer.glyph;\n    const cds = renderer.data_source;\n    const [xkey, ykey] = [glyph.x.field, glyph.y.field];\n    const [x, y] = point;\n\n    this._pop_glyphs(cds, this.model.num_objects);\n\n    if (xkey) cds.get_array(xkey).push(x);\n    if (ykey) cds.get_array(ykey).push(y);\n\n    this._pad_empty_columns(cds, [xkey, ykey]);\n\n    cds.change.emit();\n    cds.data = cds.data;\n    cds.properties.data.change.emit();\n  }\n\n  _keyup(ev) {\n    if (!this.model.active || !this._mouse_in_frame) return;\n\n    for (const renderer of this.model.renderers) {\n      if (ev.keyCode === Keys.Backspace) {\n        this._delete_selected(renderer);\n      } else if (ev.keyCode == Keys.Esc) {\n        renderer.data_source.selection_manager.clear();\n      }\n    }\n  }\n\n  _pan_start(ev) {\n    if (!this.model.drag) return;\n\n    this._select_event(ev, true, this.model.renderers);\n\n    this._basepoint = [ev.sx, ev.sy];\n  }\n\n  _pan(ev) {\n    if (!this.model.drag || this._basepoint == null) return;\n\n    this._drag_points(ev, this.model.renderers);\n  }\n\n  _pan_end(ev) {\n    if (!this.model.drag) return;\n\n    this._pan(ev);\n\n    for (const renderer of this.model.renderers) this._emit_cds_changes(renderer.data_source, false, true, true);\n\n    this._basepoint = null;\n  }\n\n}\nPointDrawToolView.__name__ = \"PointDrawToolView\";\nexport class PointDrawTool extends EditTool {\n  constructor(attrs) {\n    super(attrs);\n    this.tool_name = \"Point Draw Tool\";\n    this.icon = bk_tool_icon_point_draw;\n    this.event_type = [\"tap\", \"pan\", \"move\"];\n    this.default_order = 2;\n  }\n\n  static init_PointDrawTool() {\n    this.prototype.default_view = PointDrawToolView;\n    this.define({\n      add: [p.Boolean, true],\n      drag: [p.Boolean, true],\n      num_objects: [p.Int, 0]\n    });\n  }\n\n}\nPointDrawTool.__name__ = \"PointDrawTool\";\nPointDrawTool.init_PointDrawTool();","map":{"version":3,"sources":["/Users/gen/Desktop/defund_to_refund/node_modules/@bokeh/bokehjs/build/js/lib/models/tools/edit/point_draw_tool.js"],"names":["Keys","p","EditTool","EditToolView","bk_tool_icon_point_draw","PointDrawToolView","_tap","ev","append","shiftKey","renderers","_select_event","model","length","add","renderer","point","_map_drag","sx","sy","glyph","cds","data_source","xkey","ykey","x","field","y","_pop_glyphs","num_objects","get_array","push","_pad_empty_columns","change","emit","data","properties","_keyup","active","_mouse_in_frame","keyCode","Backspace","_delete_selected","Esc","selection_manager","clear","_pan_start","drag","_basepoint","_pan","_drag_points","_pan_end","_emit_cds_changes","__name__","PointDrawTool","constructor","attrs","tool_name","icon","event_type","default_order","init_PointDrawTool","prototype","default_view","define","Boolean","Int"],"mappings":"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","sourcesContent":["import { Keys } from \"../../../core/dom\";\nimport * as p from \"../../../core/properties\";\nimport { EditTool, EditToolView } from \"./edit_tool\";\nimport { bk_tool_icon_point_draw } from \"../../../styles/icons\";\nexport class PointDrawToolView extends EditToolView {\n    _tap(ev) {\n        const append = ev.shiftKey;\n        const renderers = this._select_event(ev, append, this.model.renderers);\n        if (renderers.length || !this.model.add) {\n            return;\n        }\n        const renderer = this.model.renderers[0];\n        const point = this._map_drag(ev.sx, ev.sy, renderer);\n        if (point == null)\n            return;\n        // Type once dataspecs are typed\n        const glyph = renderer.glyph;\n        const cds = renderer.data_source;\n        const [xkey, ykey] = [glyph.x.field, glyph.y.field];\n        const [x, y] = point;\n        this._pop_glyphs(cds, this.model.num_objects);\n        if (xkey)\n            cds.get_array(xkey).push(x);\n        if (ykey)\n            cds.get_array(ykey).push(y);\n        this._pad_empty_columns(cds, [xkey, ykey]);\n        cds.change.emit();\n        cds.data = cds.data;\n        cds.properties.data.change.emit();\n    }\n    _keyup(ev) {\n        if (!this.model.active || !this._mouse_in_frame)\n            return;\n        for (const renderer of this.model.renderers) {\n            if (ev.keyCode === Keys.Backspace) {\n                this._delete_selected(renderer);\n            }\n            else if (ev.keyCode == Keys.Esc) {\n                renderer.data_source.selection_manager.clear();\n            }\n        }\n    }\n    _pan_start(ev) {\n        if (!this.model.drag)\n            return;\n        this._select_event(ev, true, this.model.renderers);\n        this._basepoint = [ev.sx, ev.sy];\n    }\n    _pan(ev) {\n        if (!this.model.drag || this._basepoint == null)\n            return;\n        this._drag_points(ev, this.model.renderers);\n    }\n    _pan_end(ev) {\n        if (!this.model.drag)\n            return;\n        this._pan(ev);\n        for (const renderer of this.model.renderers)\n            this._emit_cds_changes(renderer.data_source, false, true, true);\n        this._basepoint = null;\n    }\n}\nPointDrawToolView.__name__ = \"PointDrawToolView\";\nexport class PointDrawTool extends EditTool {\n    constructor(attrs) {\n        super(attrs);\n        this.tool_name = \"Point Draw Tool\";\n        this.icon = bk_tool_icon_point_draw;\n        this.event_type = [\"tap\", \"pan\", \"move\"];\n        this.default_order = 2;\n    }\n    static init_PointDrawTool() {\n        this.prototype.default_view = PointDrawToolView;\n        this.define({\n            add: [p.Boolean, true],\n            drag: [p.Boolean, true],\n            num_objects: [p.Int, 0],\n        });\n    }\n}\nPointDrawTool.__name__ = \"PointDrawTool\";\nPointDrawTool.init_PointDrawTool();\n//# sourceMappingURL=point_draw_tool.js.map"]},"metadata":{},"sourceType":"module"}