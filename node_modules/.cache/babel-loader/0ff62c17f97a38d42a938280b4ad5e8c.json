{"ast":null,"code":"import { Annotation, AnnotationView } from \"./annotation\";\nimport { build_view } from \"../../core/build_views\";\nimport { empty, position, display, undisplay } from \"../../core/dom\";\nimport * as p from \"../../core/properties\";\nexport class ToolbarPanelView extends AnnotationView {\n  constructor() {\n    super(...arguments);\n    this.rotate = true;\n  }\n\n  initialize() {\n    super.initialize();\n    this.plot_view.canvas_view.add_event(this.el);\n  }\n\n  async lazy_initialize() {\n    this._toolbar_view = await build_view(this.model.toolbar, {\n      parent: this\n    });\n    this.plot_view.visibility_callbacks.push(visible => this._toolbar_view.set_visibility(visible));\n  }\n\n  remove() {\n    this._toolbar_view.remove();\n\n    super.remove();\n  }\n\n  render() {\n    super.render();\n\n    if (!this.model.visible) {\n      undisplay(this.el);\n      return;\n    }\n\n    this.el.style.position = \"absolute\";\n    this.el.style.overflow = \"hidden\";\n    position(this.el, this.panel.bbox);\n\n    this._toolbar_view.render();\n\n    empty(this.el);\n    this.el.appendChild(this._toolbar_view.el);\n    display(this.el);\n  }\n\n  _get_size() {\n    const {\n      tools,\n      logo\n    } = this.model.toolbar;\n    return {\n      width: tools.length * 30 + (logo != null ? 25 : 0),\n      height: 30\n    };\n  }\n\n}\nToolbarPanelView.__name__ = \"ToolbarPanelView\";\nexport class ToolbarPanel extends Annotation {\n  constructor(attrs) {\n    super(attrs);\n  }\n\n  static init_ToolbarPanel() {\n    this.prototype.default_view = ToolbarPanelView;\n    this.define({\n      toolbar: [p.Instance]\n    });\n  }\n\n}\nToolbarPanel.__name__ = \"ToolbarPanel\";\nToolbarPanel.init_ToolbarPanel();","map":{"version":3,"sources":["/Users/gen/Desktop/defund_to_refund/node_modules/@bokeh/bokehjs/build/js/lib/models/annotations/toolbar_panel.js"],"names":["Annotation","AnnotationView","build_view","empty","position","display","undisplay","p","ToolbarPanelView","constructor","arguments","rotate","initialize","plot_view","canvas_view","add_event","el","lazy_initialize","_toolbar_view","model","toolbar","parent","visibility_callbacks","push","visible","set_visibility","remove","render","style","overflow","panel","bbox","appendChild","_get_size","tools","logo","width","length","height","__name__","ToolbarPanel","attrs","init_ToolbarPanel","prototype","default_view","define","Instance"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,cAArB,QAA2C,cAA3C;AACA,SAASC,UAAT,QAA2B,wBAA3B;AACA,SAASC,KAAT,EAAgBC,QAAhB,EAA0BC,OAA1B,EAAmCC,SAAnC,QAAoD,gBAApD;AACA,OAAO,KAAKC,CAAZ,MAAmB,uBAAnB;AACA,OAAO,MAAMC,gBAAN,SAA+BP,cAA/B,CAA8C;AACjDQ,EAAAA,WAAW,GAAG;AACV,UAAM,GAAGC,SAAT;AACA,SAAKC,MAAL,GAAc,IAAd;AACH;;AACDC,EAAAA,UAAU,GAAG;AACT,UAAMA,UAAN;AACA,SAAKC,SAAL,CAAeC,WAAf,CAA2BC,SAA3B,CAAqC,KAAKC,EAA1C;AACH;;AACD,QAAMC,eAAN,GAAwB;AACpB,SAAKC,aAAL,GAAqB,MAAMhB,UAAU,CAAC,KAAKiB,KAAL,CAAWC,OAAZ,EAAqB;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAArB,CAArC;AACA,SAAKR,SAAL,CAAeS,oBAAf,CAAoCC,IAApC,CAA0CC,OAAD,IAAa,KAAKN,aAAL,CAAmBO,cAAnB,CAAkCD,OAAlC,CAAtD;AACH;;AACDE,EAAAA,MAAM,GAAG;AACL,SAAKR,aAAL,CAAmBQ,MAAnB;;AACA,UAAMA,MAAN;AACH;;AACDC,EAAAA,MAAM,GAAG;AACL,UAAMA,MAAN;;AACA,QAAI,CAAC,KAAKR,KAAL,CAAWK,OAAhB,EAAyB;AACrBlB,MAAAA,SAAS,CAAC,KAAKU,EAAN,CAAT;AACA;AACH;;AACD,SAAKA,EAAL,CAAQY,KAAR,CAAcxB,QAAd,GAAyB,UAAzB;AACA,SAAKY,EAAL,CAAQY,KAAR,CAAcC,QAAd,GAAyB,QAAzB;AACAzB,IAAAA,QAAQ,CAAC,KAAKY,EAAN,EAAU,KAAKc,KAAL,CAAWC,IAArB,CAAR;;AACA,SAAKb,aAAL,CAAmBS,MAAnB;;AACAxB,IAAAA,KAAK,CAAC,KAAKa,EAAN,CAAL;AACA,SAAKA,EAAL,CAAQgB,WAAR,CAAoB,KAAKd,aAAL,CAAmBF,EAAvC;AACAX,IAAAA,OAAO,CAAC,KAAKW,EAAN,CAAP;AACH;;AACDiB,EAAAA,SAAS,GAAG;AACR,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAkB,KAAKhB,KAAL,CAAWC,OAAnC;AACA,WAAO;AACHgB,MAAAA,KAAK,EAAEF,KAAK,CAACG,MAAN,GAAe,EAAf,IAAqBF,IAAI,IAAI,IAAR,GAAe,EAAf,GAAoB,CAAzC,CADJ;AAEHG,MAAAA,MAAM,EAAE;AAFL,KAAP;AAIH;;AArCgD;AAuCrD9B,gBAAgB,CAAC+B,QAAjB,GAA4B,kBAA5B;AACA,OAAO,MAAMC,YAAN,SAA2BxC,UAA3B,CAAsC;AACzCS,EAAAA,WAAW,CAACgC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACH;;AACD,SAAOC,iBAAP,GAA2B;AACvB,SAAKC,SAAL,CAAeC,YAAf,GAA8BpC,gBAA9B;AACA,SAAKqC,MAAL,CAAY;AACRzB,MAAAA,OAAO,EAAE,CAACb,CAAC,CAACuC,QAAH;AADD,KAAZ;AAGH;;AATwC;AAW7CN,YAAY,CAACD,QAAb,GAAwB,cAAxB;AACAC,YAAY,CAACE,iBAAb","sourcesContent":["import { Annotation, AnnotationView } from \"./annotation\";\nimport { build_view } from \"../../core/build_views\";\nimport { empty, position, display, undisplay } from \"../../core/dom\";\nimport * as p from \"../../core/properties\";\nexport class ToolbarPanelView extends AnnotationView {\n    constructor() {\n        super(...arguments);\n        this.rotate = true;\n    }\n    initialize() {\n        super.initialize();\n        this.plot_view.canvas_view.add_event(this.el);\n    }\n    async lazy_initialize() {\n        this._toolbar_view = await build_view(this.model.toolbar, { parent: this });\n        this.plot_view.visibility_callbacks.push((visible) => this._toolbar_view.set_visibility(visible));\n    }\n    remove() {\n        this._toolbar_view.remove();\n        super.remove();\n    }\n    render() {\n        super.render();\n        if (!this.model.visible) {\n            undisplay(this.el);\n            return;\n        }\n        this.el.style.position = \"absolute\";\n        this.el.style.overflow = \"hidden\";\n        position(this.el, this.panel.bbox);\n        this._toolbar_view.render();\n        empty(this.el);\n        this.el.appendChild(this._toolbar_view.el);\n        display(this.el);\n    }\n    _get_size() {\n        const { tools, logo } = this.model.toolbar;\n        return {\n            width: tools.length * 30 + (logo != null ? 25 : 0),\n            height: 30,\n        };\n    }\n}\nToolbarPanelView.__name__ = \"ToolbarPanelView\";\nexport class ToolbarPanel extends Annotation {\n    constructor(attrs) {\n        super(attrs);\n    }\n    static init_ToolbarPanel() {\n        this.prototype.default_view = ToolbarPanelView;\n        this.define({\n            toolbar: [p.Instance],\n        });\n    }\n}\nToolbarPanel.__name__ = \"ToolbarPanel\";\nToolbarPanel.init_ToolbarPanel();\n//# sourceMappingURL=toolbar_panel.js.map"]},"metadata":{},"sourceType":"module"}