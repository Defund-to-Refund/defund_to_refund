{"ast":null,"code":"import { Axis, AxisView } from \"./axis\";\nimport { CategoricalTicker } from \"../tickers/categorical_ticker\";\nimport { CategoricalTickFormatter } from \"../formatters/categorical_tick_formatter\";\nimport * as p from \"../../core/properties\";\nexport class CategoricalAxisView extends AxisView {\n  _render(ctx, extents, tick_coords) {\n    this._draw_group_separators(ctx, extents, tick_coords);\n  }\n\n  _draw_group_separators(ctx, _extents, _tick_coords) {\n    const [range] = this.ranges;\n    const [start, end] = this.computed_bounds;\n    if (!range.tops || range.tops.length < 2 || !this.visuals.separator_line.doit) return;\n    const dim = this.dimension;\n    const alt = (dim + 1) % 2;\n    const coords = [[], []];\n    let ind = 0;\n\n    for (let i = 0; i < range.tops.length - 1; i++) {\n      let first, last;\n\n      for (let j = ind; j < range.factors.length; j++) {\n        if (range.factors[j][0] == range.tops[i + 1]) {\n          [first, last] = [range.factors[j - 1], range.factors[j]];\n          ind = j;\n          break;\n        }\n      }\n\n      const pt = (range.synthetic(first) + range.synthetic(last)) / 2;\n\n      if (pt > start && pt < end) {\n        coords[dim].push(pt);\n        coords[alt].push(this.loc);\n      }\n    }\n\n    const tex = this._tick_label_extent();\n\n    this._draw_ticks(ctx, coords, -3, tex - 6, this.visuals.separator_line);\n  }\n\n  _draw_major_labels(ctx, extents, _tick_coords) {\n    const info = this._get_factor_info();\n\n    let standoff = extents.tick + this.model.major_label_standoff;\n\n    for (let i = 0; i < info.length; i++) {\n      const [labels, coords, orient, visuals] = info[i];\n\n      this._draw_oriented_labels(ctx, labels, coords, orient, this.panel.side, standoff, visuals);\n\n      standoff += extents.tick_label[i];\n    }\n  }\n\n  _tick_label_extents() {\n    const info = this._get_factor_info();\n\n    const extents = [];\n\n    for (const [labels,, orient, visuals] of info) {\n      const extent = this._oriented_labels_extent(labels, orient, this.panel.side, this.model.major_label_standoff, visuals);\n\n      extents.push(extent);\n    }\n\n    return extents;\n  }\n\n  _get_factor_info() {\n    const [range] = this.ranges;\n    const [start, end] = this.computed_bounds;\n    const loc = this.loc;\n    const ticks = this.model.ticker.get_ticks(start, end, range, loc, {});\n    const coords = this.tick_coords;\n    const info = [];\n\n    if (range.levels == 1) {\n      const major = ticks.major;\n      const labels = this.model.formatter.doFormat(major, this);\n      info.push([labels, coords.major, this.model.major_label_orientation, this.visuals.major_label_text]);\n    } else if (range.levels == 2) {\n      const major = ticks.major.map(x => x[1]);\n      const labels = this.model.formatter.doFormat(major, this);\n      info.push([labels, coords.major, this.model.major_label_orientation, this.visuals.major_label_text]);\n      info.push([ticks.tops, coords.tops, this.model.group_label_orientation, this.visuals.group_text]);\n    } else if (range.levels == 3) {\n      const major = ticks.major.map(x => x[2]);\n      const labels = this.model.formatter.doFormat(major, this);\n      const mid_labels = ticks.mids.map(x => x[1]);\n      info.push([labels, coords.major, this.model.major_label_orientation, this.visuals.major_label_text]);\n      info.push([mid_labels, coords.mids, this.model.subgroup_label_orientation, this.visuals.subgroup_text]);\n      info.push([ticks.tops, coords.tops, this.model.group_label_orientation, this.visuals.group_text]);\n    }\n\n    return info;\n  } // {{{ TODO: state\n\n\n  get tick_coords() {\n    const i = this.dimension;\n    const j = (i + 1) % 2;\n    const [range] = this.ranges;\n    const [start, end] = this.computed_bounds;\n    const ticks = this.model.ticker.get_ticks(start, end, range, this.loc, {});\n    const coords = {\n      major: [[], []],\n      mids: [[], []],\n      tops: [[], []],\n      minor: [[], []]\n    };\n    coords.major[i] = ticks.major;\n    coords.major[j] = ticks.major.map(_x => this.loc);\n\n    if (range.levels == 3) {\n      coords.mids[i] = ticks.mids;\n      coords.mids[j] = ticks.mids.map(_x => this.loc);\n    }\n\n    if (range.levels > 1) {\n      coords.tops[i] = ticks.tops;\n      coords.tops[j] = ticks.tops.map(_x => this.loc);\n    }\n\n    return coords;\n  }\n\n}\nCategoricalAxisView.__name__ = \"CategoricalAxisView\";\nexport class CategoricalAxis extends Axis {\n  constructor(attrs) {\n    super(attrs);\n  }\n\n  static init_CategoricalAxis() {\n    this.prototype.default_view = CategoricalAxisView;\n    this.mixins([\"line:separator_\", \"text:group_\", \"text:subgroup_\"]);\n    this.define({\n      group_label_orientation: [p.Any, \"parallel\"],\n      subgroup_label_orientation: [p.Any, \"parallel\"]\n    });\n    this.override({\n      ticker: () => new CategoricalTicker(),\n      formatter: () => new CategoricalTickFormatter(),\n      separator_line_color: \"lightgrey\",\n      separator_line_width: 2,\n      group_text_font_style: \"bold\",\n      group_text_font_size: \"11px\",\n      group_text_color: \"grey\",\n      subgroup_text_font_style: \"bold\",\n      subgroup_text_font_size: \"11px\"\n    });\n  }\n\n}\nCategoricalAxis.__name__ = \"CategoricalAxis\";\nCategoricalAxis.init_CategoricalAxis();","map":{"version":3,"sources":["/Users/gen/Desktop/defund_to_refund/node_modules/@bokeh/bokehjs/build/js/lib/models/axes/categorical_axis.js"],"names":["Axis","AxisView","CategoricalTicker","CategoricalTickFormatter","p","CategoricalAxisView","_render","ctx","extents","tick_coords","_draw_group_separators","_extents","_tick_coords","range","ranges","start","end","computed_bounds","tops","length","visuals","separator_line","doit","dim","dimension","alt","coords","ind","i","first","last","j","factors","pt","synthetic","push","loc","tex","_tick_label_extent","_draw_ticks","_draw_major_labels","info","_get_factor_info","standoff","tick","model","major_label_standoff","labels","orient","_draw_oriented_labels","panel","side","tick_label","_tick_label_extents","extent","_oriented_labels_extent","ticks","ticker","get_ticks","levels","major","formatter","doFormat","major_label_orientation","major_label_text","map","x","group_label_orientation","group_text","mid_labels","mids","subgroup_label_orientation","subgroup_text","minor","_x","__name__","CategoricalAxis","constructor","attrs","init_CategoricalAxis","prototype","default_view","mixins","define","Any","override","separator_line_color","separator_line_width","group_text_font_style","group_text_font_size","group_text_color","subgroup_text_font_style","subgroup_text_font_size"],"mappings":"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","sourcesContent":["import { Axis, AxisView } from \"./axis\";\nimport { CategoricalTicker } from \"../tickers/categorical_ticker\";\nimport { CategoricalTickFormatter } from \"../formatters/categorical_tick_formatter\";\nimport * as p from \"../../core/properties\";\nexport class CategoricalAxisView extends AxisView {\n    _render(ctx, extents, tick_coords) {\n        this._draw_group_separators(ctx, extents, tick_coords);\n    }\n    _draw_group_separators(ctx, _extents, _tick_coords) {\n        const [range] = this.ranges;\n        const [start, end] = this.computed_bounds;\n        if (!range.tops || range.tops.length < 2 || !this.visuals.separator_line.doit)\n            return;\n        const dim = this.dimension;\n        const alt = (dim + 1) % 2;\n        const coords = [[], []];\n        let ind = 0;\n        for (let i = 0; i < range.tops.length - 1; i++) {\n            let first, last;\n            for (let j = ind; j < range.factors.length; j++) {\n                if (range.factors[j][0] == range.tops[i + 1]) {\n                    [first, last] = [range.factors[j - 1], range.factors[j]];\n                    ind = j;\n                    break;\n                }\n            }\n            const pt = (range.synthetic(first) + range.synthetic(last)) / 2;\n            if (pt > start && pt < end) {\n                coords[dim].push(pt);\n                coords[alt].push(this.loc);\n            }\n        }\n        const tex = this._tick_label_extent();\n        this._draw_ticks(ctx, coords, -3, (tex - 6), this.visuals.separator_line);\n    }\n    _draw_major_labels(ctx, extents, _tick_coords) {\n        const info = this._get_factor_info();\n        let standoff = extents.tick + this.model.major_label_standoff;\n        for (let i = 0; i < info.length; i++) {\n            const [labels, coords, orient, visuals] = info[i];\n            this._draw_oriented_labels(ctx, labels, coords, orient, this.panel.side, standoff, visuals);\n            standoff += extents.tick_label[i];\n        }\n    }\n    _tick_label_extents() {\n        const info = this._get_factor_info();\n        const extents = [];\n        for (const [labels, , orient, visuals] of info) {\n            const extent = this._oriented_labels_extent(labels, orient, this.panel.side, this.model.major_label_standoff, visuals);\n            extents.push(extent);\n        }\n        return extents;\n    }\n    _get_factor_info() {\n        const [range] = this.ranges;\n        const [start, end] = this.computed_bounds;\n        const loc = this.loc;\n        const ticks = this.model.ticker.get_ticks(start, end, range, loc, {});\n        const coords = this.tick_coords;\n        const info = [];\n        if (range.levels == 1) {\n            const major = ticks.major;\n            const labels = this.model.formatter.doFormat(major, this);\n            info.push([labels, coords.major, this.model.major_label_orientation, this.visuals.major_label_text]);\n        }\n        else if (range.levels == 2) {\n            const major = ticks.major.map((x) => x[1]);\n            const labels = this.model.formatter.doFormat(major, this);\n            info.push([labels, coords.major, this.model.major_label_orientation, this.visuals.major_label_text]);\n            info.push([ticks.tops, coords.tops, this.model.group_label_orientation, this.visuals.group_text]);\n        }\n        else if (range.levels == 3) {\n            const major = ticks.major.map((x) => x[2]);\n            const labels = this.model.formatter.doFormat(major, this);\n            const mid_labels = ticks.mids.map((x) => x[1]);\n            info.push([labels, coords.major, this.model.major_label_orientation, this.visuals.major_label_text]);\n            info.push([mid_labels, coords.mids, this.model.subgroup_label_orientation, this.visuals.subgroup_text]);\n            info.push([ticks.tops, coords.tops, this.model.group_label_orientation, this.visuals.group_text]);\n        }\n        return info;\n    }\n    // {{{ TODO: state\n    get tick_coords() {\n        const i = this.dimension;\n        const j = (i + 1) % 2;\n        const [range] = this.ranges;\n        const [start, end] = this.computed_bounds;\n        const ticks = this.model.ticker.get_ticks(start, end, range, this.loc, {});\n        const coords = {\n            major: [[], []],\n            mids: [[], []],\n            tops: [[], []],\n            minor: [[], []],\n        };\n        coords.major[i] = ticks.major;\n        coords.major[j] = ticks.major.map((_x) => this.loc);\n        if (range.levels == 3) {\n            coords.mids[i] = ticks.mids;\n            coords.mids[j] = ticks.mids.map((_x) => this.loc);\n        }\n        if (range.levels > 1) {\n            coords.tops[i] = ticks.tops;\n            coords.tops[j] = ticks.tops.map((_x) => this.loc);\n        }\n        return coords;\n    }\n}\nCategoricalAxisView.__name__ = \"CategoricalAxisView\";\nexport class CategoricalAxis extends Axis {\n    constructor(attrs) {\n        super(attrs);\n    }\n    static init_CategoricalAxis() {\n        this.prototype.default_view = CategoricalAxisView;\n        this.mixins([\n            \"line:separator_\",\n            \"text:group_\",\n            \"text:subgroup_\",\n        ]);\n        this.define({\n            group_label_orientation: [p.Any, \"parallel\"],\n            subgroup_label_orientation: [p.Any, \"parallel\"],\n        });\n        this.override({\n            ticker: () => new CategoricalTicker(),\n            formatter: () => new CategoricalTickFormatter(),\n            separator_line_color: \"lightgrey\",\n            separator_line_width: 2,\n            group_text_font_style: \"bold\",\n            group_text_font_size: \"11px\",\n            group_text_color: \"grey\",\n            subgroup_text_font_style: \"bold\",\n            subgroup_text_font_size: \"11px\",\n        });\n    }\n}\nCategoricalAxis.__name__ = \"CategoricalAxis\";\nCategoricalAxis.init_CategoricalAxis();\n//# sourceMappingURL=categorical_axis.js.map"]},"metadata":{},"sourceType":"module"}