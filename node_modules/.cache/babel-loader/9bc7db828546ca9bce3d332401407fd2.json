{"ast":null,"code":"import * as p from \"../../core/properties\";\nimport { Signal0 } from \"../../core/signaling\";\nimport { concat, remove_by } from \"../../core/util/array\";\nimport { values } from \"../../core/util/object\";\nimport { isArray } from \"../../core/util/types\";\nimport { LayoutDOM } from \"../layouts/layout_dom\";\nimport { Title } from \"../annotations/title\";\nimport { LinearScale } from \"../scales/linear_scale\";\nimport { Toolbar } from \"../tools/toolbar\";\nimport { ColumnDataSource } from \"../sources/column_data_source\";\nimport { GlyphRenderer } from \"../renderers/glyph_renderer\";\nimport { DataRange1d } from '../ranges/data_range1d';\nimport { PlotView } from \"./plot_canvas\";\nexport { PlotView };\nexport class Plot extends LayoutDOM {\n  constructor(attrs) {\n    super(attrs);\n  }\n\n  static init_Plot() {\n    this.prototype.default_view = PlotView;\n    this.mixins([\"line:outline_\", \"fill:background_\", \"fill:border_\"]);\n    this.define({\n      toolbar: [p.Instance, () => new Toolbar()],\n      toolbar_location: [p.Location, 'right'],\n      toolbar_sticky: [p.Boolean, true],\n      plot_width: [p.Number, 600],\n      plot_height: [p.Number, 600],\n      frame_width: [p.Number, null],\n      frame_height: [p.Number, null],\n      title: [p.Any, () => new Title({\n        text: \"\"\n      })],\n      title_location: [p.Location, 'above'],\n      above: [p.Array, []],\n      below: [p.Array, []],\n      left: [p.Array, []],\n      right: [p.Array, []],\n      center: [p.Array, []],\n      renderers: [p.Array, []],\n      x_range: [p.Instance, () => new DataRange1d()],\n      extra_x_ranges: [p.Any, {}],\n      y_range: [p.Instance, () => new DataRange1d()],\n      extra_y_ranges: [p.Any, {}],\n      x_scale: [p.Instance, () => new LinearScale()],\n      y_scale: [p.Instance, () => new LinearScale()],\n      lod_factor: [p.Number, 10],\n      lod_interval: [p.Number, 300],\n      lod_threshold: [p.Number, 2000],\n      lod_timeout: [p.Number, 500],\n      hidpi: [p.Boolean, true],\n      output_backend: [p.OutputBackend, \"canvas\"],\n      min_border: [p.Number, 5],\n      min_border_top: [p.Number, null],\n      min_border_left: [p.Number, null],\n      min_border_bottom: [p.Number, null],\n      min_border_right: [p.Number, null],\n      inner_width: [p.Number],\n      inner_height: [p.Number],\n      outer_width: [p.Number],\n      outer_height: [p.Number],\n      match_aspect: [p.Boolean, false],\n      aspect_scale: [p.Number, 1],\n      reset_policy: [p.ResetPolicy, \"standard\"]\n    });\n    this.override({\n      outline_line_color: \"#e5e5e5\",\n      border_fill_color: \"#ffffff\",\n      background_fill_color: \"#ffffff\"\n    });\n  }\n\n  get width() {\n    const width = this.getv(\"width\");\n    return width != null ? width : this.plot_width;\n  }\n\n  get height() {\n    const height = this.getv(\"height\");\n    return height != null ? height : this.plot_height;\n  }\n\n  _doc_attached() {\n    super._doc_attached();\n\n    this._tell_document_about_change('inner_height', null, this.inner_height, {});\n\n    this._tell_document_about_change('inner_width', null, this.inner_width, {});\n  }\n\n  initialize() {\n    super.initialize();\n    this.reset = new Signal0(this, \"reset\");\n\n    for (const xr of values(this.extra_x_ranges).concat(this.x_range)) {\n      let plots = xr.plots;\n\n      if (isArray(plots)) {\n        plots = plots.concat(this);\n        xr.setv({\n          plots\n        }, {\n          silent: true\n        });\n      }\n    }\n\n    for (const yr of values(this.extra_y_ranges).concat(this.y_range)) {\n      let plots = yr.plots;\n\n      if (isArray(plots)) {\n        plots = plots.concat(this);\n        yr.setv({\n          plots\n        }, {\n          silent: true\n        });\n      }\n    }\n  }\n\n  add_layout(renderer, side = \"center\") {\n    this.setv({\n      [side]: [...this.getv(side), renderer]\n    });\n  }\n\n  remove_layout(renderer) {\n    const del = items => {\n      remove_by(items, item => item == renderer);\n    };\n\n    del(this.left);\n    del(this.right);\n    del(this.above);\n    del(this.below);\n    del(this.center);\n  }\n\n  add_renderers(...renderers) {\n    this.renderers = this.renderers.concat(renderers);\n  }\n\n  add_glyph(glyph, source = new ColumnDataSource(), extra_attrs = {}) {\n    const attrs = Object.assign(Object.assign({}, extra_attrs), {\n      data_source: source,\n      glyph\n    });\n    const renderer = new GlyphRenderer(attrs);\n    this.add_renderers(renderer);\n    return renderer;\n  }\n\n  add_tools(...tools) {\n    this.toolbar.tools = this.toolbar.tools.concat(tools);\n  }\n\n  get panels() {\n    return this.side_panels.concat(this.center);\n  }\n\n  get side_panels() {\n    const {\n      above,\n      below,\n      left,\n      right\n    } = this;\n    return concat([above, below, left, right]);\n  }\n\n}\nPlot.__name__ = \"Plot\";\nPlot.init_Plot();","map":{"version":3,"sources":["/Users/gen/Desktop/defund_to_refund/node_modules/@bokeh/bokehjs/build/js/lib/models/plots/plot.js"],"names":["p","Signal0","concat","remove_by","values","isArray","LayoutDOM","Title","LinearScale","Toolbar","ColumnDataSource","GlyphRenderer","DataRange1d","PlotView","Plot","constructor","attrs","init_Plot","prototype","default_view","mixins","define","toolbar","Instance","toolbar_location","Location","toolbar_sticky","Boolean","plot_width","Number","plot_height","frame_width","frame_height","title","Any","text","title_location","above","Array","below","left","right","center","renderers","x_range","extra_x_ranges","y_range","extra_y_ranges","x_scale","y_scale","lod_factor","lod_interval","lod_threshold","lod_timeout","hidpi","output_backend","OutputBackend","min_border","min_border_top","min_border_left","min_border_bottom","min_border_right","inner_width","inner_height","outer_width","outer_height","match_aspect","aspect_scale","reset_policy","ResetPolicy","override","outline_line_color","border_fill_color","background_fill_color","width","getv","height","_doc_attached","_tell_document_about_change","initialize","reset","xr","plots","setv","silent","yr","add_layout","renderer","side","remove_layout","del","items","item","add_renderers","add_glyph","glyph","source","extra_attrs","Object","assign","data_source","add_tools","tools","panels","side_panels","__name__"],"mappings":"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","sourcesContent":["import * as p from \"../../core/properties\";\nimport { Signal0 } from \"../../core/signaling\";\nimport { concat, remove_by } from \"../../core/util/array\";\nimport { values } from \"../../core/util/object\";\nimport { isArray } from \"../../core/util/types\";\nimport { LayoutDOM } from \"../layouts/layout_dom\";\nimport { Title } from \"../annotations/title\";\nimport { LinearScale } from \"../scales/linear_scale\";\nimport { Toolbar } from \"../tools/toolbar\";\nimport { ColumnDataSource } from \"../sources/column_data_source\";\nimport { GlyphRenderer } from \"../renderers/glyph_renderer\";\nimport { DataRange1d } from '../ranges/data_range1d';\nimport { PlotView } from \"./plot_canvas\";\nexport { PlotView };\nexport class Plot extends LayoutDOM {\n    constructor(attrs) {\n        super(attrs);\n    }\n    static init_Plot() {\n        this.prototype.default_view = PlotView;\n        this.mixins([\"line:outline_\", \"fill:background_\", \"fill:border_\"]);\n        this.define({\n            toolbar: [p.Instance, () => new Toolbar()],\n            toolbar_location: [p.Location, 'right'],\n            toolbar_sticky: [p.Boolean, true],\n            plot_width: [p.Number, 600],\n            plot_height: [p.Number, 600],\n            frame_width: [p.Number, null],\n            frame_height: [p.Number, null],\n            title: [p.Any, () => new Title({ text: \"\" })],\n            title_location: [p.Location, 'above'],\n            above: [p.Array, []],\n            below: [p.Array, []],\n            left: [p.Array, []],\n            right: [p.Array, []],\n            center: [p.Array, []],\n            renderers: [p.Array, []],\n            x_range: [p.Instance, () => new DataRange1d()],\n            extra_x_ranges: [p.Any, {}],\n            y_range: [p.Instance, () => new DataRange1d()],\n            extra_y_ranges: [p.Any, {}],\n            x_scale: [p.Instance, () => new LinearScale()],\n            y_scale: [p.Instance, () => new LinearScale()],\n            lod_factor: [p.Number, 10],\n            lod_interval: [p.Number, 300],\n            lod_threshold: [p.Number, 2000],\n            lod_timeout: [p.Number, 500],\n            hidpi: [p.Boolean, true],\n            output_backend: [p.OutputBackend, \"canvas\"],\n            min_border: [p.Number, 5],\n            min_border_top: [p.Number, null],\n            min_border_left: [p.Number, null],\n            min_border_bottom: [p.Number, null],\n            min_border_right: [p.Number, null],\n            inner_width: [p.Number],\n            inner_height: [p.Number],\n            outer_width: [p.Number],\n            outer_height: [p.Number],\n            match_aspect: [p.Boolean, false],\n            aspect_scale: [p.Number, 1],\n            reset_policy: [p.ResetPolicy, \"standard\"],\n        });\n        this.override({\n            outline_line_color: \"#e5e5e5\",\n            border_fill_color: \"#ffffff\",\n            background_fill_color: \"#ffffff\",\n        });\n    }\n    get width() {\n        const width = this.getv(\"width\");\n        return width != null ? width : this.plot_width;\n    }\n    get height() {\n        const height = this.getv(\"height\");\n        return height != null ? height : this.plot_height;\n    }\n    _doc_attached() {\n        super._doc_attached();\n        this._tell_document_about_change('inner_height', null, this.inner_height, {});\n        this._tell_document_about_change('inner_width', null, this.inner_width, {});\n    }\n    initialize() {\n        super.initialize();\n        this.reset = new Signal0(this, \"reset\");\n        for (const xr of values(this.extra_x_ranges).concat(this.x_range)) {\n            let plots = xr.plots;\n            if (isArray(plots)) {\n                plots = plots.concat(this);\n                xr.setv({ plots }, { silent: true });\n            }\n        }\n        for (const yr of values(this.extra_y_ranges).concat(this.y_range)) {\n            let plots = yr.plots;\n            if (isArray(plots)) {\n                plots = plots.concat(this);\n                yr.setv({ plots }, { silent: true });\n            }\n        }\n    }\n    add_layout(renderer, side = \"center\") {\n        this.setv({ [side]: [...this.getv(side), renderer] });\n    }\n    remove_layout(renderer) {\n        const del = (items) => {\n            remove_by(items, (item) => item == renderer);\n        };\n        del(this.left);\n        del(this.right);\n        del(this.above);\n        del(this.below);\n        del(this.center);\n    }\n    add_renderers(...renderers) {\n        this.renderers = this.renderers.concat(renderers);\n    }\n    add_glyph(glyph, source = new ColumnDataSource(), extra_attrs = {}) {\n        const attrs = Object.assign(Object.assign({}, extra_attrs), { data_source: source, glyph });\n        const renderer = new GlyphRenderer(attrs);\n        this.add_renderers(renderer);\n        return renderer;\n    }\n    add_tools(...tools) {\n        this.toolbar.tools = this.toolbar.tools.concat(tools);\n    }\n    get panels() {\n        return this.side_panels.concat(this.center);\n    }\n    get side_panels() {\n        const { above, below, left, right } = this;\n        return concat([above, below, left, right]);\n    }\n}\nPlot.__name__ = \"Plot\";\nPlot.init_Plot();\n//# sourceMappingURL=plot.js.map"]},"metadata":{},"sourceType":"module"}