{"ast":null,"code":"import { SpatialIndex } from \"../../core/util/spatial\";\nimport { Glyph, GlyphView } from \"./glyph\";\nimport { generic_line_legend } from \"./utils\"; // algorithm adapted from http://stackoverflow.com/a/14429749/3406693\n\nfunction _cbb(x0, y0, x1, y1, x2, y2, x3, y3) {\n  const tvalues = [];\n  const bounds = [[], []];\n\n  for (let i = 0; i <= 2; i++) {\n    let a, b, c;\n\n    if (i === 0) {\n      b = 6 * x0 - 12 * x1 + 6 * x2;\n      a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\n      c = 3 * x1 - 3 * x0;\n    } else {\n      b = 6 * y0 - 12 * y1 + 6 * y2;\n      a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\n      c = 3 * y1 - 3 * y0;\n    }\n\n    if (Math.abs(a) < 1e-12) {\n      // Numerical robustness\n      if (Math.abs(b) < 1e-12) // Numerical robustness\n        continue;\n      const t = -c / b;\n      if (0 < t && t < 1) tvalues.push(t);\n      continue;\n    }\n\n    const b2ac = b * b - 4 * c * a;\n    const sqrtb2ac = Math.sqrt(b2ac);\n    if (b2ac < 0) continue;\n    const t1 = (-b + sqrtb2ac) / (2 * a);\n    if (0 < t1 && t1 < 1) tvalues.push(t1);\n    const t2 = (-b - sqrtb2ac) / (2 * a);\n    if (0 < t2 && t2 < 1) tvalues.push(t2);\n  }\n\n  let j = tvalues.length;\n  const jlen = j;\n\n  while (j--) {\n    const t = tvalues[j];\n    const mt = 1 - t;\n    const x = mt * mt * mt * x0 + 3 * mt * mt * t * x1 + 3 * mt * t * t * x2 + t * t * t * x3;\n    bounds[0][j] = x;\n    const y = mt * mt * mt * y0 + 3 * mt * mt * t * y1 + 3 * mt * t * t * y2 + t * t * t * y3;\n    bounds[1][j] = y;\n  }\n\n  bounds[0][jlen] = x0;\n  bounds[1][jlen] = y0;\n  bounds[0][jlen + 1] = x3;\n  bounds[1][jlen + 1] = y3;\n  return [Math.min(...bounds[0]), Math.max(...bounds[1]), Math.max(...bounds[0]), Math.min(...bounds[1])];\n}\n\nexport class BezierView extends GlyphView {\n  _index_data() {\n    const points = [];\n\n    for (let i = 0, end = this._x0.length; i < end; i++) {\n      if (isNaN(this._x0[i] + this._x1[i] + this._y0[i] + this._y1[i] + this._cx0[i] + this._cy0[i] + this._cx1[i] + this._cy1[i])) continue;\n\n      const [x0, y0, x1, y1] = _cbb(this._x0[i], this._y0[i], this._x1[i], this._y1[i], this._cx0[i], this._cy0[i], this._cx1[i], this._cy1[i]);\n\n      points.push({\n        x0,\n        y0,\n        x1,\n        y1,\n        i\n      });\n    }\n\n    return new SpatialIndex(points);\n  }\n\n  _render(ctx, indices, {\n    sx0,\n    sy0,\n    sx1,\n    sy1,\n    scx0,\n    scy0,\n    scx1,\n    scy1\n  }) {\n    if (this.visuals.line.doit) {\n      for (const i of indices) {\n        if (isNaN(sx0[i] + sy0[i] + sx1[i] + sy1[i] + scx0[i] + scy0[i] + scx1[i] + scy1[i])) continue;\n        ctx.beginPath();\n        ctx.moveTo(sx0[i], sy0[i]);\n        ctx.bezierCurveTo(scx0[i], scy0[i], scx1[i], scy1[i], sx1[i], sy1[i]);\n        this.visuals.line.set_vectorize(ctx, i);\n        ctx.stroke();\n      }\n    }\n  }\n\n  draw_legend_for_index(ctx, bbox, index) {\n    generic_line_legend(this.visuals, ctx, bbox, index);\n  }\n\n  scenterx() {\n    throw new Error(\"not implemented\");\n  }\n\n  scentery() {\n    throw new Error(\"not implemented\");\n  }\n\n}\nBezierView.__name__ = \"BezierView\";\nexport class Bezier extends Glyph {\n  constructor(attrs) {\n    super(attrs);\n  }\n\n  static init_Bezier() {\n    this.prototype.default_view = BezierView;\n    this.coords([['x0', 'y0'], ['x1', 'y1'], ['cx0', 'cy0'], ['cx1', 'cy1']]);\n    this.mixins(['line']);\n  }\n\n}\nBezier.__name__ = \"Bezier\";\nBezier.init_Bezier();","map":{"version":3,"sources":["/Users/gen/Desktop/defund_to_refund/node_modules/@bokeh/bokehjs/build/js/lib/models/glyphs/bezier.js"],"names":["SpatialIndex","Glyph","GlyphView","generic_line_legend","_cbb","x0","y0","x1","y1","x2","y2","x3","y3","tvalues","bounds","i","a","b","c","Math","abs","t","push","b2ac","sqrtb2ac","sqrt","t1","t2","j","length","jlen","mt","x","y","min","max","BezierView","_index_data","points","end","_x0","isNaN","_x1","_y0","_y1","_cx0","_cy0","_cx1","_cy1","_render","ctx","indices","sx0","sy0","sx1","sy1","scx0","scy0","scx1","scy1","visuals","line","doit","beginPath","moveTo","bezierCurveTo","set_vectorize","stroke","draw_legend_for_index","bbox","index","scenterx","Error","scentery","__name__","Bezier","constructor","attrs","init_Bezier","prototype","default_view","coords","mixins"],"mappings":"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","sourcesContent":["import { SpatialIndex } from \"../../core/util/spatial\";\nimport { Glyph, GlyphView } from \"./glyph\";\nimport { generic_line_legend } from \"./utils\";\n// algorithm adapted from http://stackoverflow.com/a/14429749/3406693\nfunction _cbb(x0, y0, x1, y1, x2, y2, x3, y3) {\n    const tvalues = [];\n    const bounds = [[], []];\n    for (let i = 0; i <= 2; i++) {\n        let a, b, c;\n        if (i === 0) {\n            b = ((6 * x0) - (12 * x1)) + (6 * x2);\n            a = (((-3 * x0) + (9 * x1)) - (9 * x2)) + (3 * x3);\n            c = (3 * x1) - (3 * x0);\n        }\n        else {\n            b = ((6 * y0) - (12 * y1)) + (6 * y2);\n            a = (((-3 * y0) + (9 * y1)) - (9 * y2)) + (3 * y3);\n            c = (3 * y1) - (3 * y0);\n        }\n        if (Math.abs(a) < 1e-12) { // Numerical robustness\n            if (Math.abs(b) < 1e-12) // Numerical robustness\n                continue;\n            const t = -c / b;\n            if (0 < t && t < 1)\n                tvalues.push(t);\n            continue;\n        }\n        const b2ac = (b * b) - (4 * c * a);\n        const sqrtb2ac = Math.sqrt(b2ac);\n        if (b2ac < 0)\n            continue;\n        const t1 = (-b + sqrtb2ac) / (2 * a);\n        if (0 < t1 && t1 < 1)\n            tvalues.push(t1);\n        const t2 = (-b - sqrtb2ac) / (2 * a);\n        if (0 < t2 && t2 < 1)\n            tvalues.push(t2);\n    }\n    let j = tvalues.length;\n    const jlen = j;\n    while (j--) {\n        const t = tvalues[j];\n        const mt = 1 - t;\n        const x = (mt * mt * mt * x0) + (3 * mt * mt * t * x1) + (3 * mt * t * t * x2) + (t * t * t * x3);\n        bounds[0][j] = x;\n        const y = (mt * mt * mt * y0) + (3 * mt * mt * t * y1) + (3 * mt * t * t * y2) + (t * t * t * y3);\n        bounds[1][j] = y;\n    }\n    bounds[0][jlen] = x0;\n    bounds[1][jlen] = y0;\n    bounds[0][jlen + 1] = x3;\n    bounds[1][jlen + 1] = y3;\n    return [\n        Math.min(...bounds[0]),\n        Math.max(...bounds[1]),\n        Math.max(...bounds[0]),\n        Math.min(...bounds[1]),\n    ];\n}\nexport class BezierView extends GlyphView {\n    _index_data() {\n        const points = [];\n        for (let i = 0, end = this._x0.length; i < end; i++) {\n            if (isNaN(this._x0[i] + this._x1[i] + this._y0[i] + this._y1[i] + this._cx0[i] + this._cy0[i] + this._cx1[i] + this._cy1[i]))\n                continue;\n            const [x0, y0, x1, y1] = _cbb(this._x0[i], this._y0[i], this._x1[i], this._y1[i], this._cx0[i], this._cy0[i], this._cx1[i], this._cy1[i]);\n            points.push({ x0, y0, x1, y1, i });\n        }\n        return new SpatialIndex(points);\n    }\n    _render(ctx, indices, { sx0, sy0, sx1, sy1, scx0, scy0, scx1, scy1 }) {\n        if (this.visuals.line.doit) {\n            for (const i of indices) {\n                if (isNaN(sx0[i] + sy0[i] + sx1[i] + sy1[i] + scx0[i] + scy0[i] + scx1[i] + scy1[i]))\n                    continue;\n                ctx.beginPath();\n                ctx.moveTo(sx0[i], sy0[i]);\n                ctx.bezierCurveTo(scx0[i], scy0[i], scx1[i], scy1[i], sx1[i], sy1[i]);\n                this.visuals.line.set_vectorize(ctx, i);\n                ctx.stroke();\n            }\n        }\n    }\n    draw_legend_for_index(ctx, bbox, index) {\n        generic_line_legend(this.visuals, ctx, bbox, index);\n    }\n    scenterx() {\n        throw new Error(\"not implemented\");\n    }\n    scentery() {\n        throw new Error(\"not implemented\");\n    }\n}\nBezierView.__name__ = \"BezierView\";\nexport class Bezier extends Glyph {\n    constructor(attrs) {\n        super(attrs);\n    }\n    static init_Bezier() {\n        this.prototype.default_view = BezierView;\n        this.coords([['x0', 'y0'], ['x1', 'y1'], ['cx0', 'cy0'], ['cx1', 'cy1']]);\n        this.mixins(['line']);\n    }\n}\nBezier.__name__ = \"Bezier\";\nBezier.init_Bezier();\n//# sourceMappingURL=bezier.js.map"]},"metadata":{},"sourceType":"module"}