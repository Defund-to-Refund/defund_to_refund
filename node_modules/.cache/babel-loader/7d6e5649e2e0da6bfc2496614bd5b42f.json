{"ast":null,"code":"import { Callback } from \"./callback\";\nimport { replace_placeholders } from \"../../core/util/templating\";\nimport * as p from \"../../core/properties\";\nexport class OpenURL extends Callback {\n  constructor(attrs) {\n    super(attrs);\n  }\n\n  static init_OpenURL() {\n    this.define({\n      url: [p.String, 'http://'],\n      same_tab: [p.Boolean, false]\n    });\n  }\n\n  execute(_cb_obj, {\n    source\n  }) {\n    const open_url = i => {\n      const url = replace_placeholders(this.url, source, i);\n      if (this.same_tab) window.location.href = url;else window.open(url);\n    };\n\n    const {\n      selected\n    } = source;\n\n    for (const i of selected.indices) open_url(i);\n\n    for (const i of selected.line_indices) open_url(i); // TODO: multiline_indices: {[key: string]: number[]}\n\n  }\n\n}\nOpenURL.__name__ = \"OpenURL\";\nOpenURL.init_OpenURL();","map":{"version":3,"sources":["/Users/gen/Desktop/defund_to_refund/node_modules/@bokeh/bokehjs/build/js/lib/models/callbacks/open_url.js"],"names":["Callback","replace_placeholders","p","OpenURL","constructor","attrs","init_OpenURL","define","url","String","same_tab","Boolean","execute","_cb_obj","source","open_url","i","window","location","href","open","selected","indices","line_indices","__name__"],"mappings":"AAAA,SAASA,QAAT,QAAyB,YAAzB;AACA,SAASC,oBAAT,QAAqC,4BAArC;AACA,OAAO,KAAKC,CAAZ,MAAmB,uBAAnB;AACA,OAAO,MAAMC,OAAN,SAAsBH,QAAtB,CAA+B;AAClCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACH;;AACD,SAAOC,YAAP,GAAsB;AAClB,SAAKC,MAAL,CAAY;AACRC,MAAAA,GAAG,EAAE,CAACN,CAAC,CAACO,MAAH,EAAW,SAAX,CADG;AAERC,MAAAA,QAAQ,EAAE,CAACR,CAAC,CAACS,OAAH,EAAY,KAAZ;AAFF,KAAZ;AAIH;;AACDC,EAAAA,OAAO,CAACC,OAAD,EAAU;AAAEC,IAAAA;AAAF,GAAV,EAAsB;AACzB,UAAMC,QAAQ,GAAIC,CAAD,IAAO;AACpB,YAAMR,GAAG,GAAGP,oBAAoB,CAAC,KAAKO,GAAN,EAAWM,MAAX,EAAmBE,CAAnB,CAAhC;AACA,UAAI,KAAKN,QAAT,EACIO,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuBX,GAAvB,CADJ,KAGIS,MAAM,CAACG,IAAP,CAAYZ,GAAZ;AACP,KAND;;AAOA,UAAM;AAAEa,MAAAA;AAAF,QAAeP,MAArB;;AACA,SAAK,MAAME,CAAX,IAAgBK,QAAQ,CAACC,OAAzB,EACIP,QAAQ,CAACC,CAAD,CAAR;;AACJ,SAAK,MAAMA,CAAX,IAAgBK,QAAQ,CAACE,YAAzB,EACIR,QAAQ,CAACC,CAAD,CAAR,CAZqB,CAazB;;AACH;;AAxBiC;AA0BtCb,OAAO,CAACqB,QAAR,GAAmB,SAAnB;AACArB,OAAO,CAACG,YAAR","sourcesContent":["import { Callback } from \"./callback\";\nimport { replace_placeholders } from \"../../core/util/templating\";\nimport * as p from \"../../core/properties\";\nexport class OpenURL extends Callback {\n    constructor(attrs) {\n        super(attrs);\n    }\n    static init_OpenURL() {\n        this.define({\n            url: [p.String, 'http://'],\n            same_tab: [p.Boolean, false],\n        });\n    }\n    execute(_cb_obj, { source }) {\n        const open_url = (i) => {\n            const url = replace_placeholders(this.url, source, i);\n            if (this.same_tab)\n                window.location.href = url;\n            else\n                window.open(url);\n        };\n        const { selected } = source;\n        for (const i of selected.indices)\n            open_url(i);\n        for (const i of selected.line_indices)\n            open_url(i);\n        // TODO: multiline_indices: {[key: string]: number[]}\n    }\n}\nOpenURL.__name__ = \"OpenURL\";\nOpenURL.init_OpenURL();\n//# sourceMappingURL=open_url.js.map"]},"metadata":{},"sourceType":"module"}