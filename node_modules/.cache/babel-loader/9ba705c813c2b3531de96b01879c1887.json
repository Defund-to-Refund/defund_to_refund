{"ast":null,"code":"import { clamp } from \"./math\"; // Module for zoom-related functions\n\nexport function scale_highlow(range, factor, center) {\n  const [low, high] = [range.start, range.end];\n  const x = center != null ? center : (high + low) / 2.0;\n  const x0 = low - (low - x) * factor;\n  const x1 = high - (high - x) * factor;\n  return [x0, x1];\n}\nexport function get_info(scales, [sxy0, sxy1]) {\n  const info = {};\n\n  for (const name in scales) {\n    const scale = scales[name];\n    const [start, end] = scale.r_invert(sxy0, sxy1);\n    info[name] = {\n      start,\n      end\n    };\n  }\n\n  return info;\n}\nexport function scale_range(frame, factor, h_axis = true, v_axis = true, center) {\n  /*\n   * Utility function for zoom tools to calculate/create the zoom_info object\n   * of the form required by ``PlotView.update_range``\n   *\n   * Parameters:\n   *   frame : CartesianFrame\n   *   factor : Number\n   *   h_axis : Boolean, optional\n   *     whether to zoom the horizontal axis (default = true)\n   *   v_axis : Boolean, optional\n   *     whether to zoom the horizontal axis (default = true)\n   *   center : object, optional\n   *     of form {'x': Number, 'y', Number}\n   *\n   * Returns:\n   *   object:\n   */\n  // clamp the  magnitude of factor, if it is > 1 bad things happen\n  factor = clamp(factor, -0.9, 0.9);\n  const hfactor = h_axis ? factor : 0;\n  const [sx0, sx1] = scale_highlow(frame.bbox.h_range, hfactor, center != null ? center.x : undefined);\n  const xrs = get_info(frame.xscales, [sx0, sx1]);\n  const vfactor = v_axis ? factor : 0;\n  const [sy0, sy1] = scale_highlow(frame.bbox.v_range, vfactor, center != null ? center.y : undefined);\n  const yrs = get_info(frame.yscales, [sy0, sy1]); // OK this sucks we can't set factor independently in each direction. It is used\n  // for GMap plots, and GMap plots always preserve aspect, so effective the value\n  // of 'dimensions' is ignored.\n\n  return {\n    xrs,\n    yrs,\n    factor\n  };\n}","map":{"version":3,"sources":["/Users/gen/Desktop/defund_to_refund/node_modules/@bokeh/bokehjs/build/js/lib/core/util/zoom.js"],"names":["clamp","scale_highlow","range","factor","center","low","high","start","end","x","x0","x1","get_info","scales","sxy0","sxy1","info","name","scale","r_invert","scale_range","frame","h_axis","v_axis","hfactor","sx0","sx1","bbox","h_range","undefined","xrs","xscales","vfactor","sy0","sy1","v_range","y","yrs","yscales"],"mappings":"AAAA,SAASA,KAAT,QAAsB,QAAtB,C,CACA;;AACA,OAAO,SAASC,aAAT,CAAuBC,KAAvB,EAA8BC,MAA9B,EAAsCC,MAAtC,EAA8C;AACjD,QAAM,CAACC,GAAD,EAAMC,IAAN,IAAc,CAACJ,KAAK,CAACK,KAAP,EAAcL,KAAK,CAACM,GAApB,CAApB;AACA,QAAMC,CAAC,GAAGL,MAAM,IAAI,IAAV,GAAiBA,MAAjB,GAA0B,CAACE,IAAI,GAAGD,GAAR,IAAe,GAAnD;AACA,QAAMK,EAAE,GAAGL,GAAG,GAAG,CAACA,GAAG,GAAGI,CAAP,IAAYN,MAA7B;AACA,QAAMQ,EAAE,GAAGL,IAAI,GAAG,CAACA,IAAI,GAAGG,CAAR,IAAaN,MAA/B;AACA,SAAO,CAACO,EAAD,EAAKC,EAAL,CAAP;AACH;AACD,OAAO,SAASC,QAAT,CAAkBC,MAAlB,EAA0B,CAACC,IAAD,EAAOC,IAAP,CAA1B,EAAwC;AAC3C,QAAMC,IAAI,GAAG,EAAb;;AACA,OAAK,MAAMC,IAAX,IAAmBJ,MAAnB,EAA2B;AACvB,UAAMK,KAAK,GAAGL,MAAM,CAACI,IAAD,CAApB;AACA,UAAM,CAACV,KAAD,EAAQC,GAAR,IAAeU,KAAK,CAACC,QAAN,CAAeL,IAAf,EAAqBC,IAArB,CAArB;AACAC,IAAAA,IAAI,CAACC,IAAD,CAAJ,GAAa;AAAEV,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAAb;AACH;;AACD,SAAOQ,IAAP;AACH;AACD,OAAO,SAASI,WAAT,CAAqBC,KAArB,EAA4BlB,MAA5B,EAAoCmB,MAAM,GAAG,IAA7C,EAAmDC,MAAM,GAAG,IAA5D,EAAkEnB,MAAlE,EAA0E;AAC7E;;;;;;;;;;;;;;;;;AAiBA;AACAD,EAAAA,MAAM,GAAGH,KAAK,CAACG,MAAD,EAAS,CAAC,GAAV,EAAe,GAAf,CAAd;AACA,QAAMqB,OAAO,GAAGF,MAAM,GAAGnB,MAAH,GAAY,CAAlC;AACA,QAAM,CAACsB,GAAD,EAAMC,GAAN,IAAazB,aAAa,CAACoB,KAAK,CAACM,IAAN,CAAWC,OAAZ,EAAqBJ,OAArB,EAA8BpB,MAAM,IAAI,IAAV,GAAiBA,MAAM,CAACK,CAAxB,GAA4BoB,SAA1D,CAAhC;AACA,QAAMC,GAAG,GAAGlB,QAAQ,CAACS,KAAK,CAACU,OAAP,EAAgB,CAACN,GAAD,EAAMC,GAAN,CAAhB,CAApB;AACA,QAAMM,OAAO,GAAGT,MAAM,GAAGpB,MAAH,GAAY,CAAlC;AACA,QAAM,CAAC8B,GAAD,EAAMC,GAAN,IAAajC,aAAa,CAACoB,KAAK,CAACM,IAAN,CAAWQ,OAAZ,EAAqBH,OAArB,EAA8B5B,MAAM,IAAI,IAAV,GAAiBA,MAAM,CAACgC,CAAxB,GAA4BP,SAA1D,CAAhC;AACA,QAAMQ,GAAG,GAAGzB,QAAQ,CAACS,KAAK,CAACiB,OAAP,EAAgB,CAACL,GAAD,EAAMC,GAAN,CAAhB,CAApB,CAzB6E,CA0B7E;AACA;AACA;;AACA,SAAO;AAAEJ,IAAAA,GAAF;AAAOO,IAAAA,GAAP;AAAYlC,IAAAA;AAAZ,GAAP;AACH","sourcesContent":["import { clamp } from \"./math\";\n// Module for zoom-related functions\nexport function scale_highlow(range, factor, center) {\n    const [low, high] = [range.start, range.end];\n    const x = center != null ? center : (high + low) / 2.0;\n    const x0 = low - (low - x) * factor;\n    const x1 = high - (high - x) * factor;\n    return [x0, x1];\n}\nexport function get_info(scales, [sxy0, sxy1]) {\n    const info = {};\n    for (const name in scales) {\n        const scale = scales[name];\n        const [start, end] = scale.r_invert(sxy0, sxy1);\n        info[name] = { start, end };\n    }\n    return info;\n}\nexport function scale_range(frame, factor, h_axis = true, v_axis = true, center) {\n    /*\n     * Utility function for zoom tools to calculate/create the zoom_info object\n     * of the form required by ``PlotView.update_range``\n     *\n     * Parameters:\n     *   frame : CartesianFrame\n     *   factor : Number\n     *   h_axis : Boolean, optional\n     *     whether to zoom the horizontal axis (default = true)\n     *   v_axis : Boolean, optional\n     *     whether to zoom the horizontal axis (default = true)\n     *   center : object, optional\n     *     of form {'x': Number, 'y', Number}\n     *\n     * Returns:\n     *   object:\n     */\n    // clamp the  magnitude of factor, if it is > 1 bad things happen\n    factor = clamp(factor, -0.9, 0.9);\n    const hfactor = h_axis ? factor : 0;\n    const [sx0, sx1] = scale_highlow(frame.bbox.h_range, hfactor, center != null ? center.x : undefined);\n    const xrs = get_info(frame.xscales, [sx0, sx1]);\n    const vfactor = v_axis ? factor : 0;\n    const [sy0, sy1] = scale_highlow(frame.bbox.v_range, vfactor, center != null ? center.y : undefined);\n    const yrs = get_info(frame.yscales, [sy0, sy1]);\n    // OK this sucks we can't set factor independently in each direction. It is used\n    // for GMap plots, and GMap plots always preserve aspect, so effective the value\n    // of 'dimensions' is ignored.\n    return { xrs, yrs, factor };\n}\n//# sourceMappingURL=zoom.js.map"]},"metadata":{},"sourceType":"module"}