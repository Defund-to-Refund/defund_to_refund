{"ast":null,"code":"/*!\n * jquery.event.drag - v 2.3.0\n * Copyright (c) 2010 Three Dub Media - http://threedubmedia.com\n * Open Source MIT License - http://threedubmedia.com/code/license\n */\n// Created: 2008-06-04\n// Updated: 2012-05-21\n// Updated: 2016-08-16   Luiz Gonzaga dos Santos Filho\n// REQUIRES: jquery 1.8 +, , event.drag 2.3.0\n// TESTED WITH: jQuery 1.8.3, 1.11.2, 2.2.4, and 3.1.0\nvar $ = require(\"../slick.jquery\"); // add the jquery instance method\n\n\n$.fn.drag = function (str, arg, opts) {\n  // figure out the event type\n  var type = typeof str == \"string\" ? str : \"\",\n      // figure out the event handler...\n  fn = $.isFunction(str) ? str : $.isFunction(arg) ? arg : null; // fix the event type\n\n  if (type.indexOf(\"drag\") !== 0) type = \"drag\" + type; // were options passed\n\n  opts = (str == fn ? arg : opts) || {}; // trigger or bind event handler\n\n  return fn ? this.on(type, opts, fn) : this.trigger(type);\n}; // local refs (increase compression)\n\n\nvar $event = $.event,\n    $special = $event.special,\n    // configure the drag special event\ndrag = $special.drag = {\n  // these are the default settings\n  defaults: {\n    which: 1,\n    // mouse button pressed to start drag sequence\n    distance: 0,\n    // distance dragged before dragstart\n    not: ':input',\n    // selector to suppress dragging on target elements\n    handle: null,\n    // selector to match handle target elements\n    relative: false,\n    // true to use \"position\", false to use \"offset\"\n    drop: true,\n    // false to suppress drop events, true or selector to allow\n    click: false // false to suppress click events after dragend (no proxy)\n\n  },\n  // the key name for stored drag data\n  datakey: \"dragdata\",\n  // prevent bubbling for better performance\n  noBubble: true,\n  // count bound related events\n  add: function (obj) {\n    // read the interaction data\n    var data = $.data(this, drag.datakey),\n        // read any passed options\n    opts = obj.data || {}; // count another realted event\n\n    data.related += 1; // extend data options bound with this event\n    // don't iterate \"opts\" in case it is a node\n\n    $.each(drag.defaults, function (key, def) {\n      if (opts[key] !== undefined) data[key] = opts[key];\n    });\n  },\n  // forget unbound related events\n  remove: function () {\n    $.data(this, drag.datakey).related -= 1;\n  },\n  // configure interaction, capture settings\n  setup: function () {\n    // check for related events\n    if ($.data(this, drag.datakey)) return; // initialize the drag data with copied defaults\n\n    var data = $.extend({\n      related: 0\n    }, drag.defaults); // store the interaction data\n\n    $.data(this, drag.datakey, data); // bind the mousedown event, which starts drag interactions\n\n    $event.add(this, \"touchstart mousedown\", drag.init, data); // prevent image dragging in IE...\n\n    if (this.attachEvent) this.attachEvent(\"ondragstart\", drag.dontstart);\n  },\n  // destroy configured interaction\n  teardown: function () {\n    var data = $.data(this, drag.datakey) || {}; // check for related events\n\n    if (data.related) return; // remove the stored data\n\n    $.removeData(this, drag.datakey); // remove the mousedown event\n\n    $event.remove(this, \"touchstart mousedown\", drag.init); // enable text selection\n\n    drag.textselect(true); // un-prevent image dragging in IE...\n\n    if (this.detachEvent) this.detachEvent(\"ondragstart\", drag.dontstart);\n  },\n  // initialize the interaction\n  init: function (event) {\n    // sorry, only one touch at a time\n    if (drag.touched) return; // the drag/drop interaction data\n\n    var dd = event.data,\n        results; // check the which directive\n\n    if (event.which != 0 && dd.which > 0 && event.which != dd.which) return; // check for suppressed selector\n\n    if ($(event.target).is(dd.not)) return; // check for handle selector\n\n    if (dd.handle && !$(event.target).closest(dd.handle, event.currentTarget).length) return;\n    drag.touched = event.type == 'touchstart' ? this : null;\n    dd.propagates = 1;\n    dd.mousedown = this;\n    dd.interactions = [drag.interaction(this, dd)];\n    dd.target = event.target;\n    dd.pageX = event.pageX;\n    dd.pageY = event.pageY;\n    dd.dragging = null; // handle draginit event...\n\n    results = drag.hijack(event, \"draginit\", dd); // early cancel\n\n    if (!dd.propagates) return; // flatten the result set\n\n    results = drag.flatten(results); // insert new interaction elements\n\n    if (results && results.length) {\n      dd.interactions = [];\n      $.each(results, function () {\n        dd.interactions.push(drag.interaction(this, dd));\n      });\n    } // remember how many interactions are propagating\n\n\n    dd.propagates = dd.interactions.length; // locate and init the drop targets\n\n    if (dd.drop !== false && $special.drop) $special.drop.handler(event, dd); // disable text selection\n\n    drag.textselect(false); // bind additional events...\n\n    if (drag.touched) $event.add(drag.touched, \"touchmove touchend\", drag.handler, dd);else $event.add(document, \"mousemove mouseup\", drag.handler, dd); // helps prevent text selection or scrolling\n\n    if (!drag.touched || dd.live) return false;\n  },\n  // returns an interaction object\n  interaction: function (elem, dd) {\n    var offset = elem && elem.ownerDocument ? $(elem)[dd.relative ? \"position\" : \"offset\"]() || {\n      top: 0,\n      left: 0\n    } : {\n      top: 0,\n      left: 0\n    };\n    return {\n      drag: elem,\n      callback: new drag.callback(),\n      droppable: [],\n      offset: offset\n    };\n  },\n  // handle drag-releatd DOM events\n  handler: function (event) {\n    // read the data before hijacking anything\n    var dd = event.data; // handle various events\n\n    switch (event.type) {\n      // mousemove, check distance, start dragging\n      case !dd.dragging && 'touchmove':\n        event.preventDefault();\n\n      case !dd.dragging && 'mousemove':\n        //  drag tolerance, x² + y² = distance²\n        if (Math.pow(event.pageX - dd.pageX, 2) + Math.pow(event.pageY - dd.pageY, 2) < Math.pow(dd.distance, 2)) break; // distance tolerance not reached\n\n        event.target = dd.target; // force target from \"mousedown\" event (fix distance issue)\n\n        drag.hijack(event, \"dragstart\", dd); // trigger \"dragstart\"\n\n        if (dd.propagates) // \"dragstart\" not rejected\n          dd.dragging = true;\n      // activate interaction\n      // mousemove, dragging\n\n      case 'touchmove':\n        event.preventDefault();\n\n      case 'mousemove':\n        if (dd.dragging) {\n          // trigger \"drag\"\n          drag.hijack(event, \"drag\", dd);\n\n          if (dd.propagates) {\n            // manage drop events\n            if (dd.drop !== false && $special.drop) $special.drop.handler(event, dd); // \"dropstart\", \"dropend\"\n\n            break; // \"drag\" not rejected, stop\n          }\n\n          event.type = \"mouseup\"; // helps \"drop\" handler behave\n        }\n\n      // mouseup, stop dragging\n\n      case 'touchend':\n      case 'mouseup':\n      default:\n        if (drag.touched) $event.remove(drag.touched, \"touchmove touchend\", drag.handler); // remove touch events\n        else $event.remove(document, \"mousemove mouseup\", drag.handler); // remove page events\n\n        if (dd.dragging) {\n          if (dd.drop !== false && $special.drop) $special.drop.handler(event, dd); // \"drop\"\n\n          drag.hijack(event, \"dragend\", dd); // trigger \"dragend\"\n        }\n\n        drag.textselect(true); // enable text selection\n        // if suppressing click events...\n\n        if (dd.click === false && dd.dragging) $.data(dd.mousedown, \"suppress.click\", new Date().getTime() + 5);\n        dd.dragging = drag.touched = false; // deactivate element\n\n        break;\n    }\n  },\n  // re-use event object for custom events\n  hijack: function (event, type, dd, x, elem) {\n    // not configured\n    if (!dd) return; // remember the original event and type\n\n    var orig = {\n      event: event.originalEvent,\n      type: event.type\n    },\n        // is the event drag related or drog related?\n    mode = type.indexOf(\"drop\") ? \"drag\" : \"drop\",\n        // iteration vars\n    result,\n        i = x || 0,\n        ia,\n        $elems,\n        callback,\n        len = !isNaN(x) ? x : dd.interactions.length; // modify the event type\n\n    event.type = type; // protects originalEvent from side-effects\n\n    var noop = function () {};\n\n    event.originalEvent = new $.Event(orig.event, {\n      preventDefault: noop,\n      stopPropagation: noop,\n      stopImmediatePropagation: noop\n    }); // initialize the results\n\n    dd.results = []; // handle each interacted element\n\n    do if (ia = dd.interactions[i]) {\n      // validate the interaction\n      if (type !== \"dragend\" && ia.cancelled) continue; // set the dragdrop properties on the event object\n\n      callback = drag.properties(event, dd, ia); // prepare for more results\n\n      ia.results = []; // handle each element\n\n      $(elem || ia[mode] || dd.droppable).each(function (p, subject) {\n        // identify drag or drop targets individually\n        callback.target = subject; // force propagtion of the custom event\n\n        event.isPropagationStopped = function () {\n          return false;\n        }; // handle the event\n\n\n        result = subject ? $event.dispatch.call(subject, event, callback) : null; // stop the drag interaction for this element\n\n        if (result === false) {\n          if (mode == \"drag\") {\n            ia.cancelled = true;\n            dd.propagates -= 1;\n          }\n\n          if (type == \"drop\") {\n            ia[mode][p] = null;\n          }\n        } // assign any dropinit elements\n        else if (type == \"dropinit\") ia.droppable.push(drag.element(result) || subject); // accept a returned proxy element\n\n\n        if (type == \"dragstart\") ia.proxy = $(drag.element(result) || ia.drag)[0]; // remember this result\n\n        ia.results.push(result); // forget the event result, for recycling\n\n        delete event.result; // break on cancelled handler\n\n        if (type !== \"dropinit\") return result;\n      }); // flatten the results\n\n      dd.results[i] = drag.flatten(ia.results); // accept a set of valid drop targets\n\n      if (type == \"dropinit\") ia.droppable = drag.flatten(ia.droppable); // locate drop targets\n\n      if (type == \"dragstart\" && !ia.cancelled) callback.update();\n    } while (++i < len); // restore the original event & type\n\n\n    event.type = orig.type;\n    event.originalEvent = orig.event; // return all handler results\n\n    return drag.flatten(dd.results);\n  },\n  // extend the callback object with drag/drop properties...\n  properties: function (event, dd, ia) {\n    var obj = ia.callback; // elements\n\n    obj.drag = ia.drag;\n    obj.proxy = ia.proxy || ia.drag; // starting mouse position\n\n    obj.startX = dd.pageX;\n    obj.startY = dd.pageY; // current distance dragged\n\n    obj.deltaX = event.pageX - dd.pageX;\n    obj.deltaY = event.pageY - dd.pageY; // original element position\n\n    obj.originalX = ia.offset.left;\n    obj.originalY = ia.offset.top; // adjusted element position\n\n    obj.offsetX = obj.originalX + obj.deltaX;\n    obj.offsetY = obj.originalY + obj.deltaY; // assign the drop targets information\n\n    obj.drop = drag.flatten((ia.drop || []).slice());\n    obj.available = drag.flatten((ia.droppable || []).slice());\n    return obj;\n  },\n  // determine is the argument is an element or jquery instance\n  element: function (arg) {\n    if (arg && (arg.jquery || arg.nodeType == 1)) return arg;\n  },\n  // flatten nested jquery objects and arrays into a single dimension array\n  flatten: function (arr) {\n    return $.map(arr, function (member) {\n      return member && member.jquery ? $.makeArray(member) : member && member.length ? drag.flatten(member) : member;\n    });\n  },\n  // toggles text selection attributes ON (true) or OFF (false)\n  textselect: function (bool) {\n    $(document)[bool ? \"off\" : \"on\"](\"selectstart\", drag.dontstart).css(\"MozUserSelect\", bool ? \"\" : \"none\"); // .attr(\"unselectable\", bool ? \"off\" : \"on\" )\n\n    document.unselectable = bool ? \"off\" : \"on\";\n  },\n  // suppress \"selectstart\" and \"ondragstart\" events\n  dontstart: function () {\n    return false;\n  },\n  // a callback instance contructor\n  callback: function () {}\n}; // callback methods\n\ndrag.callback.prototype = {\n  update: function () {\n    if ($special.drop && this.available.length) $.each(this.available, function (i) {\n      $special.drop.locate(this, i);\n    });\n  }\n}; // patch $.event.$dispatch to allow suppressing clicks\n\nvar $dispatch = $event.dispatch;\n\n$event.dispatch = function (event) {\n  if ($.data(this, \"suppress.\" + event.type) - new Date().getTime() > 0) {\n    $.removeData(this, \"suppress.\" + event.type);\n    return;\n  }\n\n  return $dispatch.apply(this, arguments);\n}; // share the same special event configuration with related events...\n\n\n$special.draginit = $special.dragstart = $special.dragend = drag;","map":{"version":3,"sources":["/Users/gen/Desktop/defund_to_refund/node_modules/@bokeh/slickgrid/lib/jquery.event.drag-2.3.0.js"],"names":["$","require","fn","drag","str","arg","opts","type","isFunction","indexOf","on","trigger","$event","event","$special","special","defaults","which","distance","not","handle","relative","drop","click","datakey","noBubble","add","obj","data","related","each","key","def","undefined","remove","setup","extend","init","attachEvent","dontstart","teardown","removeData","textselect","detachEvent","touched","dd","results","target","is","closest","currentTarget","length","propagates","mousedown","interactions","interaction","pageX","pageY","dragging","hijack","flatten","push","handler","document","live","elem","offset","ownerDocument","top","left","callback","droppable","preventDefault","Math","pow","Date","getTime","x","orig","originalEvent","mode","result","i","ia","$elems","len","isNaN","noop","Event","stopPropagation","stopImmediatePropagation","cancelled","properties","p","subject","isPropagationStopped","dispatch","call","element","proxy","update","startX","startY","deltaX","deltaY","originalX","originalY","offsetX","offsetY","slice","available","jquery","nodeType","arr","map","member","makeArray","bool","css","unselectable","prototype","locate","$dispatch","apply","arguments","draginit","dragstart","dragend"],"mappings":"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","sourcesContent":["/*!\n * jquery.event.drag - v 2.3.0\n * Copyright (c) 2010 Three Dub Media - http://threedubmedia.com\n * Open Source MIT License - http://threedubmedia.com/code/license\n */\n// Created: 2008-06-04\n// Updated: 2012-05-21\n// Updated: 2016-08-16   Luiz Gonzaga dos Santos Filho\n// REQUIRES: jquery 1.8 +, , event.drag 2.3.0\n// TESTED WITH: jQuery 1.8.3, 1.11.2, 2.2.4, and 3.1.0\n\n    var $ = require(\"../slick.jquery\");\n\n    // add the jquery instance method\n    $.fn.drag = function( str, arg, opts ){\n        // figure out the event type\n        var type = typeof str == \"string\" ? str : \"\",\n            // figure out the event handler...\n            fn = $.isFunction( str ) ? str : $.isFunction( arg ) ? arg : null;\n        // fix the event type\n        if ( type.indexOf(\"drag\") !== 0 )\n            type = \"drag\"+ type;\n        // were options passed\n        opts = ( str == fn ? arg : opts ) || {};\n        // trigger or bind event handler\n        return fn ? this.on( type, opts, fn ) : this.trigger( type );\n    };\n\n    // local refs (increase compression)\n    var $event = $.event,\n        $special = $event.special,\n        // configure the drag special event\n        drag = $special.drag = {\n\n            // these are the default settings\n            defaults: {\n                which: 1, // mouse button pressed to start drag sequence\n                distance: 0, // distance dragged before dragstart\n                not: ':input', // selector to suppress dragging on target elements\n                handle: null, // selector to match handle target elements\n                relative: false, // true to use \"position\", false to use \"offset\"\n                drop: true, // false to suppress drop events, true or selector to allow\n                click: false // false to suppress click events after dragend (no proxy)\n            },\n\n            // the key name for stored drag data\n            datakey: \"dragdata\",\n\n            // prevent bubbling for better performance\n            noBubble: true,\n\n            // count bound related events\n            add: function( obj ){\n                // read the interaction data\n                var data = $.data( this, drag.datakey ),\n                    // read any passed options\n                    opts = obj.data || {};\n                // count another realted event\n                data.related += 1;\n                // extend data options bound with this event\n                // don't iterate \"opts\" in case it is a node\n                $.each( drag.defaults, function( key, def ){\n                    if ( opts[ key ] !== undefined )\n                        data[ key ] = opts[ key ];\n                });\n            },\n\n            // forget unbound related events\n            remove: function(){\n                $.data( this, drag.datakey ).related -= 1;\n            },\n\n            // configure interaction, capture settings\n            setup: function(){\n                // check for related events\n                if ( $.data( this, drag.datakey ) )\n                    return;\n                // initialize the drag data with copied defaults\n                var data = $.extend({ related:0 }, drag.defaults );\n                // store the interaction data\n                $.data( this, drag.datakey, data );\n                // bind the mousedown event, which starts drag interactions\n                $event.add( this, \"touchstart mousedown\", drag.init, data );\n                // prevent image dragging in IE...\n                if ( this.attachEvent )\n                    this.attachEvent(\"ondragstart\", drag.dontstart );\n            },\n\n            // destroy configured interaction\n            teardown: function(){\n                var data = $.data( this, drag.datakey ) || {};\n                // check for related events\n                if ( data.related )\n                    return;\n                // remove the stored data\n                $.removeData( this, drag.datakey );\n                // remove the mousedown event\n                $event.remove( this, \"touchstart mousedown\", drag.init );\n                // enable text selection\n                drag.textselect( true );\n                // un-prevent image dragging in IE...\n                if ( this.detachEvent )\n                    this.detachEvent(\"ondragstart\", drag.dontstart );\n            },\n\n            // initialize the interaction\n            init: function( event ){\n                // sorry, only one touch at a time\n                if ( drag.touched )\n                    return;\n                // the drag/drop interaction data\n                var dd = event.data, results;\n                // check the which directive\n                if ( event.which != 0 && dd.which > 0 && event.which != dd.which )\n                    return;\n                // check for suppressed selector\n                if ( $( event.target ).is( dd.not ) )\n                    return;\n                // check for handle selector\n                if ( dd.handle && !$( event.target ).closest( dd.handle, event.currentTarget ).length )\n                    return;\n\n                drag.touched = event.type == 'touchstart' ? this : null;\n                dd.propagates = 1;\n                dd.mousedown = this;\n                dd.interactions = [ drag.interaction( this, dd ) ];\n                dd.target = event.target;\n                dd.pageX = event.pageX;\n                dd.pageY = event.pageY;\n                dd.dragging = null;\n                // handle draginit event...\n                results = drag.hijack( event, \"draginit\", dd );\n                // early cancel\n                if ( !dd.propagates )\n                    return;\n                // flatten the result set\n                results = drag.flatten( results );\n                // insert new interaction elements\n                if ( results && results.length ){\n                    dd.interactions = [];\n                    $.each( results, function(){\n                        dd.interactions.push( drag.interaction( this, dd ) );\n                    });\n                }\n                // remember how many interactions are propagating\n                dd.propagates = dd.interactions.length;\n                // locate and init the drop targets\n                if ( dd.drop !== false && $special.drop )\n                    $special.drop.handler( event, dd );\n                // disable text selection\n                drag.textselect( false );\n                // bind additional events...\n                if ( drag.touched )\n                    $event.add( drag.touched, \"touchmove touchend\", drag.handler, dd );\n                else\n                    $event.add( document, \"mousemove mouseup\", drag.handler, dd );\n                // helps prevent text selection or scrolling\n                if ( !drag.touched || dd.live )\n                    return false;\n            },\n\n            // returns an interaction object\n            interaction: function( elem, dd ){\n                var offset = (elem && elem.ownerDocument) \n                    ? $( elem )[ dd.relative ? \"position\" : \"offset\" ]() || { top:0, left:0 }\n                    : { top: 0, left: 0 };\n                return {\n                    drag: elem,\n                    callback: new drag.callback(),\n                    droppable: [],\n                    offset: offset\n                };\n            },\n\n            // handle drag-releatd DOM events\n            handler: function( event ){\n                // read the data before hijacking anything\n                var dd = event.data;\n                // handle various events\n                switch ( event.type ){\n                    // mousemove, check distance, start dragging\n                    case !dd.dragging && 'touchmove':\n                        event.preventDefault();\n                    case !dd.dragging && 'mousemove':\n                        //  drag tolerance, x² + y² = distance²\n                        if ( Math.pow(  event.pageX-dd.pageX, 2 ) + Math.pow(  event.pageY-dd.pageY, 2 ) < Math.pow( dd.distance, 2 ) )\n                            break; // distance tolerance not reached\n                        event.target = dd.target; // force target from \"mousedown\" event (fix distance issue)\n                        drag.hijack( event, \"dragstart\", dd ); // trigger \"dragstart\"\n                        if ( dd.propagates ) // \"dragstart\" not rejected\n                            dd.dragging = true; // activate interaction\n                        // mousemove, dragging\n                    case 'touchmove':\n                        event.preventDefault();\n                    case 'mousemove':\n                        if ( dd.dragging ){\n                            // trigger \"drag\"\n                            drag.hijack( event, \"drag\", dd );\n                            if ( dd.propagates ){\n                                // manage drop events\n                                if ( dd.drop !== false && $special.drop )\n                                    $special.drop.handler( event, dd ); // \"dropstart\", \"dropend\"\n                                break; // \"drag\" not rejected, stop\n                            }\n                            event.type = \"mouseup\"; // helps \"drop\" handler behave\n                        }\n                        // mouseup, stop dragging\n                    case 'touchend':\n                    case 'mouseup':\n                    default:\n                        if ( drag.touched )\n                            $event.remove( drag.touched, \"touchmove touchend\", drag.handler ); // remove touch events\n                        else\n                            $event.remove( document, \"mousemove mouseup\", drag.handler ); // remove page events\n                        if ( dd.dragging ){\n                            if ( dd.drop !== false && $special.drop )\n                                $special.drop.handler( event, dd ); // \"drop\"\n                            drag.hijack( event, \"dragend\", dd ); // trigger \"dragend\"\n                        }\n                        drag.textselect( true ); // enable text selection\n                        // if suppressing click events...\n                        if ( dd.click === false && dd.dragging )\n                            $.data( dd.mousedown, \"suppress.click\", new Date().getTime() + 5 );\n                        dd.dragging = drag.touched = false; // deactivate element\n                        break;\n                }\n            },\n\n            // re-use event object for custom events\n            hijack: function( event, type, dd, x, elem ){\n                // not configured\n                if ( !dd )\n                    return;\n                // remember the original event and type\n                var orig = { event:event.originalEvent, type:event.type },\n                    // is the event drag related or drog related?\n                    mode = type.indexOf(\"drop\") ? \"drag\" : \"drop\",\n                    // iteration vars\n                    result, i = x || 0, ia, $elems, callback,\n                    len = !isNaN( x ) ? x : dd.interactions.length;\n                // modify the event type\n                event.type = type;\n                // protects originalEvent from side-effects\n                var noop = function(){};\n                event.originalEvent = new $.Event(orig.event, {\n                    preventDefault: noop,\n                    stopPropagation: noop,\n                    stopImmediatePropagation: noop\n                });\n                // initialize the results\n                dd.results = [];\n                // handle each interacted element\n                do if ( ia = dd.interactions[ i ] ){\n                    // validate the interaction\n                    if ( type !== \"dragend\" && ia.cancelled )\n                        continue;\n                    // set the dragdrop properties on the event object\n                    callback = drag.properties( event, dd, ia );\n                    // prepare for more results\n                    ia.results = [];\n                    // handle each element\n                    $( elem || ia[ mode ] || dd.droppable ).each(function( p, subject ){\n                        // identify drag or drop targets individually\n                        callback.target = subject;\n                        // force propagtion of the custom event\n                        event.isPropagationStopped = function(){ return false; };\n                        // handle the event\n                        result = subject ? $event.dispatch.call( subject, event, callback ) : null;\n                        // stop the drag interaction for this element\n                        if ( result === false ){\n                            if ( mode == \"drag\" ){\n                                ia.cancelled = true;\n                                dd.propagates -= 1;\n                            }\n                            if ( type == \"drop\" ){\n                                ia[ mode ][p] = null;\n                            }\n                        }\n                        // assign any dropinit elements\n                        else if ( type == \"dropinit\" )\n                            ia.droppable.push( drag.element( result ) || subject );\n                        // accept a returned proxy element\n                        if ( type == \"dragstart\" )\n                            ia.proxy = $( drag.element( result ) || ia.drag )[0];\n                        // remember this result\n                        ia.results.push( result );\n                        // forget the event result, for recycling\n                        delete event.result;\n                        // break on cancelled handler\n                        if ( type !== \"dropinit\" )\n                            return result;\n                    });\n                    // flatten the results\n                    dd.results[ i ] = drag.flatten( ia.results );\n                    // accept a set of valid drop targets\n                    if ( type == \"dropinit\" )\n                        ia.droppable = drag.flatten( ia.droppable );\n                    // locate drop targets\n                    if ( type == \"dragstart\" && !ia.cancelled )\n                        callback.update();\n                }\n                while ( ++i < len )\n                    // restore the original event & type\n                    event.type = orig.type;\n                    event.originalEvent = orig.event;\n                    // return all handler results\n                    return drag.flatten( dd.results );\n            },\n\n            // extend the callback object with drag/drop properties...\n            properties: function( event, dd, ia ){\n                var obj = ia.callback;\n                // elements\n                obj.drag = ia.drag;\n                obj.proxy = ia.proxy || ia.drag;\n                // starting mouse position\n                obj.startX = dd.pageX;\n                obj.startY = dd.pageY;\n                // current distance dragged\n                obj.deltaX = event.pageX - dd.pageX;\n                obj.deltaY = event.pageY - dd.pageY;\n                // original element position\n                obj.originalX = ia.offset.left;\n                obj.originalY = ia.offset.top;\n                // adjusted element position\n                obj.offsetX = obj.originalX + obj.deltaX;\n                obj.offsetY = obj.originalY + obj.deltaY;\n                // assign the drop targets information\n                obj.drop = drag.flatten( ( ia.drop || [] ).slice() );\n                obj.available = drag.flatten( ( ia.droppable || [] ).slice() );\n                return obj;\n            },\n\n            // determine is the argument is an element or jquery instance\n            element: function( arg ){\n                if ( arg && ( arg.jquery || arg.nodeType == 1 ) )\n                    return arg;\n            },\n\n            // flatten nested jquery objects and arrays into a single dimension array\n            flatten: function( arr ){\n                return $.map( arr, function( member ){\n                    return member && member.jquery ? $.makeArray( member ) :\n                        member && member.length ? drag.flatten( member ) : member;\n                });\n            },\n\n            // toggles text selection attributes ON (true) or OFF (false)\n            textselect: function( bool ){\n                $( document )[ bool ? \"off\" : \"on\" ](\"selectstart\", drag.dontstart )\n                    .css(\"MozUserSelect\", bool ? \"\" : \"none\" );\n                // .attr(\"unselectable\", bool ? \"off\" : \"on\" )\n                document.unselectable = bool ? \"off\" : \"on\";\n            },\n\n            // suppress \"selectstart\" and \"ondragstart\" events\n            dontstart: function(){\n                return false;\n            },\n\n            // a callback instance contructor\n            callback: function(){}\n\n        };\n\n        // callback methods\n        drag.callback.prototype = {\n            update: function(){\n                if ( $special.drop && this.available.length )\n                    $.each( this.available, function( i ){\n                        $special.drop.locate( this, i );\n                    });\n            }\n        };\n\n        // patch $.event.$dispatch to allow suppressing clicks\n        var $dispatch = $event.dispatch;\n        $event.dispatch = function( event ){\n            if ( $.data( this, \"suppress.\"+ event.type ) - new Date().getTime() > 0 ){\n                $.removeData( this, \"suppress.\"+ event.type );\n                return;\n            }\n            return $dispatch.apply( this, arguments );\n        };\n\n        // share the same special event configuration with related events...\n        $special.draginit = $special.dragstart = $special.dragend = drag;\n"]},"metadata":{},"sourceType":"script"}