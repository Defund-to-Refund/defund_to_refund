{"ast":null,"code":"import { Area, AreaView } from \"./area\";\nimport { SpatialIndex } from \"../../core/util/spatial\";\nimport * as hittest from \"../../core/hittest\";\nimport * as p from \"../../core/properties\";\nexport class VAreaView extends AreaView {\n  _index_data() {\n    const points = [];\n\n    for (let i = 0, end = this._x.length; i < end; i++) {\n      const x = this._x[i];\n      const y1 = this._y1[i];\n      const y2 = this._y2[i];\n      if (isNaN(x + y1 + y2) || !isFinite(x + y1 + y2)) continue;\n      points.push({\n        x0: x,\n        y0: Math.min(y1, y2),\n        x1: x,\n        y1: Math.max(y1, y2),\n        i\n      });\n    }\n\n    return new SpatialIndex(points);\n  }\n\n  _inner(ctx, sx, sy1, sy2, func) {\n    ctx.beginPath();\n\n    for (let i = 0, end = sy1.length; i < end; i++) {\n      ctx.lineTo(sx[i], sy1[i]);\n    } // iterate backwards so that the upper end is below the lower start\n\n\n    for (let i = sy2.length - 1; i >= 0; i--) {\n      ctx.lineTo(sx[i], sy2[i]);\n    }\n\n    ctx.closePath();\n    func.call(ctx);\n  }\n\n  _render(ctx, _indices, {\n    sx,\n    sy1,\n    sy2\n  }) {\n    if (this.visuals.fill.doit) {\n      this.visuals.fill.set_value(ctx);\n\n      this._inner(ctx, sx, sy1, sy2, ctx.fill);\n    }\n\n    this.visuals.hatch.doit2(ctx, 0, () => this._inner(ctx, sx, sy1, sy2, ctx.fill), () => this.renderer.request_render());\n  }\n\n  scenterx(i) {\n    return this.sx[i];\n  }\n\n  scentery(i) {\n    return (this.sy1[i] + this.sy2[i]) / 2;\n  }\n\n  _hit_point(geometry) {\n    const result = hittest.create_empty_hit_test_result();\n    const L = this.sx.length;\n    const sx = new Float64Array(2 * L);\n    const sy = new Float64Array(2 * L);\n\n    for (let i = 0, end = L; i < end; i++) {\n      sx[i] = this.sx[i];\n      sy[i] = this.sy1[i];\n      sx[L + i] = this.sx[L - i - 1];\n      sy[L + i] = this.sy2[L - i - 1];\n    }\n\n    if (hittest.point_in_poly(geometry.sx, geometry.sy, sx, sy)) {\n      result.add_to_selected_glyphs(this.model);\n\n      result.get_view = () => this;\n    }\n\n    return result;\n  }\n\n  _map_data() {\n    this.sx = this.renderer.xscale.v_compute(this._x);\n    this.sy1 = this.renderer.yscale.v_compute(this._y1);\n    this.sy2 = this.renderer.yscale.v_compute(this._y2);\n  }\n\n}\nVAreaView.__name__ = \"VAreaView\";\nexport class VArea extends Area {\n  constructor(attrs) {\n    super(attrs);\n  }\n\n  static init_VArea() {\n    this.prototype.default_view = VAreaView;\n    this.define({\n      x: [p.CoordinateSpec],\n      y1: [p.CoordinateSpec],\n      y2: [p.CoordinateSpec]\n    });\n  }\n\n}\nVArea.__name__ = \"VArea\";\nVArea.init_VArea();","map":{"version":3,"sources":["/Users/gen/Desktop/defund_to_refund/node_modules/@bokeh/bokehjs/build/js/lib/models/glyphs/varea.js"],"names":["Area","AreaView","SpatialIndex","hittest","p","VAreaView","_index_data","points","i","end","_x","length","x","y1","_y1","y2","_y2","isNaN","isFinite","push","x0","y0","Math","min","x1","max","_inner","ctx","sx","sy1","sy2","func","beginPath","lineTo","closePath","call","_render","_indices","visuals","fill","doit","set_value","hatch","doit2","renderer","request_render","scenterx","scentery","_hit_point","geometry","result","create_empty_hit_test_result","L","Float64Array","sy","point_in_poly","add_to_selected_glyphs","model","get_view","_map_data","xscale","v_compute","yscale","__name__","VArea","constructor","attrs","init_VArea","prototype","default_view","define","CoordinateSpec"],"mappings":"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","sourcesContent":["import { Area, AreaView } from \"./area\";\nimport { SpatialIndex } from \"../../core/util/spatial\";\nimport * as hittest from \"../../core/hittest\";\nimport * as p from \"../../core/properties\";\nexport class VAreaView extends AreaView {\n    _index_data() {\n        const points = [];\n        for (let i = 0, end = this._x.length; i < end; i++) {\n            const x = this._x[i];\n            const y1 = this._y1[i];\n            const y2 = this._y2[i];\n            if (isNaN(x + y1 + y2) || !isFinite(x + y1 + y2))\n                continue;\n            points.push({ x0: x, y0: Math.min(y1, y2), x1: x, y1: Math.max(y1, y2), i });\n        }\n        return new SpatialIndex(points);\n    }\n    _inner(ctx, sx, sy1, sy2, func) {\n        ctx.beginPath();\n        for (let i = 0, end = sy1.length; i < end; i++) {\n            ctx.lineTo(sx[i], sy1[i]);\n        }\n        // iterate backwards so that the upper end is below the lower start\n        for (let i = sy2.length - 1; i >= 0; i--) {\n            ctx.lineTo(sx[i], sy2[i]);\n        }\n        ctx.closePath();\n        func.call(ctx);\n    }\n    _render(ctx, _indices, { sx, sy1, sy2 }) {\n        if (this.visuals.fill.doit) {\n            this.visuals.fill.set_value(ctx);\n            this._inner(ctx, sx, sy1, sy2, ctx.fill);\n        }\n        this.visuals.hatch.doit2(ctx, 0, () => this._inner(ctx, sx, sy1, sy2, ctx.fill), () => this.renderer.request_render());\n    }\n    scenterx(i) {\n        return this.sx[i];\n    }\n    scentery(i) {\n        return (this.sy1[i] + this.sy2[i]) / 2;\n    }\n    _hit_point(geometry) {\n        const result = hittest.create_empty_hit_test_result();\n        const L = this.sx.length;\n        const sx = new Float64Array(2 * L);\n        const sy = new Float64Array(2 * L);\n        for (let i = 0, end = L; i < end; i++) {\n            sx[i] = this.sx[i];\n            sy[i] = this.sy1[i];\n            sx[L + i] = this.sx[L - i - 1];\n            sy[L + i] = this.sy2[L - i - 1];\n        }\n        if (hittest.point_in_poly(geometry.sx, geometry.sy, sx, sy)) {\n            result.add_to_selected_glyphs(this.model);\n            result.get_view = () => this;\n        }\n        return result;\n    }\n    _map_data() {\n        this.sx = this.renderer.xscale.v_compute(this._x);\n        this.sy1 = this.renderer.yscale.v_compute(this._y1);\n        this.sy2 = this.renderer.yscale.v_compute(this._y2);\n    }\n}\nVAreaView.__name__ = \"VAreaView\";\nexport class VArea extends Area {\n    constructor(attrs) {\n        super(attrs);\n    }\n    static init_VArea() {\n        this.prototype.default_view = VAreaView;\n        this.define({\n            x: [p.CoordinateSpec],\n            y1: [p.CoordinateSpec],\n            y2: [p.CoordinateSpec],\n        });\n    }\n}\nVArea.__name__ = \"VArea\";\nVArea.init_VArea();\n//# sourceMappingURL=varea.js.map"]},"metadata":{},"sourceType":"module"}