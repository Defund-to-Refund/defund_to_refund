{"ast":null,"code":"import * as mixins from \"./property_mixins\";\nimport { color2rgba } from \"./util/color\";\n\nfunction _horz(ctx, h, h2) {\n  ctx.moveTo(0, h2 + 0.5);\n  ctx.lineTo(h, h2 + 0.5);\n  ctx.stroke();\n}\n\nfunction _vert(ctx, h, h2) {\n  ctx.moveTo(h2 + 0.5, 0);\n  ctx.lineTo(h2 + 0.5, h);\n  ctx.stroke();\n}\n\nfunction _x(ctx, h) {\n  ctx.moveTo(0, h);\n  ctx.lineTo(h, 0);\n  ctx.stroke();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(h, h);\n  ctx.stroke();\n}\n\nfunction _get_canvas(size) {\n  const canvas = document.createElement('canvas');\n  canvas.width = size;\n  canvas.height = size;\n  return canvas;\n}\n\nfunction create_hatch_canvas(hatch_pattern, hatch_color, hatch_scale, hatch_weight) {\n  const h = hatch_scale;\n  const h2 = h / 2;\n  const h4 = h2 / 2;\n\n  const canvas = _get_canvas(hatch_scale);\n\n  const ctx = canvas.getContext(\"2d\");\n  ctx.strokeStyle = hatch_color;\n  ctx.lineCap = \"square\";\n  ctx.fillStyle = hatch_color;\n  ctx.lineWidth = hatch_weight;\n\n  switch (hatch_pattern) {\n    // we should not need these if code conditions on hatch.doit, but\n    // include them here just for completeness\n    case \" \":\n    case \"blank\":\n      break;\n\n    case \".\":\n    case \"dot\":\n      ctx.arc(h2, h2, h2 / 2, 0, 2 * Math.PI, true);\n      ctx.fill();\n      break;\n\n    case \"o\":\n    case \"ring\":\n      ctx.arc(h2, h2, h2 / 2, 0, 2 * Math.PI, true);\n      ctx.stroke();\n      break;\n\n    case \"-\":\n    case \"horizontal_line\":\n      _horz(ctx, h, h2);\n\n      break;\n\n    case \"|\":\n    case \"vertical_line\":\n      _vert(ctx, h, h2);\n\n      break;\n\n    case \"+\":\n    case \"cross\":\n      _horz(ctx, h, h2);\n\n      _vert(ctx, h, h2);\n\n      break;\n\n    case \"\\\"\":\n    case \"horizontal_dash\":\n      _horz(ctx, h2, h2);\n\n      break;\n\n    case \":\":\n    case \"vertical_dash\":\n      _vert(ctx, h2, h2);\n\n      break;\n\n    case \"@\":\n    case \"spiral\":\n      const h30 = h / 30;\n      ctx.moveTo(h2, h2);\n\n      for (let i = 0; i < 360; i++) {\n        const angle = 0.1 * i;\n        const x = h2 + h30 * angle * Math.cos(angle);\n        const y = h2 + h30 * angle * Math.sin(angle);\n        ctx.lineTo(x, y);\n      }\n\n      ctx.stroke();\n      break;\n\n    case \"/\":\n    case \"right_diagonal_line\":\n      ctx.moveTo(-h4 + 0.5, h);\n      ctx.lineTo(h4 + 0.5, 0);\n      ctx.stroke();\n      ctx.moveTo(h4 + 0.5, h);\n      ctx.lineTo(3 * h4 + 0.5, 0);\n      ctx.stroke();\n      ctx.moveTo(3 * h4 + 0.5, h);\n      ctx.lineTo(5 * h4 + 0.5, 0);\n      ctx.stroke();\n      ctx.stroke();\n      break;\n\n    case \"\\\\\":\n    case \"left_diagonal_line\":\n      ctx.moveTo(h4 + 0.5, h);\n      ctx.lineTo(-h4 + 0.5, 0);\n      ctx.stroke();\n      ctx.moveTo(3 * h4 + 0.5, h);\n      ctx.lineTo(h4 + 0.5, 0);\n      ctx.stroke();\n      ctx.moveTo(5 * h4 + 0.5, h);\n      ctx.lineTo(3 * h4 + 0.5, 0);\n      ctx.stroke();\n      ctx.stroke();\n      break;\n\n    case \"x\":\n    case \"diagonal_cross\":\n      _x(ctx, h);\n\n      break;\n\n    case \",\":\n    case \"right_diagonal_dash\":\n      ctx.moveTo(h4 + 0.5, 3 * h4 + 0.5);\n      ctx.lineTo(3 * h4 + 0.5, h4 + 0.5);\n      ctx.stroke();\n      break;\n\n    case \"`\":\n    case \"left_diagonal_dash\":\n      ctx.moveTo(h4 + 0.5, h4 + 0.5);\n      ctx.lineTo(3 * h4 + 0.5, 3 * h4 + 0.5);\n      ctx.stroke();\n      break;\n\n    case \"v\":\n    case \"horizontal_wave\":\n      ctx.moveTo(0, h4);\n      ctx.lineTo(h2, 3 * h4);\n      ctx.lineTo(h, h4);\n      ctx.stroke();\n      break;\n\n    case \">\":\n    case \"vertical_wave\":\n      ctx.moveTo(h4, 0);\n      ctx.lineTo(3 * h4, h2);\n      ctx.lineTo(h4, h);\n      ctx.stroke();\n      break;\n\n    case \"*\":\n    case \"criss_cross\":\n      _x(ctx, h);\n\n      _horz(ctx, h, h2);\n\n      _vert(ctx, h, h2);\n\n      break;\n  }\n\n  return canvas;\n}\n\nexport class ContextProperties {\n  constructor(obj, prefix = \"\") {\n    this.obj = obj;\n    this.prefix = prefix; // }\n\n    this.cache = {};\n\n    for (const attr of this.attrs) this[attr] = obj.properties[prefix + attr];\n  }\n\n  warm_cache(source) {\n    for (const attr of this.attrs) {\n      const prop = this.obj.properties[this.prefix + attr];\n      if (prop.spec.value !== undefined) // TODO (bev) better test?\n        this.cache[attr] = prop.spec.value;else if (source != null) this.cache[attr + \"_array\"] = prop.array(source);else throw new Error(\"source is required with a vectorized visual property\");\n    }\n  }\n\n  cache_select(attr, i) {\n    const prop = this.obj.properties[this.prefix + attr];\n    let value;\n    if (prop.spec.value !== undefined) // TODO (bev) better test?\n      this.cache[attr] = value = prop.spec.value;else this.cache[attr] = value = this.cache[attr + \"_array\"][i];\n    return value;\n  }\n\n  set_vectorize(ctx, i) {\n    if (this.all_indices != null) // all_indices is set by a Visuals instance associated with a CDSView\n      this._set_vectorize(ctx, this.all_indices[i]);else // all_indices is not set for annotations which may have vectorized visual props\n      this._set_vectorize(ctx, i);\n  }\n\n}\nContextProperties.__name__ = \"ContextProperties\";\nexport class Line extends ContextProperties {\n  set_value(ctx) {\n    ctx.strokeStyle = this.line_color.value();\n    ctx.globalAlpha = this.line_alpha.value();\n    ctx.lineWidth = this.line_width.value();\n    ctx.lineJoin = this.line_join.value();\n    ctx.lineCap = this.line_cap.value();\n    ctx.setLineDash(this.line_dash.value());\n    ctx.setLineDashOffset(this.line_dash_offset.value());\n  }\n\n  get doit() {\n    return !(this.line_color.spec.value === null || this.line_alpha.spec.value == 0 || this.line_width.spec.value == 0);\n  }\n\n  _set_vectorize(ctx, i) {\n    this.cache_select(\"line_color\", i);\n    if (ctx.strokeStyle !== this.cache.line_color) ctx.strokeStyle = this.cache.line_color;\n    this.cache_select(\"line_alpha\", i);\n    if (ctx.globalAlpha !== this.cache.line_alpha) ctx.globalAlpha = this.cache.line_alpha;\n    this.cache_select(\"line_width\", i);\n    if (ctx.lineWidth !== this.cache.line_width) ctx.lineWidth = this.cache.line_width;\n    this.cache_select(\"line_join\", i);\n    if (ctx.lineJoin !== this.cache.line_join) ctx.lineJoin = this.cache.line_join;\n    this.cache_select(\"line_cap\", i);\n    if (ctx.lineCap !== this.cache.line_cap) ctx.lineCap = this.cache.line_cap;\n    this.cache_select(\"line_dash\", i);\n    if (ctx.getLineDash() !== this.cache.line_dash) ctx.setLineDash(this.cache.line_dash);\n    this.cache_select(\"line_dash_offset\", i);\n    if (ctx.getLineDashOffset() !== this.cache.line_dash_offset) ctx.setLineDashOffset(this.cache.line_dash_offset);\n  }\n\n  color_value() {\n    const [r, g, b, a] = color2rgba(this.line_color.value(), this.line_alpha.value());\n    return `rgba(${r * 255},${g * 255},${b * 255},${a})`;\n  }\n\n}\nLine.__name__ = \"Line\";\nLine.prototype.attrs = Object.keys(mixins.line());\nexport class Fill extends ContextProperties {\n  set_value(ctx) {\n    ctx.fillStyle = this.fill_color.value();\n    ctx.globalAlpha = this.fill_alpha.value();\n  }\n\n  get doit() {\n    return !(this.fill_color.spec.value === null || this.fill_alpha.spec.value == 0);\n  }\n\n  _set_vectorize(ctx, i) {\n    this.cache_select(\"fill_color\", i);\n    if (ctx.fillStyle !== this.cache.fill_color) ctx.fillStyle = this.cache.fill_color;\n    this.cache_select(\"fill_alpha\", i);\n    if (ctx.globalAlpha !== this.cache.fill_alpha) ctx.globalAlpha = this.cache.fill_alpha;\n  }\n\n  color_value() {\n    const [r, g, b, a] = color2rgba(this.fill_color.value(), this.fill_alpha.value());\n    return `rgba(${r * 255},${g * 255},${b * 255},${a})`;\n  }\n\n}\nFill.__name__ = \"Fill\";\nFill.prototype.attrs = Object.keys(mixins.fill());\nexport class Hatch extends ContextProperties {\n  cache_select(name, i) {\n    let value;\n\n    if (name == \"pattern\") {\n      this.cache_select(\"hatch_color\", i);\n      this.cache_select(\"hatch_scale\", i);\n      this.cache_select(\"hatch_pattern\", i);\n      this.cache_select(\"hatch_weight\", i);\n      const {\n        hatch_color,\n        hatch_scale,\n        hatch_pattern,\n        hatch_weight,\n        hatch_extra\n      } = this.cache;\n\n      if (hatch_extra != null && hatch_extra.hasOwnProperty(hatch_pattern)) {\n        const custom = hatch_extra[hatch_pattern];\n        this.cache.pattern = custom.get_pattern(hatch_color, hatch_scale, hatch_weight);\n      } else {\n        this.cache.pattern = ctx => {\n          const canvas = create_hatch_canvas(hatch_pattern, hatch_color, hatch_scale, hatch_weight);\n          return ctx.createPattern(canvas, 'repeat');\n        };\n      }\n    } else value = super.cache_select(name, i);\n\n    return value;\n  }\n\n  _try_defer(defer_func) {\n    const {\n      hatch_pattern,\n      hatch_extra\n    } = this.cache;\n\n    if (hatch_extra != null && hatch_extra.hasOwnProperty(hatch_pattern)) {\n      const custom = hatch_extra[hatch_pattern];\n      custom.onload(defer_func);\n    }\n  }\n\n  get doit() {\n    return !(this.hatch_color.spec.value === null || this.hatch_alpha.spec.value == 0 || this.hatch_pattern.spec.value == \" \" || this.hatch_pattern.spec.value == \"blank\" || this.hatch_pattern.spec.value === null);\n  }\n\n  doit2(ctx, i, ready_func, defer_func) {\n    if (!this.doit) {\n      return;\n    }\n\n    this.cache_select(\"pattern\", i);\n    const pattern = this.cache.pattern(ctx);\n\n    if (pattern == null) {\n      this._try_defer(defer_func);\n    } else {\n      this.set_vectorize(ctx, i);\n      ready_func();\n    }\n  }\n\n  _set_vectorize(ctx, i) {\n    this.cache_select(\"pattern\", i);\n    ctx.fillStyle = this.cache.pattern(ctx);\n    this.cache_select(\"hatch_alpha\", i);\n    if (ctx.globalAlpha !== this.cache.hatch_alpha) ctx.globalAlpha = this.cache.hatch_alpha;\n  }\n\n  color_value() {\n    const [r, g, b, a] = color2rgba(this.hatch_color.value(), this.hatch_alpha.value());\n    return `rgba(${r * 255},${g * 255},${b * 255},${a})`;\n  }\n\n}\nHatch.__name__ = \"Hatch\";\nHatch.prototype.attrs = Object.keys(mixins.hatch());\nexport class Text extends ContextProperties {\n  cache_select(name, i) {\n    let value;\n\n    if (name == \"font\") {\n      super.cache_select(\"text_font_style\", i);\n      super.cache_select(\"text_font_size\", i);\n      super.cache_select(\"text_font\", i);\n      const {\n        text_font_style,\n        text_font_size,\n        text_font\n      } = this.cache;\n      this.cache.font = value = `${text_font_style} ${text_font_size} ${text_font}`;\n    } else value = super.cache_select(name, i);\n\n    return value;\n  }\n\n  font_value() {\n    const font = this.text_font.value();\n    const font_size = this.text_font_size.value();\n    const font_style = this.text_font_style.value();\n    return font_style + \" \" + font_size + \" \" + font;\n  }\n\n  color_value() {\n    const [r, g, b, a] = color2rgba(this.text_color.value(), this.text_alpha.value());\n    return `rgba(${r * 255},${g * 255},${b * 255},${a})`;\n  }\n\n  set_value(ctx) {\n    ctx.font = this.font_value();\n    ctx.fillStyle = this.text_color.value();\n    ctx.globalAlpha = this.text_alpha.value();\n    ctx.textAlign = this.text_align.value();\n    ctx.textBaseline = this.text_baseline.value();\n  }\n\n  get doit() {\n    return !(this.text_color.spec.value === null || this.text_alpha.spec.value == 0);\n  }\n\n  _set_vectorize(ctx, i) {\n    this.cache_select(\"font\", i);\n    if (ctx.font !== this.cache.font) ctx.font = this.cache.font;\n    this.cache_select(\"text_color\", i);\n    if (ctx.fillStyle !== this.cache.text_color) ctx.fillStyle = this.cache.text_color;\n    this.cache_select(\"text_alpha\", i);\n    if (ctx.globalAlpha !== this.cache.text_alpha) ctx.globalAlpha = this.cache.text_alpha;\n    this.cache_select(\"text_align\", i);\n    if (ctx.textAlign !== this.cache.text_align) ctx.textAlign = this.cache.text_align;\n    this.cache_select(\"text_baseline\", i);\n    if (ctx.textBaseline !== this.cache.text_baseline) ctx.textBaseline = this.cache.text_baseline;\n  }\n\n}\nText.__name__ = \"Text\";\nText.prototype.attrs = Object.keys(mixins.text());\nexport class Visuals {\n  constructor(model) {\n    for (const mixin of model.mixins) {\n      const [name, prefix = \"\"] = mixin.split(\":\");\n      let cls;\n\n      switch (name) {\n        case \"line\":\n          cls = Line;\n          break;\n\n        case \"fill\":\n          cls = Fill;\n          break;\n\n        case \"hatch\":\n          cls = Hatch;\n          break;\n\n        case \"text\":\n          cls = Text;\n          break;\n\n        default:\n          throw new Error(`unknown visual: ${name}`);\n      }\n\n      this[prefix + name] = new cls(model, prefix);\n    }\n  }\n\n  warm_cache(source) {\n    for (const name in this) {\n      if (this.hasOwnProperty(name)) {\n        const prop = this[name];\n        if (prop instanceof ContextProperties) prop.warm_cache(source);\n      }\n    }\n  }\n\n  set_all_indices(all_indices) {\n    for (const name in this) {\n      if (this.hasOwnProperty(name)) {\n        const prop = this[name];\n        if (prop instanceof ContextProperties) prop.all_indices = all_indices;\n      }\n    }\n  }\n\n}\nVisuals.__name__ = \"Visuals\";","map":{"version":3,"sources":["/Users/gen/Desktop/defund_to_refund/node_modules/@bokeh/bokehjs/build/js/lib/core/visuals.js"],"names":["mixins","color2rgba","_horz","ctx","h","h2","moveTo","lineTo","stroke","_vert","_x","_get_canvas","size","canvas","document","createElement","width","height","create_hatch_canvas","hatch_pattern","hatch_color","hatch_scale","hatch_weight","h4","getContext","strokeStyle","lineCap","fillStyle","lineWidth","arc","Math","PI","fill","h30","i","angle","x","cos","y","sin","ContextProperties","constructor","obj","prefix","cache","attr","attrs","properties","warm_cache","source","prop","spec","value","undefined","array","Error","cache_select","set_vectorize","all_indices","_set_vectorize","__name__","Line","set_value","line_color","globalAlpha","line_alpha","line_width","lineJoin","line_join","line_cap","setLineDash","line_dash","setLineDashOffset","line_dash_offset","doit","getLineDash","getLineDashOffset","color_value","r","g","b","a","prototype","Object","keys","line","Fill","fill_color","fill_alpha","Hatch","name","hatch_extra","hasOwnProperty","custom","pattern","get_pattern","createPattern","_try_defer","defer_func","onload","hatch_alpha","doit2","ready_func","hatch","Text","text_font_style","text_font_size","text_font","font","font_value","font_size","font_style","text_color","text_alpha","textAlign","text_align","textBaseline","text_baseline","text","Visuals","model","mixin","split","cls","set_all_indices"],"mappings":"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","sourcesContent":["import * as mixins from \"./property_mixins\";\nimport { color2rgba } from \"./util/color\";\nfunction _horz(ctx, h, h2) {\n    ctx.moveTo(0, h2 + 0.5);\n    ctx.lineTo(h, h2 + 0.5);\n    ctx.stroke();\n}\nfunction _vert(ctx, h, h2) {\n    ctx.moveTo(h2 + 0.5, 0);\n    ctx.lineTo(h2 + 0.5, h);\n    ctx.stroke();\n}\nfunction _x(ctx, h) {\n    ctx.moveTo(0, h);\n    ctx.lineTo(h, 0);\n    ctx.stroke();\n    ctx.moveTo(0, 0);\n    ctx.lineTo(h, h);\n    ctx.stroke();\n}\nfunction _get_canvas(size) {\n    const canvas = document.createElement('canvas');\n    canvas.width = size;\n    canvas.height = size;\n    return canvas;\n}\nfunction create_hatch_canvas(hatch_pattern, hatch_color, hatch_scale, hatch_weight) {\n    const h = hatch_scale;\n    const h2 = h / 2;\n    const h4 = h2 / 2;\n    const canvas = _get_canvas(hatch_scale);\n    const ctx = canvas.getContext(\"2d\");\n    ctx.strokeStyle = hatch_color;\n    ctx.lineCap = \"square\";\n    ctx.fillStyle = hatch_color;\n    ctx.lineWidth = hatch_weight;\n    switch (hatch_pattern) {\n        // we should not need these if code conditions on hatch.doit, but\n        // include them here just for completeness\n        case \" \":\n        case \"blank\":\n            break;\n        case \".\":\n        case \"dot\":\n            ctx.arc(h2, h2, h2 / 2, 0, 2 * Math.PI, true);\n            ctx.fill();\n            break;\n        case \"o\":\n        case \"ring\":\n            ctx.arc(h2, h2, h2 / 2, 0, 2 * Math.PI, true);\n            ctx.stroke();\n            break;\n        case \"-\":\n        case \"horizontal_line\":\n            _horz(ctx, h, h2);\n            break;\n        case \"|\":\n        case \"vertical_line\":\n            _vert(ctx, h, h2);\n            break;\n        case \"+\":\n        case \"cross\":\n            _horz(ctx, h, h2);\n            _vert(ctx, h, h2);\n            break;\n        case \"\\\"\":\n        case \"horizontal_dash\":\n            _horz(ctx, h2, h2);\n            break;\n        case \":\":\n        case \"vertical_dash\":\n            _vert(ctx, h2, h2);\n            break;\n        case \"@\":\n        case \"spiral\":\n            const h30 = h / 30;\n            ctx.moveTo(h2, h2);\n            for (let i = 0; i < 360; i++) {\n                const angle = 0.1 * i;\n                const x = h2 + (h30 * angle) * Math.cos(angle);\n                const y = h2 + (h30 * angle) * Math.sin(angle);\n                ctx.lineTo(x, y);\n            }\n            ctx.stroke();\n            break;\n        case \"/\":\n        case \"right_diagonal_line\":\n            ctx.moveTo(-h4 + 0.5, h);\n            ctx.lineTo(h4 + 0.5, 0);\n            ctx.stroke();\n            ctx.moveTo(h4 + 0.5, h);\n            ctx.lineTo(3 * h4 + 0.5, 0);\n            ctx.stroke();\n            ctx.moveTo(3 * h4 + 0.5, h);\n            ctx.lineTo(5 * h4 + 0.5, 0);\n            ctx.stroke();\n            ctx.stroke();\n            break;\n        case \"\\\\\":\n        case \"left_diagonal_line\":\n            ctx.moveTo(h4 + 0.5, h);\n            ctx.lineTo(-h4 + 0.5, 0);\n            ctx.stroke();\n            ctx.moveTo(3 * h4 + 0.5, h);\n            ctx.lineTo(h4 + 0.5, 0);\n            ctx.stroke();\n            ctx.moveTo(5 * h4 + 0.5, h);\n            ctx.lineTo(3 * h4 + 0.5, 0);\n            ctx.stroke();\n            ctx.stroke();\n            break;\n        case \"x\":\n        case \"diagonal_cross\":\n            _x(ctx, h);\n            break;\n        case \",\":\n        case \"right_diagonal_dash\":\n            ctx.moveTo(h4 + 0.5, 3 * h4 + 0.5);\n            ctx.lineTo(3 * h4 + 0.5, h4 + 0.5);\n            ctx.stroke();\n            break;\n        case \"`\":\n        case \"left_diagonal_dash\":\n            ctx.moveTo(h4 + 0.5, h4 + 0.5);\n            ctx.lineTo(3 * h4 + 0.5, 3 * h4 + 0.5);\n            ctx.stroke();\n            break;\n        case \"v\":\n        case \"horizontal_wave\":\n            ctx.moveTo(0, h4);\n            ctx.lineTo(h2, 3 * h4);\n            ctx.lineTo(h, h4);\n            ctx.stroke();\n            break;\n        case \">\":\n        case \"vertical_wave\":\n            ctx.moveTo(h4, 0);\n            ctx.lineTo(3 * h4, h2);\n            ctx.lineTo(h4, h);\n            ctx.stroke();\n            break;\n        case \"*\":\n        case \"criss_cross\":\n            _x(ctx, h);\n            _horz(ctx, h, h2);\n            _vert(ctx, h, h2);\n            break;\n    }\n    return canvas;\n}\nexport class ContextProperties {\n    constructor(obj, prefix = \"\") {\n        this.obj = obj;\n        this.prefix = prefix;\n        // }\n        this.cache = {};\n        for (const attr of this.attrs)\n            this[attr] = obj.properties[prefix + attr];\n    }\n    warm_cache(source) {\n        for (const attr of this.attrs) {\n            const prop = this.obj.properties[this.prefix + attr];\n            if (prop.spec.value !== undefined) // TODO (bev) better test?\n                this.cache[attr] = prop.spec.value;\n            else if (source != null)\n                this.cache[attr + \"_array\"] = prop.array(source);\n            else\n                throw new Error(\"source is required with a vectorized visual property\");\n        }\n    }\n    cache_select(attr, i) {\n        const prop = this.obj.properties[this.prefix + attr];\n        let value;\n        if (prop.spec.value !== undefined) // TODO (bev) better test?\n            this.cache[attr] = value = prop.spec.value;\n        else\n            this.cache[attr] = value = this.cache[attr + \"_array\"][i];\n        return value;\n    }\n    set_vectorize(ctx, i) {\n        if (this.all_indices != null) // all_indices is set by a Visuals instance associated with a CDSView\n            this._set_vectorize(ctx, this.all_indices[i]);\n        else // all_indices is not set for annotations which may have vectorized visual props\n            this._set_vectorize(ctx, i);\n    }\n}\nContextProperties.__name__ = \"ContextProperties\";\nexport class Line extends ContextProperties {\n    set_value(ctx) {\n        ctx.strokeStyle = this.line_color.value();\n        ctx.globalAlpha = this.line_alpha.value();\n        ctx.lineWidth = this.line_width.value();\n        ctx.lineJoin = this.line_join.value();\n        ctx.lineCap = this.line_cap.value();\n        ctx.setLineDash(this.line_dash.value());\n        ctx.setLineDashOffset(this.line_dash_offset.value());\n    }\n    get doit() {\n        return !(this.line_color.spec.value === null ||\n            this.line_alpha.spec.value == 0 ||\n            this.line_width.spec.value == 0);\n    }\n    _set_vectorize(ctx, i) {\n        this.cache_select(\"line_color\", i);\n        if (ctx.strokeStyle !== this.cache.line_color)\n            ctx.strokeStyle = this.cache.line_color;\n        this.cache_select(\"line_alpha\", i);\n        if (ctx.globalAlpha !== this.cache.line_alpha)\n            ctx.globalAlpha = this.cache.line_alpha;\n        this.cache_select(\"line_width\", i);\n        if (ctx.lineWidth !== this.cache.line_width)\n            ctx.lineWidth = this.cache.line_width;\n        this.cache_select(\"line_join\", i);\n        if (ctx.lineJoin !== this.cache.line_join)\n            ctx.lineJoin = this.cache.line_join;\n        this.cache_select(\"line_cap\", i);\n        if (ctx.lineCap !== this.cache.line_cap)\n            ctx.lineCap = this.cache.line_cap;\n        this.cache_select(\"line_dash\", i);\n        if (ctx.getLineDash() !== this.cache.line_dash)\n            ctx.setLineDash(this.cache.line_dash);\n        this.cache_select(\"line_dash_offset\", i);\n        if (ctx.getLineDashOffset() !== this.cache.line_dash_offset)\n            ctx.setLineDashOffset(this.cache.line_dash_offset);\n    }\n    color_value() {\n        const [r, g, b, a] = color2rgba(this.line_color.value(), this.line_alpha.value());\n        return `rgba(${r * 255},${g * 255},${b * 255},${a})`;\n    }\n}\nLine.__name__ = \"Line\";\nLine.prototype.attrs = Object.keys(mixins.line());\nexport class Fill extends ContextProperties {\n    set_value(ctx) {\n        ctx.fillStyle = this.fill_color.value();\n        ctx.globalAlpha = this.fill_alpha.value();\n    }\n    get doit() {\n        return !(this.fill_color.spec.value === null ||\n            this.fill_alpha.spec.value == 0);\n    }\n    _set_vectorize(ctx, i) {\n        this.cache_select(\"fill_color\", i);\n        if (ctx.fillStyle !== this.cache.fill_color)\n            ctx.fillStyle = this.cache.fill_color;\n        this.cache_select(\"fill_alpha\", i);\n        if (ctx.globalAlpha !== this.cache.fill_alpha)\n            ctx.globalAlpha = this.cache.fill_alpha;\n    }\n    color_value() {\n        const [r, g, b, a] = color2rgba(this.fill_color.value(), this.fill_alpha.value());\n        return `rgba(${r * 255},${g * 255},${b * 255},${a})`;\n    }\n}\nFill.__name__ = \"Fill\";\nFill.prototype.attrs = Object.keys(mixins.fill());\nexport class Hatch extends ContextProperties {\n    cache_select(name, i) {\n        let value;\n        if (name == \"pattern\") {\n            this.cache_select(\"hatch_color\", i);\n            this.cache_select(\"hatch_scale\", i);\n            this.cache_select(\"hatch_pattern\", i);\n            this.cache_select(\"hatch_weight\", i);\n            const { hatch_color, hatch_scale, hatch_pattern, hatch_weight, hatch_extra } = this.cache;\n            if (hatch_extra != null && hatch_extra.hasOwnProperty(hatch_pattern)) {\n                const custom = hatch_extra[hatch_pattern];\n                this.cache.pattern = custom.get_pattern(hatch_color, hatch_scale, hatch_weight);\n            }\n            else {\n                this.cache.pattern = (ctx) => {\n                    const canvas = create_hatch_canvas(hatch_pattern, hatch_color, hatch_scale, hatch_weight);\n                    return ctx.createPattern(canvas, 'repeat');\n                };\n            }\n        }\n        else\n            value = super.cache_select(name, i);\n        return value;\n    }\n    _try_defer(defer_func) {\n        const { hatch_pattern, hatch_extra } = this.cache;\n        if (hatch_extra != null && hatch_extra.hasOwnProperty(hatch_pattern)) {\n            const custom = hatch_extra[hatch_pattern];\n            custom.onload(defer_func);\n        }\n    }\n    get doit() {\n        return !(this.hatch_color.spec.value === null ||\n            this.hatch_alpha.spec.value == 0 ||\n            this.hatch_pattern.spec.value == \" \" ||\n            this.hatch_pattern.spec.value == \"blank\" ||\n            this.hatch_pattern.spec.value === null);\n    }\n    doit2(ctx, i, ready_func, defer_func) {\n        if (!this.doit) {\n            return;\n        }\n        this.cache_select(\"pattern\", i);\n        const pattern = this.cache.pattern(ctx);\n        if (pattern == null) {\n            this._try_defer(defer_func);\n        }\n        else {\n            this.set_vectorize(ctx, i);\n            ready_func();\n        }\n    }\n    _set_vectorize(ctx, i) {\n        this.cache_select(\"pattern\", i);\n        ctx.fillStyle = this.cache.pattern(ctx);\n        this.cache_select(\"hatch_alpha\", i);\n        if (ctx.globalAlpha !== this.cache.hatch_alpha)\n            ctx.globalAlpha = this.cache.hatch_alpha;\n    }\n    color_value() {\n        const [r, g, b, a] = color2rgba(this.hatch_color.value(), this.hatch_alpha.value());\n        return `rgba(${r * 255},${g * 255},${b * 255},${a})`;\n    }\n}\nHatch.__name__ = \"Hatch\";\nHatch.prototype.attrs = Object.keys(mixins.hatch());\nexport class Text extends ContextProperties {\n    cache_select(name, i) {\n        let value;\n        if (name == \"font\") {\n            super.cache_select(\"text_font_style\", i);\n            super.cache_select(\"text_font_size\", i);\n            super.cache_select(\"text_font\", i);\n            const { text_font_style, text_font_size, text_font } = this.cache;\n            this.cache.font = value = `${text_font_style} ${text_font_size} ${text_font}`;\n        }\n        else\n            value = super.cache_select(name, i);\n        return value;\n    }\n    font_value() {\n        const font = this.text_font.value();\n        const font_size = this.text_font_size.value();\n        const font_style = this.text_font_style.value();\n        return font_style + \" \" + font_size + \" \" + font;\n    }\n    color_value() {\n        const [r, g, b, a] = color2rgba(this.text_color.value(), this.text_alpha.value());\n        return `rgba(${r * 255},${g * 255},${b * 255},${a})`;\n    }\n    set_value(ctx) {\n        ctx.font = this.font_value();\n        ctx.fillStyle = this.text_color.value();\n        ctx.globalAlpha = this.text_alpha.value();\n        ctx.textAlign = this.text_align.value();\n        ctx.textBaseline = this.text_baseline.value();\n    }\n    get doit() {\n        return !(this.text_color.spec.value === null ||\n            this.text_alpha.spec.value == 0);\n    }\n    _set_vectorize(ctx, i) {\n        this.cache_select(\"font\", i);\n        if (ctx.font !== this.cache.font)\n            ctx.font = this.cache.font;\n        this.cache_select(\"text_color\", i);\n        if (ctx.fillStyle !== this.cache.text_color)\n            ctx.fillStyle = this.cache.text_color;\n        this.cache_select(\"text_alpha\", i);\n        if (ctx.globalAlpha !== this.cache.text_alpha)\n            ctx.globalAlpha = this.cache.text_alpha;\n        this.cache_select(\"text_align\", i);\n        if (ctx.textAlign !== this.cache.text_align)\n            ctx.textAlign = this.cache.text_align;\n        this.cache_select(\"text_baseline\", i);\n        if (ctx.textBaseline !== this.cache.text_baseline)\n            ctx.textBaseline = this.cache.text_baseline;\n    }\n}\nText.__name__ = \"Text\";\nText.prototype.attrs = Object.keys(mixins.text());\nexport class Visuals {\n    constructor(model) {\n        for (const mixin of model.mixins) {\n            const [name, prefix = \"\"] = mixin.split(\":\");\n            let cls;\n            switch (name) {\n                case \"line\":\n                    cls = Line;\n                    break;\n                case \"fill\":\n                    cls = Fill;\n                    break;\n                case \"hatch\":\n                    cls = Hatch;\n                    break;\n                case \"text\":\n                    cls = Text;\n                    break;\n                default:\n                    throw new Error(`unknown visual: ${name}`);\n            }\n            this[prefix + name] = new cls(model, prefix);\n        }\n    }\n    warm_cache(source) {\n        for (const name in this) {\n            if (this.hasOwnProperty(name)) {\n                const prop = this[name];\n                if (prop instanceof ContextProperties)\n                    prop.warm_cache(source);\n            }\n        }\n    }\n    set_all_indices(all_indices) {\n        for (const name in this) {\n            if (this.hasOwnProperty(name)) {\n                const prop = this[name];\n                if (prop instanceof ContextProperties)\n                    prop.all_indices = all_indices;\n            }\n        }\n    }\n}\nVisuals.__name__ = \"Visuals\";\n//# sourceMappingURL=visuals.js.map"]},"metadata":{},"sourceType":"module"}