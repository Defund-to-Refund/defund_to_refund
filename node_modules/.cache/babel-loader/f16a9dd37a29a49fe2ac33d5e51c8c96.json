{"ast":null,"code":"import { Area, AreaView } from \"./area\";\nimport { SpatialIndex } from \"../../core/util/spatial\";\nimport * as hittest from \"../../core/hittest\";\nimport * as p from \"../../core/properties\";\nexport class HAreaView extends AreaView {\n  _index_data() {\n    const points = [];\n\n    for (let i = 0, end = this._x1.length; i < end; i++) {\n      const x1 = this._x1[i];\n      const x2 = this._x2[i];\n      const y = this._y[i];\n      if (isNaN(x1 + x2 + y) || !isFinite(x1 + x2 + y)) continue;\n      points.push({\n        x0: Math.min(x1, x2),\n        y0: y,\n        x1: Math.max(x1, x2),\n        y1: y,\n        i\n      });\n    }\n\n    return new SpatialIndex(points);\n  }\n\n  _inner(ctx, sx1, sx2, sy, func) {\n    ctx.beginPath();\n\n    for (let i = 0, end = sx1.length; i < end; i++) {\n      ctx.lineTo(sx1[i], sy[i]);\n    } // iterate backwards so that the upper end is below the lower start\n\n\n    for (let i = sx2.length - 1; i >= 0; i--) {\n      ctx.lineTo(sx2[i], sy[i]);\n    }\n\n    ctx.closePath();\n    func.call(ctx);\n  }\n\n  _render(ctx, _indices, {\n    sx1,\n    sx2,\n    sy\n  }) {\n    if (this.visuals.fill.doit) {\n      this.visuals.fill.set_value(ctx);\n\n      this._inner(ctx, sx1, sx2, sy, ctx.fill);\n    }\n\n    this.visuals.hatch.doit2(ctx, 0, () => this._inner(ctx, sx1, sx2, sy, ctx.fill), () => this.renderer.request_render());\n  }\n\n  _hit_point(geometry) {\n    const result = hittest.create_empty_hit_test_result();\n    const L = this.sy.length;\n    const sx = new Float64Array(2 * L);\n    const sy = new Float64Array(2 * L);\n\n    for (let i = 0, end = L; i < end; i++) {\n      sx[i] = this.sx1[i];\n      sy[i] = this.sy[i];\n      sx[L + i] = this.sx2[L - i - 1];\n      sy[L + i] = this.sy[L - i - 1];\n    }\n\n    if (hittest.point_in_poly(geometry.sx, geometry.sy, sx, sy)) {\n      result.add_to_selected_glyphs(this.model);\n\n      result.get_view = () => this;\n    }\n\n    return result;\n  }\n\n  scenterx(i) {\n    return (this.sx1[i] + this.sx2[i]) / 2;\n  }\n\n  scentery(i) {\n    return this.sy[i];\n  }\n\n  _map_data() {\n    this.sx1 = this.renderer.xscale.v_compute(this._x1);\n    this.sx2 = this.renderer.xscale.v_compute(this._x2);\n    this.sy = this.renderer.yscale.v_compute(this._y);\n  }\n\n}\nHAreaView.__name__ = \"HAreaView\";\nexport class HArea extends Area {\n  constructor(attrs) {\n    super(attrs);\n  }\n\n  static init_HArea() {\n    this.prototype.default_view = HAreaView;\n    this.define({\n      x1: [p.CoordinateSpec],\n      x2: [p.CoordinateSpec],\n      y: [p.CoordinateSpec]\n    });\n  }\n\n}\nHArea.__name__ = \"HArea\";\nHArea.init_HArea();","map":{"version":3,"sources":["/Users/gen/Desktop/defund_to_refund/node_modules/@bokeh/bokehjs/build/js/lib/models/glyphs/harea.js"],"names":["Area","AreaView","SpatialIndex","hittest","p","HAreaView","_index_data","points","i","end","_x1","length","x1","x2","_x2","y","_y","isNaN","isFinite","push","x0","Math","min","y0","max","y1","_inner","ctx","sx1","sx2","sy","func","beginPath","lineTo","closePath","call","_render","_indices","visuals","fill","doit","set_value","hatch","doit2","renderer","request_render","_hit_point","geometry","result","create_empty_hit_test_result","L","sx","Float64Array","point_in_poly","add_to_selected_glyphs","model","get_view","scenterx","scentery","_map_data","xscale","v_compute","yscale","__name__","HArea","constructor","attrs","init_HArea","prototype","default_view","define","CoordinateSpec"],"mappings":"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","sourcesContent":["import { Area, AreaView } from \"./area\";\nimport { SpatialIndex } from \"../../core/util/spatial\";\nimport * as hittest from \"../../core/hittest\";\nimport * as p from \"../../core/properties\";\nexport class HAreaView extends AreaView {\n    _index_data() {\n        const points = [];\n        for (let i = 0, end = this._x1.length; i < end; i++) {\n            const x1 = this._x1[i];\n            const x2 = this._x2[i];\n            const y = this._y[i];\n            if (isNaN(x1 + x2 + y) || !isFinite(x1 + x2 + y))\n                continue;\n            points.push({ x0: Math.min(x1, x2), y0: y, x1: Math.max(x1, x2), y1: y, i });\n        }\n        return new SpatialIndex(points);\n    }\n    _inner(ctx, sx1, sx2, sy, func) {\n        ctx.beginPath();\n        for (let i = 0, end = sx1.length; i < end; i++) {\n            ctx.lineTo(sx1[i], sy[i]);\n        }\n        // iterate backwards so that the upper end is below the lower start\n        for (let i = sx2.length - 1; i >= 0; i--) {\n            ctx.lineTo(sx2[i], sy[i]);\n        }\n        ctx.closePath();\n        func.call(ctx);\n    }\n    _render(ctx, _indices, { sx1, sx2, sy }) {\n        if (this.visuals.fill.doit) {\n            this.visuals.fill.set_value(ctx);\n            this._inner(ctx, sx1, sx2, sy, ctx.fill);\n        }\n        this.visuals.hatch.doit2(ctx, 0, () => this._inner(ctx, sx1, sx2, sy, ctx.fill), () => this.renderer.request_render());\n    }\n    _hit_point(geometry) {\n        const result = hittest.create_empty_hit_test_result();\n        const L = this.sy.length;\n        const sx = new Float64Array(2 * L);\n        const sy = new Float64Array(2 * L);\n        for (let i = 0, end = L; i < end; i++) {\n            sx[i] = this.sx1[i];\n            sy[i] = this.sy[i];\n            sx[L + i] = this.sx2[L - i - 1];\n            sy[L + i] = this.sy[L - i - 1];\n        }\n        if (hittest.point_in_poly(geometry.sx, geometry.sy, sx, sy)) {\n            result.add_to_selected_glyphs(this.model);\n            result.get_view = () => this;\n        }\n        return result;\n    }\n    scenterx(i) {\n        return (this.sx1[i] + this.sx2[i]) / 2;\n    }\n    scentery(i) {\n        return this.sy[i];\n    }\n    _map_data() {\n        this.sx1 = this.renderer.xscale.v_compute(this._x1);\n        this.sx2 = this.renderer.xscale.v_compute(this._x2);\n        this.sy = this.renderer.yscale.v_compute(this._y);\n    }\n}\nHAreaView.__name__ = \"HAreaView\";\nexport class HArea extends Area {\n    constructor(attrs) {\n        super(attrs);\n    }\n    static init_HArea() {\n        this.prototype.default_view = HAreaView;\n        this.define({\n            x1: [p.CoordinateSpec],\n            x2: [p.CoordinateSpec],\n            y: [p.CoordinateSpec],\n        });\n    }\n}\nHArea.__name__ = \"HArea\";\nHArea.init_HArea();\n//# sourceMappingURL=harea.js.map"]},"metadata":{},"sourceType":"module"}