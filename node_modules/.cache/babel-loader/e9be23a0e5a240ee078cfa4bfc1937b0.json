{"ast":null,"code":"\"use strict\";\n\nvar $ = require(\"../slick.jquery\");\n\nvar Slick = require(\"../slick.core\");\n\nfunction RowSelectionModel(options) {\n  var _grid;\n\n  var _ranges = [];\n\n  var _self = this;\n\n  var _handler = new Slick.EventHandler();\n\n  var _inHandler;\n\n  var _options;\n\n  var _defaults = {\n    selectActiveRow: true\n  };\n\n  function init(grid) {\n    _options = $.extend(true, {}, _defaults, options);\n    _grid = grid;\n\n    _handler.subscribe(_grid.onActiveCellChanged, wrapHandler(handleActiveCellChange));\n\n    _handler.subscribe(_grid.onKeyDown, wrapHandler(handleKeyDown));\n\n    _handler.subscribe(_grid.onClick, wrapHandler(handleClick));\n  }\n\n  function destroy() {\n    _handler.unsubscribeAll();\n  }\n\n  function wrapHandler(handler) {\n    return function () {\n      if (!_inHandler) {\n        _inHandler = true;\n        handler.apply(this, arguments);\n        _inHandler = false;\n      }\n    };\n  }\n\n  function rangesToRows(ranges) {\n    var rows = [];\n\n    for (var i = 0; i < ranges.length; i++) {\n      for (var j = ranges[i].fromRow; j <= ranges[i].toRow; j++) {\n        rows.push(j);\n      }\n    }\n\n    return rows;\n  }\n\n  function rowsToRanges(rows) {\n    var ranges = [];\n    var lastCell = _grid.getColumns().length - 1;\n\n    for (var i = 0; i < rows.length; i++) {\n      ranges.push(new Slick.Range(rows[i], 0, rows[i], lastCell));\n    }\n\n    return ranges;\n  }\n\n  function getRowsRange(from, to) {\n    var i,\n        rows = [];\n\n    for (i = from; i <= to; i++) {\n      rows.push(i);\n    }\n\n    for (i = to; i < from; i++) {\n      rows.push(i);\n    }\n\n    return rows;\n  }\n\n  function getSelectedRows() {\n    return rangesToRows(_ranges);\n  }\n\n  function setSelectedRows(rows) {\n    setSelectedRanges(rowsToRanges(rows));\n  }\n\n  function setSelectedRanges(ranges) {\n    // simple check for: empty selection didn't change, prevent firing onSelectedRangesChanged\n    if ((!_ranges || _ranges.length === 0) && (!ranges || ranges.length === 0)) {\n      return;\n    }\n\n    _ranges = ranges;\n\n    _self.onSelectedRangesChanged.notify(_ranges);\n  }\n\n  function getSelectedRanges() {\n    return _ranges;\n  }\n\n  function handleActiveCellChange(e, data) {\n    if (_options.selectActiveRow && data.row != null) {\n      setSelectedRanges([new Slick.Range(data.row, 0, data.row, _grid.getColumns().length - 1)]);\n    }\n  }\n\n  function handleKeyDown(e) {\n    var activeRow = _grid.getActiveCell();\n\n    if (_grid.getOptions().multiSelect && activeRow && e.shiftKey && !e.ctrlKey && !e.altKey && !e.metaKey && (e.which == Slick.keyCode.UP || e.which == Slick.keyCode.DOWN)) {\n      var selectedRows = getSelectedRows();\n      selectedRows.sort(function (x, y) {\n        return x - y;\n      });\n\n      if (!selectedRows.length) {\n        selectedRows = [activeRow.row];\n      }\n\n      var top = selectedRows[0];\n      var bottom = selectedRows[selectedRows.length - 1];\n      var active;\n\n      if (e.which == Slick.keyCode.DOWN) {\n        active = activeRow.row < bottom || top == bottom ? ++bottom : ++top;\n      } else {\n        active = activeRow.row < bottom ? --bottom : --top;\n      }\n\n      if (active >= 0 && active < _grid.getDataLength()) {\n        _grid.scrollRowIntoView(active);\n\n        var tempRanges = rowsToRanges(getRowsRange(top, bottom));\n        setSelectedRanges(tempRanges);\n      }\n\n      e.preventDefault();\n      e.stopPropagation();\n    }\n  }\n\n  function handleClick(e) {\n    var cell = _grid.getCellFromEvent(e);\n\n    if (!cell || !_grid.canCellBeActive(cell.row, cell.cell)) {\n      return false;\n    }\n\n    if (!_grid.getOptions().multiSelect || !e.ctrlKey && !e.shiftKey && !e.metaKey) {\n      return false;\n    }\n\n    var selection = rangesToRows(_ranges);\n    var idx = $.inArray(cell.row, selection);\n\n    if (idx === -1 && (e.ctrlKey || e.metaKey)) {\n      selection.push(cell.row);\n\n      _grid.setActiveCell(cell.row, cell.cell);\n    } else if (idx !== -1 && (e.ctrlKey || e.metaKey)) {\n      selection = $.grep(selection, function (o, i) {\n        return o !== cell.row;\n      });\n\n      _grid.setActiveCell(cell.row, cell.cell);\n    } else if (selection.length && e.shiftKey) {\n      var last = selection.pop();\n      var from = Math.min(cell.row, last);\n      var to = Math.max(cell.row, last);\n      selection = [];\n\n      for (var i = from; i <= to; i++) {\n        if (i !== last) {\n          selection.push(i);\n        }\n      }\n\n      selection.push(last);\n\n      _grid.setActiveCell(cell.row, cell.cell);\n    }\n\n    var tempRanges = rowsToRanges(selection);\n    setSelectedRanges(tempRanges);\n    e.stopImmediatePropagation();\n    return true;\n  }\n\n  $.extend(this, {\n    \"getSelectedRows\": getSelectedRows,\n    \"setSelectedRows\": setSelectedRows,\n    \"getSelectedRanges\": getSelectedRanges,\n    \"setSelectedRanges\": setSelectedRanges,\n    \"init\": init,\n    \"destroy\": destroy,\n    \"onSelectedRangesChanged\": new Slick.Event()\n  });\n}\n\nmodule.exports = {\n  \"RowSelectionModel\": RowSelectionModel\n};","map":{"version":3,"sources":["/Users/gen/Desktop/defund_to_refund/node_modules/@bokeh/slickgrid/plugins/slick.rowselectionmodel.js"],"names":["$","require","Slick","RowSelectionModel","options","_grid","_ranges","_self","_handler","EventHandler","_inHandler","_options","_defaults","selectActiveRow","init","grid","extend","subscribe","onActiveCellChanged","wrapHandler","handleActiveCellChange","onKeyDown","handleKeyDown","onClick","handleClick","destroy","unsubscribeAll","handler","apply","arguments","rangesToRows","ranges","rows","i","length","j","fromRow","toRow","push","rowsToRanges","lastCell","getColumns","Range","getRowsRange","from","to","getSelectedRows","setSelectedRows","setSelectedRanges","onSelectedRangesChanged","notify","getSelectedRanges","e","data","row","activeRow","getActiveCell","getOptions","multiSelect","shiftKey","ctrlKey","altKey","metaKey","which","keyCode","UP","DOWN","selectedRows","sort","x","y","top","bottom","active","getDataLength","scrollRowIntoView","tempRanges","preventDefault","stopPropagation","cell","getCellFromEvent","canCellBeActive","selection","idx","inArray","setActiveCell","grep","o","last","pop","Math","min","max","stopImmediatePropagation","Event","module","exports"],"mappings":"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","sourcesContent":["  \"use strict\";\n  var $ = require(\"../slick.jquery\");\n  var Slick = require(\"../slick.core\");\n\n  function RowSelectionModel(options) {\n    var _grid;\n    var _ranges = [];\n    var _self = this;\n    var _handler = new Slick.EventHandler();\n    var _inHandler;\n    var _options;\n    var _defaults = {\n      selectActiveRow: true\n    };\n\n    function init(grid) {\n      _options = $.extend(true, {}, _defaults, options);\n      _grid = grid;\n      _handler.subscribe(_grid.onActiveCellChanged,\n          wrapHandler(handleActiveCellChange));\n      _handler.subscribe(_grid.onKeyDown,\n          wrapHandler(handleKeyDown));\n      _handler.subscribe(_grid.onClick,\n          wrapHandler(handleClick));\n    }\n\n    function destroy() {\n      _handler.unsubscribeAll();\n    }\n\n    function wrapHandler(handler) {\n      return function () {\n        if (!_inHandler) {\n          _inHandler = true;\n          handler.apply(this, arguments);\n          _inHandler = false;\n        }\n      };\n    }\n\n    function rangesToRows(ranges) {\n      var rows = [];\n      for (var i = 0; i < ranges.length; i++) {\n        for (var j = ranges[i].fromRow; j <= ranges[i].toRow; j++) {\n          rows.push(j);\n        }\n      }\n      return rows;\n    }\n\n    function rowsToRanges(rows) {\n      var ranges = [];\n      var lastCell = _grid.getColumns().length - 1;\n      for (var i = 0; i < rows.length; i++) {\n        ranges.push(new Slick.Range(rows[i], 0, rows[i], lastCell));\n      }\n      return ranges;\n    }\n\n    function getRowsRange(from, to) {\n      var i, rows = [];\n      for (i = from; i <= to; i++) {\n        rows.push(i);\n      }\n      for (i = to; i < from; i++) {\n        rows.push(i);\n      }\n      return rows;\n    }\n\n    function getSelectedRows() {\n      return rangesToRows(_ranges);\n    }\n\n    function setSelectedRows(rows) {\n      setSelectedRanges(rowsToRanges(rows));\n    }\n\n    function setSelectedRanges(ranges) {\n      // simple check for: empty selection didn't change, prevent firing onSelectedRangesChanged\n      if ((!_ranges || _ranges.length === 0) && (!ranges || ranges.length === 0)) { return; }\n      _ranges = ranges;\n      _self.onSelectedRangesChanged.notify(_ranges);\n    }\n\n    function getSelectedRanges() {\n      return _ranges;\n    }\n\n    function handleActiveCellChange(e, data) {\n      if (_options.selectActiveRow && data.row != null) {\n        setSelectedRanges([new Slick.Range(data.row, 0, data.row, _grid.getColumns().length - 1)]);\n      }\n    }\n\n    function handleKeyDown(e) {\n      var activeRow = _grid.getActiveCell();\n      if (_grid.getOptions().multiSelect && activeRow \n      && e.shiftKey && !e.ctrlKey && !e.altKey && !e.metaKey \n      && (e.which == Slick.keyCode.UP || e.which == Slick.keyCode.DOWN)) {\n        var selectedRows = getSelectedRows();\n        selectedRows.sort(function (x, y) {\n          return x - y\n        });\n\n        if (!selectedRows.length) {\n          selectedRows = [activeRow.row];\n        }\n\n        var top = selectedRows[0];\n        var bottom = selectedRows[selectedRows.length - 1];\n        var active;\n\n        if (e.which == Slick.keyCode.DOWN) {\n          active = activeRow.row < bottom || top == bottom ? ++bottom : ++top;\n        } else {\n          active = activeRow.row < bottom ? --bottom : --top;\n        }\n\n        if (active >= 0 && active < _grid.getDataLength()) {\n          _grid.scrollRowIntoView(active);\n          var tempRanges = rowsToRanges(getRowsRange(top, bottom));\n          setSelectedRanges(tempRanges);\n        }\n\n        e.preventDefault();\n        e.stopPropagation();\n      }\n    }\n\n    function handleClick(e) {\n      var cell = _grid.getCellFromEvent(e);\n      if (!cell || !_grid.canCellBeActive(cell.row, cell.cell)) {\n        return false;\n      }\n\n      if (!_grid.getOptions().multiSelect || (\n          !e.ctrlKey && !e.shiftKey && !e.metaKey)) {\n        return false;\n      }\n\n      var selection = rangesToRows(_ranges);\n      var idx = $.inArray(cell.row, selection);\n\n      if (idx === -1 && (e.ctrlKey || e.metaKey)) {\n        selection.push(cell.row);\n        _grid.setActiveCell(cell.row, cell.cell);\n      } else if (idx !== -1 && (e.ctrlKey || e.metaKey)) {\n        selection = $.grep(selection, function (o, i) {\n          return (o !== cell.row);\n        });\n        _grid.setActiveCell(cell.row, cell.cell);\n      } else if (selection.length && e.shiftKey) {\n        var last = selection.pop();\n        var from = Math.min(cell.row, last);\n        var to = Math.max(cell.row, last);\n        selection = [];\n        for (var i = from; i <= to; i++) {\n          if (i !== last) {\n            selection.push(i);\n          }\n        }\n        selection.push(last);\n        _grid.setActiveCell(cell.row, cell.cell);\n      }\n\n      var tempRanges = rowsToRanges(selection);\n      setSelectedRanges(tempRanges);\n      e.stopImmediatePropagation();\n\n      return true;\n    }\n\n    $.extend(this, {\n      \"getSelectedRows\": getSelectedRows,\n      \"setSelectedRows\": setSelectedRows,\n\n      \"getSelectedRanges\": getSelectedRanges,\n      \"setSelectedRanges\": setSelectedRanges,\n\n      \"init\": init,\n      \"destroy\": destroy,\n\n      \"onSelectedRangesChanged\": new Slick.Event()\n    });\n  }\n\n  module.exports = {\n      \"RowSelectionModel\": RowSelectionModel\n  };\n"]},"metadata":{},"sourceType":"script"}