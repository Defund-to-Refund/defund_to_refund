{"ast":null,"code":"import * as p from \"../../core/properties\";\nimport { includes, sort_by } from \"../../core/util/array\";\nimport { ToolbarBase } from \"./toolbar_base\";\nimport { ToolProxy } from \"./tool_proxy\";\nimport { LayoutDOM, LayoutDOMView } from \"../layouts/layout_dom\";\nimport { ContentBox } from \"../../core/layout\";\nexport class ProxyToolbar extends ToolbarBase {\n  constructor(attrs) {\n    super(attrs);\n  }\n\n  static init_ProxyToolbar() {\n    this.define({\n      toolbars: [p.Array, []]\n    });\n  }\n\n  initialize() {\n    super.initialize();\n\n    this._merge_tools();\n  }\n\n  _merge_tools() {\n    // Go through all the tools on the toolbar and replace them with\n    // a proxy e.g. PanTool, BoxSelectTool, etc.\n    this._proxied_tools = [];\n    const inspectors = {};\n    const actions = {};\n    const gestures = {};\n    const new_help_tools = [];\n    const new_help_urls = [];\n\n    for (const helptool of this.help) {\n      if (!includes(new_help_urls, helptool.redirect)) {\n        new_help_tools.push(helptool);\n        new_help_urls.push(helptool.redirect);\n      }\n    }\n\n    this._proxied_tools.push(...new_help_tools);\n\n    this.help = new_help_tools;\n\n    for (const event_type in this.gestures) {\n      const gesture = this.gestures[event_type];\n\n      if (!(event_type in gestures)) {\n        gestures[event_type] = {};\n      }\n\n      for (const tool of gesture.tools) {\n        if (!(tool.type in gestures[event_type])) {\n          gestures[event_type][tool.type] = [];\n        }\n\n        gestures[event_type][tool.type].push(tool);\n      }\n    }\n\n    for (const tool of this.inspectors) {\n      if (!(tool.type in inspectors)) {\n        inspectors[tool.type] = [];\n      }\n\n      inspectors[tool.type].push(tool);\n    }\n\n    for (const tool of this.actions) {\n      if (!(tool.type in actions)) {\n        actions[tool.type] = [];\n      }\n\n      actions[tool.type].push(tool);\n    } // Add a proxy for each of the groups of tools.\n\n\n    const make_proxy = (tools, active = false) => {\n      const proxy = new ToolProxy({\n        tools,\n        active\n      });\n\n      this._proxied_tools.push(proxy);\n\n      return proxy;\n    };\n\n    for (const event_type in gestures) {\n      const gesture = this.gestures[event_type];\n      gesture.tools = [];\n\n      for (const tool_type in gestures[event_type]) {\n        const tools = gestures[event_type][tool_type];\n\n        if (tools.length > 0) {\n          if (event_type == 'multi') {\n            for (const tool of tools) {\n              const proxy = make_proxy([tool]);\n              gesture.tools.push(proxy);\n              this.connect(proxy.properties.active.change, this._active_change.bind(this, proxy));\n            }\n          } else {\n            const proxy = make_proxy(tools);\n            gesture.tools.push(proxy);\n            this.connect(proxy.properties.active.change, this._active_change.bind(this, proxy));\n          }\n        }\n      }\n    }\n\n    this.actions = [];\n\n    for (const tool_type in actions) {\n      const tools = actions[tool_type];\n\n      if (tool_type == 'CustomAction') {\n        for (const tool of tools) this.actions.push(make_proxy([tool]));\n      } else if (tools.length > 0) {\n        this.actions.push(make_proxy(tools)); // XXX\n      }\n    }\n\n    this.inspectors = [];\n\n    for (const tool_type in inspectors) {\n      const tools = inspectors[tool_type];\n      if (tools.length > 0) this.inspectors.push(make_proxy(tools, true)); // XXX\n    }\n\n    for (const et in this.gestures) {\n      const gesture = this.gestures[et];\n      if (gesture.tools.length == 0) continue;\n      gesture.tools = sort_by(gesture.tools, tool => tool.default_order);\n      if (!(et == 'pinch' || et == 'scroll' || et == 'multi')) gesture.tools[0].active = true;\n    }\n  }\n\n}\nProxyToolbar.__name__ = \"ProxyToolbar\";\nProxyToolbar.init_ProxyToolbar();\nexport class ToolbarBoxView extends LayoutDOMView {\n  initialize() {\n    this.model.toolbar.toolbar_location = this.model.toolbar_location;\n    super.initialize();\n  }\n\n  get child_models() {\n    return [this.model.toolbar]; // XXX\n  }\n\n  _update_layout() {\n    this.layout = new ContentBox(this.child_views[0].el);\n    const {\n      toolbar\n    } = this.model;\n\n    if (toolbar.horizontal) {\n      this.layout.set_sizing({\n        width_policy: \"fit\",\n        min_width: 100,\n        height_policy: \"fixed\"\n      });\n    } else {\n      this.layout.set_sizing({\n        width_policy: \"fixed\",\n        height_policy: \"fit\",\n        min_height: 100\n      });\n    }\n  }\n\n}\nToolbarBoxView.__name__ = \"ToolbarBoxView\";\nexport class ToolbarBox extends LayoutDOM {\n  constructor(attrs) {\n    super(attrs);\n  }\n\n  static init_ToolbarBox() {\n    this.prototype.default_view = ToolbarBoxView;\n    this.define({\n      toolbar: [p.Instance],\n      toolbar_location: [p.Location, \"right\"]\n    });\n  }\n\n}\nToolbarBox.__name__ = \"ToolbarBox\";\nToolbarBox.init_ToolbarBox();","map":{"version":3,"sources":["/Users/gen/Desktop/defund_to_refund/node_modules/@bokeh/bokehjs/build/js/lib/models/tools/toolbar_box.js"],"names":["p","includes","sort_by","ToolbarBase","ToolProxy","LayoutDOM","LayoutDOMView","ContentBox","ProxyToolbar","constructor","attrs","init_ProxyToolbar","define","toolbars","Array","initialize","_merge_tools","_proxied_tools","inspectors","actions","gestures","new_help_tools","new_help_urls","helptool","help","redirect","push","event_type","gesture","tool","tools","type","make_proxy","active","proxy","tool_type","length","connect","properties","change","_active_change","bind","et","default_order","__name__","ToolbarBoxView","model","toolbar","toolbar_location","child_models","_update_layout","layout","child_views","el","horizontal","set_sizing","width_policy","min_width","height_policy","min_height","ToolbarBox","init_ToolbarBox","prototype","default_view","Instance","Location"],"mappings":"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","sourcesContent":["import * as p from \"../../core/properties\";\nimport { includes, sort_by } from \"../../core/util/array\";\nimport { ToolbarBase } from \"./toolbar_base\";\nimport { ToolProxy } from \"./tool_proxy\";\nimport { LayoutDOM, LayoutDOMView } from \"../layouts/layout_dom\";\nimport { ContentBox } from \"../../core/layout\";\nexport class ProxyToolbar extends ToolbarBase {\n    constructor(attrs) {\n        super(attrs);\n    }\n    static init_ProxyToolbar() {\n        this.define({\n            toolbars: [p.Array, []],\n        });\n    }\n    initialize() {\n        super.initialize();\n        this._merge_tools();\n    }\n    _merge_tools() {\n        // Go through all the tools on the toolbar and replace them with\n        // a proxy e.g. PanTool, BoxSelectTool, etc.\n        this._proxied_tools = [];\n        const inspectors = {};\n        const actions = {};\n        const gestures = {};\n        const new_help_tools = [];\n        const new_help_urls = [];\n        for (const helptool of this.help) {\n            if (!includes(new_help_urls, helptool.redirect)) {\n                new_help_tools.push(helptool);\n                new_help_urls.push(helptool.redirect);\n            }\n        }\n        this._proxied_tools.push(...new_help_tools);\n        this.help = new_help_tools;\n        for (const event_type in this.gestures) {\n            const gesture = this.gestures[event_type];\n            if (!(event_type in gestures)) {\n                gestures[event_type] = {};\n            }\n            for (const tool of gesture.tools) {\n                if (!(tool.type in gestures[event_type])) {\n                    gestures[event_type][tool.type] = [];\n                }\n                gestures[event_type][tool.type].push(tool);\n            }\n        }\n        for (const tool of this.inspectors) {\n            if (!(tool.type in inspectors)) {\n                inspectors[tool.type] = [];\n            }\n            inspectors[tool.type].push(tool);\n        }\n        for (const tool of this.actions) {\n            if (!(tool.type in actions)) {\n                actions[tool.type] = [];\n            }\n            actions[tool.type].push(tool);\n        }\n        // Add a proxy for each of the groups of tools.\n        const make_proxy = (tools, active = false) => {\n            const proxy = new ToolProxy({ tools, active });\n            this._proxied_tools.push(proxy);\n            return proxy;\n        };\n        for (const event_type in gestures) {\n            const gesture = this.gestures[event_type];\n            gesture.tools = [];\n            for (const tool_type in gestures[event_type]) {\n                const tools = gestures[event_type][tool_type];\n                if (tools.length > 0) {\n                    if (event_type == 'multi') {\n                        for (const tool of tools) {\n                            const proxy = make_proxy([tool]);\n                            gesture.tools.push(proxy);\n                            this.connect(proxy.properties.active.change, this._active_change.bind(this, proxy));\n                        }\n                    }\n                    else {\n                        const proxy = make_proxy(tools);\n                        gesture.tools.push(proxy);\n                        this.connect(proxy.properties.active.change, this._active_change.bind(this, proxy));\n                    }\n                }\n            }\n        }\n        this.actions = [];\n        for (const tool_type in actions) {\n            const tools = actions[tool_type];\n            if (tool_type == 'CustomAction') {\n                for (const tool of tools)\n                    this.actions.push(make_proxy([tool]));\n            }\n            else if (tools.length > 0) {\n                this.actions.push(make_proxy(tools)); // XXX\n            }\n        }\n        this.inspectors = [];\n        for (const tool_type in inspectors) {\n            const tools = inspectors[tool_type];\n            if (tools.length > 0)\n                this.inspectors.push(make_proxy(tools, true)); // XXX\n        }\n        for (const et in this.gestures) {\n            const gesture = this.gestures[et];\n            if (gesture.tools.length == 0)\n                continue;\n            gesture.tools = sort_by(gesture.tools, (tool) => tool.default_order);\n            if (!(et == 'pinch' || et == 'scroll' || et == 'multi'))\n                gesture.tools[0].active = true;\n        }\n    }\n}\nProxyToolbar.__name__ = \"ProxyToolbar\";\nProxyToolbar.init_ProxyToolbar();\nexport class ToolbarBoxView extends LayoutDOMView {\n    initialize() {\n        this.model.toolbar.toolbar_location = this.model.toolbar_location;\n        super.initialize();\n    }\n    get child_models() {\n        return [this.model.toolbar]; // XXX\n    }\n    _update_layout() {\n        this.layout = new ContentBox(this.child_views[0].el);\n        const { toolbar } = this.model;\n        if (toolbar.horizontal) {\n            this.layout.set_sizing({\n                width_policy: \"fit\", min_width: 100, height_policy: \"fixed\",\n            });\n        }\n        else {\n            this.layout.set_sizing({\n                width_policy: \"fixed\", height_policy: \"fit\", min_height: 100,\n            });\n        }\n    }\n}\nToolbarBoxView.__name__ = \"ToolbarBoxView\";\nexport class ToolbarBox extends LayoutDOM {\n    constructor(attrs) {\n        super(attrs);\n    }\n    static init_ToolbarBox() {\n        this.prototype.default_view = ToolbarBoxView;\n        this.define({\n            toolbar: [p.Instance],\n            toolbar_location: [p.Location, \"right\"],\n        });\n    }\n}\nToolbarBox.__name__ = \"ToolbarBox\";\nToolbarBox.init_ToolbarBox();\n//# sourceMappingURL=toolbar_box.js.map"]},"metadata":{},"sourceType":"module"}