{"ast":null,"code":"import { HasProps } from \"../core/has_props\";\nexport class DocumentChangedEvent {\n  constructor(document) {\n    this.document = document;\n  }\n\n}\nDocumentChangedEvent.__name__ = \"DocumentChangedEvent\";\nexport class MessageSentEvent extends DocumentChangedEvent {\n  constructor(document, msg_type, msg_data) {\n    super(document);\n    this.msg_type = msg_type;\n    this.msg_data = msg_data;\n  }\n\n  json(_references) {\n    const value = this.msg_data;\n\n    const value_json = HasProps._value_to_json(\"\", value, null);\n\n    const value_refs = {};\n\n    HasProps._value_record_references(value, value_refs, true);\n    /* XXX: this will cause all referenced models to be reinitialized\n    for (const id in value_refs) {\n      references[id] = value_refs[id]\n    }\n    */\n\n\n    return {\n      kind: \"MessageSent\",\n      msg_type: this.msg_type,\n      msg_data: value_json\n    };\n  }\n\n}\nMessageSentEvent.__name__ = \"MessageSentEvent\";\nexport class ModelChangedEvent extends DocumentChangedEvent {\n  constructor(document, model, attr, old, new_, setter_id, hint) {\n    super(document);\n    this.model = model;\n    this.attr = attr;\n    this.old = old;\n    this.new_ = new_;\n    this.setter_id = setter_id;\n    this.hint = hint;\n  }\n\n  json(references) {\n    if (this.attr === \"id\") {\n      throw new Error(\"'id' field should never change, whatever code just set it is wrong\");\n    }\n\n    if (this.hint != null) return this.hint.json(references);\n    const value = this.new_;\n\n    const value_json = HasProps._value_to_json(this.attr, value, this.model);\n\n    const value_refs = {};\n\n    HasProps._value_record_references(value, value_refs, true); // true = recurse\n\n\n    if (this.model.id in value_refs && this.model !== value) {\n      // we know we don't want a whole new copy of the obj we're\n      // patching unless it's also the value itself\n      delete value_refs[this.model.id];\n    }\n\n    for (const id in value_refs) {\n      references[id] = value_refs[id];\n    }\n\n    return {\n      kind: \"ModelChanged\",\n      model: this.model.ref(),\n      attr: this.attr,\n      new: value_json\n    };\n  }\n\n}\nModelChangedEvent.__name__ = \"ModelChangedEvent\";\nexport class ColumnsPatchedEvent extends DocumentChangedEvent {\n  constructor(document, column_source, patches) {\n    super(document);\n    this.column_source = column_source;\n    this.patches = patches;\n  }\n\n  json(_references) {\n    return {\n      kind: \"ColumnsPatched\",\n      column_source: this.column_source,\n      patches: this.patches\n    };\n  }\n\n}\nColumnsPatchedEvent.__name__ = \"ColumnsPatchedEvent\";\nexport class ColumnsStreamedEvent extends DocumentChangedEvent {\n  constructor(document, column_source, data, rollover) {\n    super(document);\n    this.column_source = column_source;\n    this.data = data;\n    this.rollover = rollover;\n  }\n\n  json(_references) {\n    return {\n      kind: \"ColumnsStreamed\",\n      column_source: this.column_source,\n      data: this.data,\n      rollover: this.rollover\n    };\n  }\n\n}\nColumnsStreamedEvent.__name__ = \"ColumnsStreamedEvent\";\nexport class TitleChangedEvent extends DocumentChangedEvent {\n  constructor(document, title, setter_id) {\n    super(document);\n    this.title = title;\n    this.setter_id = setter_id;\n  }\n\n  json(_references) {\n    return {\n      kind: \"TitleChanged\",\n      title: this.title\n    };\n  }\n\n}\nTitleChangedEvent.__name__ = \"TitleChangedEvent\";\nexport class RootAddedEvent extends DocumentChangedEvent {\n  constructor(document, model, setter_id) {\n    super(document);\n    this.model = model;\n    this.setter_id = setter_id;\n  }\n\n  json(references) {\n    HasProps._value_record_references(this.model, references, true);\n\n    return {\n      kind: \"RootAdded\",\n      model: this.model.ref()\n    };\n  }\n\n}\nRootAddedEvent.__name__ = \"RootAddedEvent\";\nexport class RootRemovedEvent extends DocumentChangedEvent {\n  constructor(document, model, setter_id) {\n    super(document);\n    this.model = model;\n    this.setter_id = setter_id;\n  }\n\n  json(_references) {\n    return {\n      kind: \"RootRemoved\",\n      model: this.model.ref()\n    };\n  }\n\n}\nRootRemovedEvent.__name__ = \"RootRemovedEvent\";","map":{"version":3,"sources":["/Users/gen/Desktop/defund_to_refund/node_modules/@bokeh/bokehjs/build/js/lib/document/events.js"],"names":["HasProps","DocumentChangedEvent","constructor","document","__name__","MessageSentEvent","msg_type","msg_data","json","_references","value","value_json","_value_to_json","value_refs","_value_record_references","kind","ModelChangedEvent","model","attr","old","new_","setter_id","hint","references","Error","id","ref","new","ColumnsPatchedEvent","column_source","patches","ColumnsStreamedEvent","data","rollover","TitleChangedEvent","title","RootAddedEvent","RootRemovedEvent"],"mappings":"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","sourcesContent":["import { HasProps } from \"../core/has_props\";\nexport class DocumentChangedEvent {\n    constructor(document) {\n        this.document = document;\n    }\n}\nDocumentChangedEvent.__name__ = \"DocumentChangedEvent\";\nexport class MessageSentEvent extends DocumentChangedEvent {\n    constructor(document, msg_type, msg_data) {\n        super(document);\n        this.msg_type = msg_type;\n        this.msg_data = msg_data;\n    }\n    json(_references) {\n        const value = this.msg_data;\n        const value_json = HasProps._value_to_json(\"\", value, null);\n        const value_refs = {};\n        HasProps._value_record_references(value, value_refs, true);\n        /* XXX: this will cause all referenced models to be reinitialized\n        for (const id in value_refs) {\n          references[id] = value_refs[id]\n        }\n        */\n        return {\n            kind: \"MessageSent\",\n            msg_type: this.msg_type,\n            msg_data: value_json,\n        };\n    }\n}\nMessageSentEvent.__name__ = \"MessageSentEvent\";\nexport class ModelChangedEvent extends DocumentChangedEvent {\n    constructor(document, model, attr, old, new_, setter_id, hint) {\n        super(document);\n        this.model = model;\n        this.attr = attr;\n        this.old = old;\n        this.new_ = new_;\n        this.setter_id = setter_id;\n        this.hint = hint;\n    }\n    json(references) {\n        if (this.attr === \"id\") {\n            throw new Error(\"'id' field should never change, whatever code just set it is wrong\");\n        }\n        if (this.hint != null)\n            return this.hint.json(references);\n        const value = this.new_;\n        const value_json = HasProps._value_to_json(this.attr, value, this.model);\n        const value_refs = {};\n        HasProps._value_record_references(value, value_refs, true); // true = recurse\n        if (this.model.id in value_refs && this.model !== value) {\n            // we know we don't want a whole new copy of the obj we're\n            // patching unless it's also the value itself\n            delete value_refs[this.model.id];\n        }\n        for (const id in value_refs) {\n            references[id] = value_refs[id];\n        }\n        return {\n            kind: \"ModelChanged\",\n            model: this.model.ref(),\n            attr: this.attr,\n            new: value_json,\n        };\n    }\n}\nModelChangedEvent.__name__ = \"ModelChangedEvent\";\nexport class ColumnsPatchedEvent extends DocumentChangedEvent {\n    constructor(document, column_source, patches) {\n        super(document);\n        this.column_source = column_source;\n        this.patches = patches;\n    }\n    json(_references) {\n        return {\n            kind: \"ColumnsPatched\",\n            column_source: this.column_source,\n            patches: this.patches,\n        };\n    }\n}\nColumnsPatchedEvent.__name__ = \"ColumnsPatchedEvent\";\nexport class ColumnsStreamedEvent extends DocumentChangedEvent {\n    constructor(document, column_source, data, rollover) {\n        super(document);\n        this.column_source = column_source;\n        this.data = data;\n        this.rollover = rollover;\n    }\n    json(_references) {\n        return {\n            kind: \"ColumnsStreamed\",\n            column_source: this.column_source,\n            data: this.data,\n            rollover: this.rollover,\n        };\n    }\n}\nColumnsStreamedEvent.__name__ = \"ColumnsStreamedEvent\";\nexport class TitleChangedEvent extends DocumentChangedEvent {\n    constructor(document, title, setter_id) {\n        super(document);\n        this.title = title;\n        this.setter_id = setter_id;\n    }\n    json(_references) {\n        return {\n            kind: \"TitleChanged\",\n            title: this.title,\n        };\n    }\n}\nTitleChangedEvent.__name__ = \"TitleChangedEvent\";\nexport class RootAddedEvent extends DocumentChangedEvent {\n    constructor(document, model, setter_id) {\n        super(document);\n        this.model = model;\n        this.setter_id = setter_id;\n    }\n    json(references) {\n        HasProps._value_record_references(this.model, references, true);\n        return {\n            kind: \"RootAdded\",\n            model: this.model.ref(),\n        };\n    }\n}\nRootAddedEvent.__name__ = \"RootAddedEvent\";\nexport class RootRemovedEvent extends DocumentChangedEvent {\n    constructor(document, model, setter_id) {\n        super(document);\n        this.model = model;\n        this.setter_id = setter_id;\n    }\n    json(_references) {\n        return {\n            kind: \"RootRemoved\",\n            model: this.model.ref(),\n        };\n    }\n}\nRootRemovedEvent.__name__ = \"RootRemovedEvent\";\n//# sourceMappingURL=events.js.map"]},"metadata":{},"sourceType":"module"}