{"ast":null,"code":"import { Expression } from \"./expression\";\nimport * as p from \"../../core/properties\";\nexport class Stack extends Expression {\n  constructor(attrs) {\n    super(attrs);\n  }\n\n  static init_Stack() {\n    this.define({\n      fields: [p.Array, []]\n    });\n  }\n\n  _v_compute(source) {\n    var _a;\n\n    const n = (_a = source.get_length()) !== null && _a !== void 0 ? _a : 0;\n    const result = new Float64Array(n);\n\n    for (const f of this.fields) {\n      const column = source.data[f];\n\n      if (column != null) {\n        for (let i = 0, k = Math.min(n, column.length); i < k; i++) {\n          result[i] += column[i];\n        }\n      }\n    }\n\n    return result;\n  }\n\n}\nStack.__name__ = \"Stack\";\nStack.init_Stack();","map":{"version":3,"sources":["/Users/gen/Desktop/defund_to_refund/node_modules/@bokeh/bokehjs/build/js/lib/models/expressions/stack.js"],"names":["Expression","p","Stack","constructor","attrs","init_Stack","define","fields","Array","_v_compute","source","_a","n","get_length","result","Float64Array","f","column","data","i","k","Math","min","length","__name__"],"mappings":"AAAA,SAASA,UAAT,QAA2B,cAA3B;AACA,OAAO,KAAKC,CAAZ,MAAmB,uBAAnB;AACA,OAAO,MAAMC,KAAN,SAAoBF,UAApB,CAA+B;AAClCG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACH;;AACD,SAAOC,UAAP,GAAoB;AAChB,SAAKC,MAAL,CAAY;AACRC,MAAAA,MAAM,EAAE,CAACN,CAAC,CAACO,KAAH,EAAU,EAAV;AADA,KAAZ;AAGH;;AACDC,EAAAA,UAAU,CAACC,MAAD,EAAS;AACf,QAAIC,EAAJ;;AACA,UAAMC,CAAC,GAAG,CAACD,EAAE,GAAGD,MAAM,CAACG,UAAP,EAAN,MAA+B,IAA/B,IAAuCF,EAAE,KAAK,KAAK,CAAnD,GAAuDA,EAAvD,GAA4D,CAAtE;AACA,UAAMG,MAAM,GAAG,IAAIC,YAAJ,CAAiBH,CAAjB,CAAf;;AACA,SAAK,MAAMI,CAAX,IAAgB,KAAKT,MAArB,EAA6B;AACzB,YAAMU,MAAM,GAAGP,MAAM,CAACQ,IAAP,CAAYF,CAAZ,CAAf;;AACA,UAAIC,MAAM,IAAI,IAAd,EAAoB;AAChB,aAAK,IAAIE,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGC,IAAI,CAACC,GAAL,CAASV,CAAT,EAAYK,MAAM,CAACM,MAAnB,CAApB,EAAgDJ,CAAC,GAAGC,CAApD,EAAuDD,CAAC,EAAxD,EAA4D;AACxDL,UAAAA,MAAM,CAACK,CAAD,CAAN,IAAaF,MAAM,CAACE,CAAD,CAAnB;AACH;AACJ;AACJ;;AACD,WAAOL,MAAP;AACH;;AAtBiC;AAwBtCZ,KAAK,CAACsB,QAAN,GAAiB,OAAjB;AACAtB,KAAK,CAACG,UAAN","sourcesContent":["import { Expression } from \"./expression\";\nimport * as p from \"../../core/properties\";\nexport class Stack extends Expression {\n    constructor(attrs) {\n        super(attrs);\n    }\n    static init_Stack() {\n        this.define({\n            fields: [p.Array, []],\n        });\n    }\n    _v_compute(source) {\n        var _a;\n        const n = (_a = source.get_length()) !== null && _a !== void 0 ? _a : 0;\n        const result = new Float64Array(n);\n        for (const f of this.fields) {\n            const column = source.data[f];\n            if (column != null) {\n                for (let i = 0, k = Math.min(n, column.length); i < k; i++) {\n                    result[i] += column[i];\n                }\n            }\n        }\n        return result;\n    }\n}\nStack.__name__ = \"Stack\";\nStack.init_Stack();\n//# sourceMappingURL=stack.js.map"]},"metadata":{},"sourceType":"module"}