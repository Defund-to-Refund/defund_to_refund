{"ast":null,"code":"var _jsxFileName = \"/Users/adaguo/Documents/Sam/blm-hackathon/defund_to_refund/src/components/sliderBar.js\";\nimport React, { useState } from 'react';\nimport { Slider, Rail, Handles, Tracks, Ticks } from \"react-compound-slider\";\n\nfunction Handle({\n  handle: {\n    id,\n    value,\n    percent\n  },\n  getHandleProps,\n  handlePercentage,\n  idx\n}) {\n  // console.log(getHandleProps)\n  return /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    style: {\n      left: `${percent}%`,\n      position: 'absolute',\n      marginLeft: -15,\n      marginTop: 25,\n      zIndex: 2,\n      width: 30,\n      height: 30,\n      border: 0,\n      textAlign: 'center',\n      cursor: 'pointer',\n      borderRadius: '50%',\n      backgroundColor: '#2C4870',\n      color: 'white'\n    }\n  }, getHandleProps(id), {\n    onMouseUp: e => handlePercentage(e, value),\n    id: idx,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      fontFamily: 'Roboto',\n      fontSize: 15,\n      marginTop: -20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, value));\n}\n\nfunction Track({\n  source,\n  target,\n  getTrackProps\n}) {\n  return /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    style: {\n      position: 'absolute',\n      height: 10,\n      zIndex: 1,\n      marginTop: 35,\n      backgroundColor: '#546C91',\n      borderRadius: 5,\n      cursor: 'pointer',\n      left: `${source.percent}%`,\n      width: `${target.percent - source.percent}%`\n    }\n  }, getTrackProps()\n  /* this will set up events if you want it to be clickeable (optional) */\n  , {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }));\n}\n\nfunction SliderBar({\n  handlePercentage,\n  idx\n}) {\n  const sliderStyle = {\n    // Give the slider some width\n    position: 'relative',\n    width: '20rem',\n    height: 80,\n    // border: '1px solid steelblue',\n    margin: '0 2rem 0 2rem'\n  };\n  const railStyle = {\n    position: 'absolute',\n    width: '100%',\n    height: 10,\n    marginTop: 35,\n    borderRadius: 5,\n    backgroundColor: '#8B9CB6'\n  };\n  return /*#__PURE__*/React.createElement(Slider, {\n    rootStyle: sliderStyle\n    /* inline styles for the outer div. Can also use className prop. */\n    ,\n    domain: [0, 100],\n    values: [0],\n    step: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: railStyle\n    /* Add a rail as a child.  Later we'll make it interactive. */\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Handles, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, ({\n    handles,\n    getHandleProps\n  }) => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"slider-handles\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }, handles.map(handle => /*#__PURE__*/React.createElement(Handle, {\n    key: handle.id,\n    handle: handle,\n    getHandleProps: getHandleProps,\n    handlePercentage: handlePercentage,\n    idx: idx,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(Tracks, {\n    right: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, ({\n    tracks,\n    getTrackProps\n  }) => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"slider-tracks\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, tracks.map(({\n    id,\n    source,\n    target\n  }) => /*#__PURE__*/React.createElement(Track, {\n    key: id,\n    source: source,\n    target: target,\n    getTrackProps: getTrackProps,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  })))));\n}\n\nexport default SliderBar;","map":{"version":3,"sources":["/Users/adaguo/Documents/Sam/blm-hackathon/defund_to_refund/src/components/sliderBar.js"],"names":["React","useState","Slider","Rail","Handles","Tracks","Ticks","Handle","handle","id","value","percent","getHandleProps","handlePercentage","idx","left","position","marginLeft","marginTop","zIndex","width","height","border","textAlign","cursor","borderRadius","backgroundColor","color","e","fontFamily","fontSize","Track","source","target","getTrackProps","SliderBar","sliderStyle","margin","railStyle","handles","map","tracks"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { Slider, Rail, Handles, Tracks, Ticks } from \"react-compound-slider\";\n\nfunction Handle({ handle: { id, value, percent }, getHandleProps, handlePercentage, idx }) {\n  // console.log(getHandleProps)\n  return (\n    <div\n      style={{\n        left: `${percent}%`,\n        position: 'absolute',\n        marginLeft: -15,\n        marginTop: 25,\n        zIndex: 2,\n        width: 30,\n        height: 30,\n        border: 0,\n        textAlign: 'center',\n        cursor: 'pointer',\n        borderRadius: '50%',\n        backgroundColor: '#2C4870',\n        color: 'white',\n      }}\n      {...getHandleProps(id)}\n     onMouseUp={e => handlePercentage(e, value)}\n     id={idx}\n    >\n      <div style={{ fontFamily: 'Roboto', fontSize: 15, marginTop: -20 }}>\n        {value}\n      </div>\n    </div>\n  )\n}\n\nfunction Track({ source, target, getTrackProps }) {\n  return (\n    <div\n      style={{\n        position: 'absolute',\n        height: 10,\n        zIndex: 1,\n        marginTop: 35,\n        backgroundColor: '#546C91',\n        borderRadius: 5,\n        cursor: 'pointer',\n        left: `${source.percent}%`,\n        width: `${target.percent - source.percent}%`,\n      }}\n      {...getTrackProps() /* this will set up events if you want it to be clickeable (optional) */}\n    />\n  )\n}\n\nfunction SliderBar({ handlePercentage, idx }) {\n  const sliderStyle = {  // Give the slider some width\n    position: 'relative',\n    width: '20rem',\n    height: 80,\n    // border: '1px solid steelblue',\n    margin: '0 2rem 0 2rem'\n  }\n\n  const railStyle = {\n    position: 'absolute',\n    width: '100%',\n    height: 10,\n    marginTop: 35,\n    borderRadius: 5,\n    backgroundColor: '#8B9CB6',\n  }\n\n  return (\n    <Slider\n      rootStyle={sliderStyle /* inline styles for the outer div. Can also use className prop. */}\n      domain={[0, 100]}\n      values={[0]}\n      step={1}\n    >\n      <div style={railStyle /* Add a rail as a child.  Later we'll make it interactive. */} />\n      <Handles>\n        {({ handles, getHandleProps }) => (\n          <div className=\"slider-handles\">\n            {handles.map(handle => (\n              <Handle\n                key={handle.id}\n                handle={handle}\n                getHandleProps={getHandleProps}\n                handlePercentage={handlePercentage}\n                idx={idx}\n              />\n            ))}\n          </div>\n        )}\n      </Handles>\n      <Tracks right={false}>\n      {({ tracks, getTrackProps }) => (\n        <div className=\"slider-tracks\">\n          {tracks.map(({ id, source, target }) => (\n            <Track\n              key={id}\n              source={source}\n              target={target}\n              getTrackProps={getTrackProps}\n            />\n          ))}\n        </div>\n      )}\n    </Tracks>\n    </Slider>\n  )\n}\n\nexport default SliderBar\n"]},"metadata":{},"sourceType":"module"}