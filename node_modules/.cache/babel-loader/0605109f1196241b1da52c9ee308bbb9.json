{"ast":null,"code":"import { Signal0 } from \"../../core/signaling\";\nimport { div, remove } from \"../../core/dom\";\nimport { wgs84_mercator } from \"../../core/util/projections\";\nimport { PlotView } from \"./plot_canvas\";\nconst gmaps_ready = new Signal0({}, \"gmaps_ready\");\n\nconst load_google_api = function (api_key) {\n  window._bokeh_gmaps_callback = () => gmaps_ready.emit();\n\n  const script = document.createElement('script');\n  script.type = 'text/javascript';\n  script.src = `https://maps.googleapis.com/maps/api/js?v=3.36&key=${api_key}&callback=_bokeh_gmaps_callback`;\n  document.body.appendChild(script);\n};\n\nexport class GMapPlotView extends PlotView {\n  initialize() {\n    this.pause();\n    super.initialize();\n    this._tiles_loaded = false;\n    this.zoom_count = 0;\n    const {\n      zoom,\n      lat,\n      lng\n    } = this.model.map_options;\n    this.initial_zoom = zoom;\n    this.initial_lat = lat;\n    this.initial_lng = lng;\n\n    if (typeof google === \"undefined\" || google.maps == null) {\n      if (typeof window._bokeh_gmaps_callback === \"undefined\") {\n        const decoded_api_key = atob(this.model.api_key);\n        load_google_api(decoded_api_key);\n      }\n\n      gmaps_ready.connect(() => this.request_render());\n    }\n\n    this.unpause();\n  }\n\n  remove() {\n    remove(this.map_el);\n    super.remove();\n  }\n\n  update_range(range_info) {\n    // RESET -------------------------\n    if (range_info == null) {\n      this.map.setCenter({\n        lat: this.initial_lat,\n        lng: this.initial_lng\n      });\n      this.map.setOptions({\n        zoom: this.initial_zoom\n      });\n      super.update_range(null); // PAN ----------------------------\n    } else if (range_info.sdx != null || range_info.sdy != null) {\n      this.map.panBy(range_info.sdx || 0, range_info.sdy || 0);\n      super.update_range(range_info); // ZOOM ---------------------------\n    } else if (range_info.factor != null) {\n      // The zoom count decreases the sensitivity of the zoom. (We could make this user configurable)\n      if (this.zoom_count !== 10) {\n        this.zoom_count += 1;\n        return;\n      }\n\n      this.zoom_count = 0;\n      this.pause();\n      super.update_range(range_info);\n      const zoom_change = range_info.factor < 0 ? -1 : 1;\n      const old_map_zoom = this.map.getZoom();\n      const new_map_zoom = old_map_zoom + zoom_change; // Zooming out too far causes problems\n\n      if (new_map_zoom >= 2) {\n        this.map.setZoom(new_map_zoom); // Check we haven't gone out of bounds, and if we have undo the zoom\n\n        const [proj_xstart, proj_xend,,] = this._get_projected_bounds();\n\n        if (proj_xend - proj_xstart < 0) {\n          this.map.setZoom(old_map_zoom);\n        }\n      }\n\n      this.unpause();\n    } // Finally re-center\n\n\n    this._set_bokeh_ranges();\n  }\n\n  _build_map() {\n    const {\n      maps\n    } = google;\n    this.map_types = {\n      satellite: maps.MapTypeId.SATELLITE,\n      terrain: maps.MapTypeId.TERRAIN,\n      roadmap: maps.MapTypeId.ROADMAP,\n      hybrid: maps.MapTypeId.HYBRID\n    };\n    const mo = this.model.map_options;\n    const map_options = {\n      center: new maps.LatLng(mo.lat, mo.lng),\n      zoom: mo.zoom,\n      disableDefaultUI: true,\n      mapTypeId: this.map_types[mo.map_type],\n      scaleControl: mo.scale_control,\n      tilt: mo.tilt\n    };\n    if (mo.styles != null) map_options.styles = JSON.parse(mo.styles); // create the map with above options in div\n\n    this.map_el = div({\n      style: {\n        position: \"absolute\"\n      }\n    });\n    this.canvas_view.add_underlay(this.map_el);\n    this.map = new maps.Map(this.map_el, map_options); // update bokeh ranges whenever the map idles, which should be after most UI action\n\n    maps.event.addListener(this.map, 'idle', () => this._set_bokeh_ranges()); // also need an event when bounds change so that map resizes trigger renders too\n\n    maps.event.addListener(this.map, 'bounds_changed', () => this._set_bokeh_ranges());\n    maps.event.addListenerOnce(this.map, 'tilesloaded', () => this._render_finished()); // wire up listeners so that changes to properties are reflected\n\n    this.connect(this.model.properties.map_options.change, () => this._update_options());\n    this.connect(this.model.map_options.properties.styles.change, () => this._update_styles());\n    this.connect(this.model.map_options.properties.lat.change, () => this._update_center('lat'));\n    this.connect(this.model.map_options.properties.lng.change, () => this._update_center('lng'));\n    this.connect(this.model.map_options.properties.zoom.change, () => this._update_zoom());\n    this.connect(this.model.map_options.properties.map_type.change, () => this._update_map_type());\n    this.connect(this.model.map_options.properties.scale_control.change, () => this._update_scale_control());\n    this.connect(this.model.map_options.properties.tilt.change, () => this._update_tilt());\n  }\n\n  _render_finished() {\n    this._tiles_loaded = true;\n    this.notify_finished();\n  }\n\n  has_finished() {\n    return super.has_finished() && this._tiles_loaded === true;\n  }\n\n  _get_latlon_bounds() {\n    const bounds = this.map.getBounds();\n    const top_right = bounds.getNorthEast();\n    const bottom_left = bounds.getSouthWest();\n    const xstart = bottom_left.lng();\n    const xend = top_right.lng();\n    const ystart = bottom_left.lat();\n    const yend = top_right.lat();\n    return [xstart, xend, ystart, yend];\n  }\n\n  _get_projected_bounds() {\n    const [xstart, xend, ystart, yend] = this._get_latlon_bounds();\n\n    const [proj_xstart, proj_ystart] = wgs84_mercator.forward([xstart, ystart]);\n    const [proj_xend, proj_yend] = wgs84_mercator.forward([xend, yend]);\n    return [proj_xstart, proj_xend, proj_ystart, proj_yend];\n  }\n\n  _set_bokeh_ranges() {\n    const [proj_xstart, proj_xend, proj_ystart, proj_yend] = this._get_projected_bounds();\n\n    this.frame.x_range.setv({\n      start: proj_xstart,\n      end: proj_xend\n    });\n    this.frame.y_range.setv({\n      start: proj_ystart,\n      end: proj_yend\n    });\n  }\n\n  _update_center(fld) {\n    const c = this.map.getCenter().toJSON();\n    c[fld] = this.model.map_options[fld];\n    this.map.setCenter(c);\n\n    this._set_bokeh_ranges();\n  }\n\n  _update_map_type() {\n    this.map.setOptions({\n      mapTypeId: this.map_types[this.model.map_options.map_type]\n    });\n  }\n\n  _update_scale_control() {\n    this.map.setOptions({\n      scaleControl: this.model.map_options.scale_control\n    });\n  }\n\n  _update_tilt() {\n    this.map.setOptions({\n      tilt: this.model.map_options.tilt\n    });\n  }\n\n  _update_options() {\n    this._update_styles();\n\n    this._update_center('lat');\n\n    this._update_center('lng');\n\n    this._update_zoom();\n\n    this._update_map_type();\n  }\n\n  _update_styles() {\n    this.map.setOptions({\n      styles: JSON.parse(this.model.map_options.styles)\n    });\n  }\n\n  _update_zoom() {\n    this.map.setOptions({\n      zoom: this.model.map_options.zoom\n    });\n\n    this._set_bokeh_ranges();\n  } // this method is expected and called by PlotView.render\n\n\n  _map_hook(_ctx, frame_box) {\n    if (this.map == null && typeof google !== \"undefined\" && google.maps != null) this._build_map();\n\n    if (this.map_el != null) {\n      const [left, top, width, height] = frame_box;\n      this.map_el.style.top = `${top}px`;\n      this.map_el.style.left = `${left}px`;\n      this.map_el.style.width = `${width}px`;\n      this.map_el.style.height = `${height}px`;\n    }\n  } // this overrides the standard _paint_empty to make the inner canvas transparent\n\n\n  _paint_empty(ctx, frame_box) {\n    const ow = this.layout._width.value;\n    const oh = this.layout._height.value;\n    const [left, top, iw, ih] = frame_box;\n    ctx.clearRect(0, 0, ow, oh);\n    ctx.beginPath();\n    ctx.moveTo(0, 0);\n    ctx.lineTo(0, oh);\n    ctx.lineTo(ow, oh);\n    ctx.lineTo(ow, 0);\n    ctx.lineTo(0, 0);\n    ctx.moveTo(left, top);\n    ctx.lineTo(left + iw, top);\n    ctx.lineTo(left + iw, top + ih);\n    ctx.lineTo(left, top + ih);\n    ctx.lineTo(left, top);\n    ctx.closePath();\n\n    if (this.model.border_fill_color != null) {\n      ctx.fillStyle = this.model.border_fill_color;\n      ctx.fill();\n    }\n  }\n\n}\nGMapPlotView.__name__ = \"GMapPlotView\";","map":{"version":3,"sources":["/Users/gen/Desktop/defund_to_refund/node_modules/@bokeh/bokehjs/build/js/lib/models/plots/gmap_plot_canvas.js"],"names":["Signal0","div","remove","wgs84_mercator","PlotView","gmaps_ready","load_google_api","api_key","window","_bokeh_gmaps_callback","emit","script","document","createElement","type","src","body","appendChild","GMapPlotView","initialize","pause","_tiles_loaded","zoom_count","zoom","lat","lng","model","map_options","initial_zoom","initial_lat","initial_lng","google","maps","decoded_api_key","atob","connect","request_render","unpause","map_el","update_range","range_info","map","setCenter","setOptions","sdx","sdy","panBy","factor","zoom_change","old_map_zoom","getZoom","new_map_zoom","setZoom","proj_xstart","proj_xend","_get_projected_bounds","_set_bokeh_ranges","_build_map","map_types","satellite","MapTypeId","SATELLITE","terrain","TERRAIN","roadmap","ROADMAP","hybrid","HYBRID","mo","center","LatLng","disableDefaultUI","mapTypeId","map_type","scaleControl","scale_control","tilt","styles","JSON","parse","style","position","canvas_view","add_underlay","Map","event","addListener","addListenerOnce","_render_finished","properties","change","_update_options","_update_styles","_update_center","_update_zoom","_update_map_type","_update_scale_control","_update_tilt","notify_finished","has_finished","_get_latlon_bounds","bounds","getBounds","top_right","getNorthEast","bottom_left","getSouthWest","xstart","xend","ystart","yend","proj_ystart","forward","proj_yend","frame","x_range","setv","start","end","y_range","fld","c","getCenter","toJSON","_map_hook","_ctx","frame_box","left","top","width","height","_paint_empty","ctx","ow","layout","_width","value","oh","_height","iw","ih","clearRect","beginPath","moveTo","lineTo","closePath","border_fill_color","fillStyle","fill","__name__"],"mappings":"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","sourcesContent":["import { Signal0 } from \"../../core/signaling\";\nimport { div, remove } from \"../../core/dom\";\nimport { wgs84_mercator } from \"../../core/util/projections\";\nimport { PlotView } from \"./plot_canvas\";\nconst gmaps_ready = new Signal0({}, \"gmaps_ready\");\nconst load_google_api = function (api_key) {\n    window._bokeh_gmaps_callback = () => gmaps_ready.emit();\n    const script = document.createElement('script');\n    script.type = 'text/javascript';\n    script.src = `https://maps.googleapis.com/maps/api/js?v=3.36&key=${api_key}&callback=_bokeh_gmaps_callback`;\n    document.body.appendChild(script);\n};\nexport class GMapPlotView extends PlotView {\n    initialize() {\n        this.pause();\n        super.initialize();\n        this._tiles_loaded = false;\n        this.zoom_count = 0;\n        const { zoom, lat, lng } = this.model.map_options;\n        this.initial_zoom = zoom;\n        this.initial_lat = lat;\n        this.initial_lng = lng;\n        if (typeof google === \"undefined\" || google.maps == null) {\n            if (typeof window._bokeh_gmaps_callback === \"undefined\") {\n                const decoded_api_key = atob(this.model.api_key);\n                load_google_api(decoded_api_key);\n            }\n            gmaps_ready.connect(() => this.request_render());\n        }\n        this.unpause();\n    }\n    remove() {\n        remove(this.map_el);\n        super.remove();\n    }\n    update_range(range_info) {\n        // RESET -------------------------\n        if (range_info == null) {\n            this.map.setCenter({ lat: this.initial_lat, lng: this.initial_lng });\n            this.map.setOptions({ zoom: this.initial_zoom });\n            super.update_range(null);\n            // PAN ----------------------------\n        }\n        else if (range_info.sdx != null || range_info.sdy != null) {\n            this.map.panBy(range_info.sdx || 0, range_info.sdy || 0);\n            super.update_range(range_info);\n            // ZOOM ---------------------------\n        }\n        else if (range_info.factor != null) {\n            // The zoom count decreases the sensitivity of the zoom. (We could make this user configurable)\n            if (this.zoom_count !== 10) {\n                this.zoom_count += 1;\n                return;\n            }\n            this.zoom_count = 0;\n            this.pause();\n            super.update_range(range_info);\n            const zoom_change = range_info.factor < 0 ? -1 : 1;\n            const old_map_zoom = this.map.getZoom();\n            const new_map_zoom = old_map_zoom + zoom_change;\n            // Zooming out too far causes problems\n            if (new_map_zoom >= 2) {\n                this.map.setZoom(new_map_zoom);\n                // Check we haven't gone out of bounds, and if we have undo the zoom\n                const [proj_xstart, proj_xend, ,] = this._get_projected_bounds();\n                if (proj_xend - proj_xstart < 0) {\n                    this.map.setZoom(old_map_zoom);\n                }\n            }\n            this.unpause();\n        }\n        // Finally re-center\n        this._set_bokeh_ranges();\n    }\n    _build_map() {\n        const { maps } = google;\n        this.map_types = {\n            satellite: maps.MapTypeId.SATELLITE,\n            terrain: maps.MapTypeId.TERRAIN,\n            roadmap: maps.MapTypeId.ROADMAP,\n            hybrid: maps.MapTypeId.HYBRID,\n        };\n        const mo = this.model.map_options;\n        const map_options = {\n            center: new maps.LatLng(mo.lat, mo.lng),\n            zoom: mo.zoom,\n            disableDefaultUI: true,\n            mapTypeId: this.map_types[mo.map_type],\n            scaleControl: mo.scale_control,\n            tilt: mo.tilt,\n        };\n        if (mo.styles != null)\n            map_options.styles = JSON.parse(mo.styles);\n        // create the map with above options in div\n        this.map_el = div({ style: { position: \"absolute\" } });\n        this.canvas_view.add_underlay(this.map_el);\n        this.map = new maps.Map(this.map_el, map_options);\n        // update bokeh ranges whenever the map idles, which should be after most UI action\n        maps.event.addListener(this.map, 'idle', () => this._set_bokeh_ranges());\n        // also need an event when bounds change so that map resizes trigger renders too\n        maps.event.addListener(this.map, 'bounds_changed', () => this._set_bokeh_ranges());\n        maps.event.addListenerOnce(this.map, 'tilesloaded', () => this._render_finished());\n        // wire up listeners so that changes to properties are reflected\n        this.connect(this.model.properties.map_options.change, () => this._update_options());\n        this.connect(this.model.map_options.properties.styles.change, () => this._update_styles());\n        this.connect(this.model.map_options.properties.lat.change, () => this._update_center('lat'));\n        this.connect(this.model.map_options.properties.lng.change, () => this._update_center('lng'));\n        this.connect(this.model.map_options.properties.zoom.change, () => this._update_zoom());\n        this.connect(this.model.map_options.properties.map_type.change, () => this._update_map_type());\n        this.connect(this.model.map_options.properties.scale_control.change, () => this._update_scale_control());\n        this.connect(this.model.map_options.properties.tilt.change, () => this._update_tilt());\n    }\n    _render_finished() {\n        this._tiles_loaded = true;\n        this.notify_finished();\n    }\n    has_finished() {\n        return super.has_finished() && this._tiles_loaded === true;\n    }\n    _get_latlon_bounds() {\n        const bounds = this.map.getBounds();\n        const top_right = bounds.getNorthEast();\n        const bottom_left = bounds.getSouthWest();\n        const xstart = bottom_left.lng();\n        const xend = top_right.lng();\n        const ystart = bottom_left.lat();\n        const yend = top_right.lat();\n        return [xstart, xend, ystart, yend];\n    }\n    _get_projected_bounds() {\n        const [xstart, xend, ystart, yend] = this._get_latlon_bounds();\n        const [proj_xstart, proj_ystart] = wgs84_mercator.forward([xstart, ystart]);\n        const [proj_xend, proj_yend] = wgs84_mercator.forward([xend, yend]);\n        return [proj_xstart, proj_xend, proj_ystart, proj_yend];\n    }\n    _set_bokeh_ranges() {\n        const [proj_xstart, proj_xend, proj_ystart, proj_yend] = this._get_projected_bounds();\n        this.frame.x_range.setv({ start: proj_xstart, end: proj_xend });\n        this.frame.y_range.setv({ start: proj_ystart, end: proj_yend });\n    }\n    _update_center(fld) {\n        const c = this.map.getCenter().toJSON();\n        c[fld] = this.model.map_options[fld];\n        this.map.setCenter(c);\n        this._set_bokeh_ranges();\n    }\n    _update_map_type() {\n        this.map.setOptions({ mapTypeId: this.map_types[this.model.map_options.map_type] });\n    }\n    _update_scale_control() {\n        this.map.setOptions({ scaleControl: this.model.map_options.scale_control });\n    }\n    _update_tilt() {\n        this.map.setOptions({ tilt: this.model.map_options.tilt });\n    }\n    _update_options() {\n        this._update_styles();\n        this._update_center('lat');\n        this._update_center('lng');\n        this._update_zoom();\n        this._update_map_type();\n    }\n    _update_styles() {\n        this.map.setOptions({ styles: JSON.parse(this.model.map_options.styles) });\n    }\n    _update_zoom() {\n        this.map.setOptions({ zoom: this.model.map_options.zoom });\n        this._set_bokeh_ranges();\n    }\n    // this method is expected and called by PlotView.render\n    _map_hook(_ctx, frame_box) {\n        if (this.map == null && typeof google !== \"undefined\" && google.maps != null)\n            this._build_map();\n        if (this.map_el != null) {\n            const [left, top, width, height] = frame_box;\n            this.map_el.style.top = `${top}px`;\n            this.map_el.style.left = `${left}px`;\n            this.map_el.style.width = `${width}px`;\n            this.map_el.style.height = `${height}px`;\n        }\n    }\n    // this overrides the standard _paint_empty to make the inner canvas transparent\n    _paint_empty(ctx, frame_box) {\n        const ow = this.layout._width.value;\n        const oh = this.layout._height.value;\n        const [left, top, iw, ih] = frame_box;\n        ctx.clearRect(0, 0, ow, oh);\n        ctx.beginPath();\n        ctx.moveTo(0, 0);\n        ctx.lineTo(0, oh);\n        ctx.lineTo(ow, oh);\n        ctx.lineTo(ow, 0);\n        ctx.lineTo(0, 0);\n        ctx.moveTo(left, top);\n        ctx.lineTo(left + iw, top);\n        ctx.lineTo(left + iw, top + ih);\n        ctx.lineTo(left, top + ih);\n        ctx.lineTo(left, top);\n        ctx.closePath();\n        if (this.model.border_fill_color != null) {\n            ctx.fillStyle = this.model.border_fill_color;\n            ctx.fill();\n        }\n    }\n}\nGMapPlotView.__name__ = \"GMapPlotView\";\n//# sourceMappingURL=gmap_plot_canvas.js.map"]},"metadata":{},"sourceType":"module"}