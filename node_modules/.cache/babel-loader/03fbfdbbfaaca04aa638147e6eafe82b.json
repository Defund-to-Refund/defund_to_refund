{"ast":null,"code":"import { SpatialIndex } from \"../../core/util/spatial\";\nimport { Glyph, GlyphView } from \"./glyph\";\nimport { generic_line_legend } from \"./utils\"; // Formula from: http://pomax.nihongoresources.com/pages/bezier/\n//\n// if segment is quadratic bezier do:\n//   for both directions do:\n//     if control between start and end, compute linear bounding box\n//     otherwise, compute\n//       bound = u(1-t)^2 + 2v(1-t)t + wt^2\n//         (with t = ((u-v) / (u-2v+w)), with {u = start, v = control, w = end})\n//       if control precedes start, min = bound, otherwise max = bound\n\nfunction _qbb(u, v, w) {\n  if (v == (u + w) / 2) return [u, w];else {\n    const t = (u - v) / (u - 2 * v + w);\n    const bd = u * (1 - t) ** 2 + 2 * v * (1 - t) * t + w * t ** 2;\n    return [Math.min(u, w, bd), Math.max(u, w, bd)];\n  }\n}\n\nexport class QuadraticView extends GlyphView {\n  _index_data() {\n    const points = [];\n\n    for (let i = 0, end = this._x0.length; i < end; i++) {\n      if (isNaN(this._x0[i] + this._x1[i] + this._y0[i] + this._y1[i] + this._cx[i] + this._cy[i])) continue;\n\n      const [x0, x1] = _qbb(this._x0[i], this._cx[i], this._x1[i]);\n\n      const [y0, y1] = _qbb(this._y0[i], this._cy[i], this._y1[i]);\n\n      points.push({\n        x0,\n        y0,\n        x1,\n        y1,\n        i\n      });\n    }\n\n    return new SpatialIndex(points);\n  }\n\n  _render(ctx, indices, {\n    sx0,\n    sy0,\n    sx1,\n    sy1,\n    scx,\n    scy\n  }) {\n    if (this.visuals.line.doit) {\n      for (const i of indices) {\n        if (isNaN(sx0[i] + sy0[i] + sx1[i] + sy1[i] + scx[i] + scy[i])) continue;\n        ctx.beginPath();\n        ctx.moveTo(sx0[i], sy0[i]);\n        ctx.quadraticCurveTo(scx[i], scy[i], sx1[i], sy1[i]);\n        this.visuals.line.set_vectorize(ctx, i);\n        ctx.stroke();\n      }\n    }\n  }\n\n  draw_legend_for_index(ctx, bbox, index) {\n    generic_line_legend(this.visuals, ctx, bbox, index);\n  }\n\n  scenterx() {\n    throw new Error(\"not implemented\");\n  }\n\n  scentery() {\n    throw new Error(\"not implemented\");\n  }\n\n}\nQuadraticView.__name__ = \"QuadraticView\";\nexport class Quadratic extends Glyph {\n  constructor(attrs) {\n    super(attrs);\n  }\n\n  static init_Quadratic() {\n    this.prototype.default_view = QuadraticView;\n    this.coords([['x0', 'y0'], ['x1', 'y1'], ['cx', 'cy']]);\n    this.mixins(['line']);\n  }\n\n}\nQuadratic.__name__ = \"Quadratic\";\nQuadratic.init_Quadratic();","map":{"version":3,"sources":["/Users/gen/Desktop/defund_to_refund/node_modules/@bokeh/bokehjs/build/js/lib/models/glyphs/quadratic.js"],"names":["SpatialIndex","Glyph","GlyphView","generic_line_legend","_qbb","u","v","w","t","bd","Math","min","max","QuadraticView","_index_data","points","i","end","_x0","length","isNaN","_x1","_y0","_y1","_cx","_cy","x0","x1","y0","y1","push","_render","ctx","indices","sx0","sy0","sx1","sy1","scx","scy","visuals","line","doit","beginPath","moveTo","quadraticCurveTo","set_vectorize","stroke","draw_legend_for_index","bbox","index","scenterx","Error","scentery","__name__","Quadratic","constructor","attrs","init_Quadratic","prototype","default_view","coords","mixins"],"mappings":"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","sourcesContent":["import { SpatialIndex } from \"../../core/util/spatial\";\nimport { Glyph, GlyphView } from \"./glyph\";\nimport { generic_line_legend } from \"./utils\";\n// Formula from: http://pomax.nihongoresources.com/pages/bezier/\n//\n// if segment is quadratic bezier do:\n//   for both directions do:\n//     if control between start and end, compute linear bounding box\n//     otherwise, compute\n//       bound = u(1-t)^2 + 2v(1-t)t + wt^2\n//         (with t = ((u-v) / (u-2v+w)), with {u = start, v = control, w = end})\n//       if control precedes start, min = bound, otherwise max = bound\nfunction _qbb(u, v, w) {\n    if (v == (u + w) / 2)\n        return [u, w];\n    else {\n        const t = (u - v) / ((u - (2 * v)) + w);\n        const bd = (u * (1 - t) ** 2) + (2 * v * (1 - t) * t) + (w * t ** 2);\n        return [Math.min(u, w, bd), Math.max(u, w, bd)];\n    }\n}\nexport class QuadraticView extends GlyphView {\n    _index_data() {\n        const points = [];\n        for (let i = 0, end = this._x0.length; i < end; i++) {\n            if (isNaN(this._x0[i] + this._x1[i] + this._y0[i] + this._y1[i] + this._cx[i] + this._cy[i]))\n                continue;\n            const [x0, x1] = _qbb(this._x0[i], this._cx[i], this._x1[i]);\n            const [y0, y1] = _qbb(this._y0[i], this._cy[i], this._y1[i]);\n            points.push({ x0, y0, x1, y1, i });\n        }\n        return new SpatialIndex(points);\n    }\n    _render(ctx, indices, { sx0, sy0, sx1, sy1, scx, scy }) {\n        if (this.visuals.line.doit) {\n            for (const i of indices) {\n                if (isNaN(sx0[i] + sy0[i] + sx1[i] + sy1[i] + scx[i] + scy[i]))\n                    continue;\n                ctx.beginPath();\n                ctx.moveTo(sx0[i], sy0[i]);\n                ctx.quadraticCurveTo(scx[i], scy[i], sx1[i], sy1[i]);\n                this.visuals.line.set_vectorize(ctx, i);\n                ctx.stroke();\n            }\n        }\n    }\n    draw_legend_for_index(ctx, bbox, index) {\n        generic_line_legend(this.visuals, ctx, bbox, index);\n    }\n    scenterx() {\n        throw new Error(\"not implemented\");\n    }\n    scentery() {\n        throw new Error(\"not implemented\");\n    }\n}\nQuadraticView.__name__ = \"QuadraticView\";\nexport class Quadratic extends Glyph {\n    constructor(attrs) {\n        super(attrs);\n    }\n    static init_Quadratic() {\n        this.prototype.default_view = QuadraticView;\n        this.coords([['x0', 'y0'], ['x1', 'y1'], ['cx', 'cy']]);\n        this.mixins(['line']);\n    }\n}\nQuadratic.__name__ = \"Quadratic\";\nQuadratic.init_Quadratic();\n//# sourceMappingURL=quadratic.js.map"]},"metadata":{},"sourceType":"module"}