{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * (c) 2009-2016 Michael Leibman\n * michael{dot}leibman{at}gmail{dot}com\n * http://github.com/mleibman/slickgrid\n *\n * Distributed under MIT license.\n * All rights reserved.\n *\n * SlickGrid v2.3\n *\n * NOTES:\n *     Cell/row DOM manipulations are done directly bypassing jQuery's DOM manipulation methods.\n *     This increases the speed dramatically, but can only be done safely because there are no event handlers\n *     or data associated with any cell/row DOM nodes.  Cell editors must make sure they implement .destroy()\n *     and do proper cleanup.\n */\n\nvar $ = require(\"./slick.jquery\");\n\nvar Slick = require(\"./slick.core\"); // shared across all grids on the page\n\n\nvar scrollbarDimensions;\nvar maxSupportedCssHeight; // browser's breaking point\n//////////////////////////////////////////////////////////////////////////////////////////////\n// SlickGrid class implementation (available as Slick.Grid)\n\n/**\n * Creates a new instance of the grid.\n * @class SlickGrid\n * @constructor\n * @param {Node}              container   Container node to create the grid in.\n * @param {Array,Object}      data        An array of objects for databinding.\n * @param {Array}             columns     An array of column definitions.\n * @param {Object}            options     Grid options.\n **/\n\nfunction SlickGrid(container, data, columns, options) {\n  if (!$.fn.drag) {\n    require('./lib/jquery.event.drag-2.3.0');\n  }\n\n  if (!$.fn.drop) {\n    require('./lib/jquery.event.drop-2.3.0');\n  } // settings\n\n\n  var defaults = {\n    alwaysShowVerticalScroll: false,\n    explicitInitialization: false,\n    rowHeight: 25,\n    defaultColumnWidth: 80,\n    enableAddRow: false,\n    leaveSpaceForNewRows: false,\n    editable: false,\n    autoEdit: true,\n    suppressActiveCellChangeOnEdit: false,\n    enableCellNavigation: true,\n    enableColumnReorder: true,\n    asyncEditorLoading: false,\n    asyncEditorLoadDelay: 100,\n    forceFitColumns: false,\n    enableAsyncPostRender: false,\n    asyncPostRenderDelay: 50,\n    enableAsyncPostRenderCleanup: false,\n    asyncPostRenderCleanupDelay: 40,\n    autoHeight: false,\n    editorLock: Slick.GlobalEditorLock,\n    showHeaderRow: false,\n    headerRowHeight: 25,\n    createFooterRow: false,\n    showFooterRow: false,\n    footerRowHeight: 25,\n    createPreHeaderPanel: false,\n    showPreHeaderPanel: false,\n    preHeaderPanelHeight: 25,\n    showTopPanel: false,\n    topPanelHeight: 25,\n    formatterFactory: null,\n    editorFactory: null,\n    cellFlashingCssClass: \"flashing\",\n    selectedCellCssClass: \"selected\",\n    multiSelect: true,\n    enableTextSelectionOnCells: false,\n    dataItemColumnValueExtractor: null,\n    fullWidthRows: false,\n    multiColumnSort: false,\n    numberedMultiColumnSort: false,\n    tristateMultiColumnSort: false,\n    sortColNumberInSeparateSpan: false,\n    defaultFormatter: defaultFormatter,\n    forceSyncScrolling: false,\n    addNewRowCssClass: \"new-row\",\n    preserveCopiedSelectionOnPaste: false,\n    showCellSelection: true,\n    viewportClass: null,\n    minRowBuffer: 3,\n    emulatePagingWhenScrolling: true,\n    // when scrolling off bottom of viewport, place new row at top of viewport\n    editorCellNavOnLRKeys: false\n  };\n  var columnDefaults = {\n    name: \"\",\n    resizable: true,\n    sortable: false,\n    minWidth: 30,\n    rerenderOnResize: false,\n    headerCssClass: null,\n    defaultSortAsc: true,\n    focusable: true,\n    selectable: true\n  }; // scroller\n\n  var th; // virtual height\n\n  var h; // real scrollable height\n\n  var ph; // page height\n\n  var n; // number of pages\n\n  var cj; // \"jumpiness\" coefficient\n\n  var page = 0; // current page\n\n  var offset = 0; // current page offset\n\n  var vScrollDir = 1; // private\n\n  var initialized = false;\n  var $container;\n  var uid = \"slickgrid_\" + Math.round(1000000 * Math.random());\n  var self = this;\n  var $focusSink, $focusSink2;\n  var $headerScroller;\n  var $headers;\n  var $headerRow, $headerRowScroller, $headerRowSpacer;\n  var $footerRow, $footerRowScroller, $footerRowSpacer;\n  var $preHeaderPanel, $preHeaderPanelScroller, $preHeaderPanelSpacer;\n  var $topPanelScroller;\n  var $topPanel;\n  var $viewport;\n  var $canvas;\n  var $style;\n  var $boundAncestors;\n  var stylesheet, columnCssRulesL, columnCssRulesR;\n  var viewportH, viewportW;\n  var canvasWidth;\n  var viewportHasHScroll, viewportHasVScroll;\n  var headerColumnWidthDiff = 0,\n      headerColumnHeightDiff = 0,\n      // border+padding\n  cellWidthDiff = 0,\n      cellHeightDiff = 0,\n      jQueryNewWidthBehaviour = false;\n  var absoluteColumnMinWidth;\n  var tabbingDirection = 1;\n  var activePosX;\n  var activeRow, activeCell;\n  var activeCellNode = null;\n  var currentEditor = null;\n  var serializedEditorValue;\n  var editController;\n  var rowsCache = {};\n  var renderedRows = 0;\n  var numVisibleRows;\n  var prevScrollTop = 0;\n  var scrollTop = 0;\n  var lastRenderedScrollTop = 0;\n  var lastRenderedScrollLeft = 0;\n  var prevScrollLeft = 0;\n  var scrollLeft = 0;\n  var selectionModel;\n  var selectedRows = [];\n  var plugins = [];\n  var cellCssClasses = {};\n  var columnsById = {};\n  var sortColumns = [];\n  var columnPosLeft = [];\n  var columnPosRight = [];\n  var pagingActive = false;\n  var pagingIsLastPage = false;\n  var scrollThrottle = ActionThrottle(render, 50); // async call handles\n\n  var h_editorLoader = null;\n  var h_render = null;\n  var h_postrender = null;\n  var h_postrenderCleanup = null;\n  var postProcessedRows = {};\n  var postProcessToRow = null;\n  var postProcessFromRow = null;\n  var postProcessedCleanupQueue = [];\n  var postProcessgroupId = 0; // perf counters\n\n  var counter_rows_rendered = 0;\n  var counter_rows_removed = 0; // These two variables work around a bug with inertial scrolling in Webkit/Blink on Mac.\n  // See http://crbug.com/312427.\n\n  var rowNodeFromLastMouseWheelEvent; // this node must not be deleted while inertial scrolling\n\n  var zombieRowNodeFromLastMouseWheelEvent; // node that was hidden instead of getting deleted\n\n  var zombieRowCacheFromLastMouseWheelEvent; // row cache for above node\n\n  var zombieRowPostProcessedFromLastMouseWheelEvent; // post processing references for above node\n  // store css attributes if display:none is active in container or parent\n\n  var cssShow = {\n    position: 'absolute',\n    visibility: 'hidden',\n    display: 'block'\n  };\n  var $hiddenParents;\n  var oldProps = [];\n  var columnResizeDragging = false; //////////////////////////////////////////////////////////////////////////////////////////////\n  // Initialization\n\n  function init() {\n    if (container instanceof $) {\n      $container = container;\n    } else {\n      $container = $(container);\n    }\n\n    if ($container.length < 1) {\n      throw new Error(\"SlickGrid requires a valid container, \" + container + \" does not exist in the DOM.\");\n    }\n\n    cacheCssForHiddenInit(); // calculate these only once and share between grid instances\n\n    maxSupportedCssHeight = maxSupportedCssHeight || getMaxSupportedCssHeight();\n    options = $.extend({}, defaults, options);\n    validateAndEnforceOptions();\n    columnDefaults.width = options.defaultColumnWidth;\n    columnsById = {};\n\n    for (var i = 0; i < columns.length; i++) {\n      var m = columns[i] = $.extend({}, columnDefaults, columns[i]);\n      columnsById[m.id] = i;\n\n      if (m.minWidth && m.width < m.minWidth) {\n        m.width = m.minWidth;\n      }\n\n      if (m.maxWidth && m.width > m.maxWidth) {\n        m.width = m.maxWidth;\n      }\n    } // validate loaded JavaScript modules against requested options\n\n\n    if (options.enableColumnReorder && !$.fn.sortable) {\n      throw new Error(\"SlickGrid's 'enableColumnReorder = true' option requires jquery-ui.sortable module to be loaded\");\n    }\n\n    editController = {\n      \"commitCurrentEdit\": commitCurrentEdit,\n      \"cancelCurrentEdit\": cancelCurrentEdit\n    };\n    $container.empty().css(\"overflow\", \"hidden\").css(\"outline\", 0).addClass(uid).addClass(\"ui-widget\"); // set up a positioning container if needed\n\n    if (!/relative|absolute|fixed/.test($container.css(\"position\"))) {\n      $container.css(\"position\", \"relative\");\n    }\n\n    $focusSink = $(\"<div tabIndex='0' hideFocus style='position:fixed;width:0;height:0;top:0;left:0;outline:0;'></div>\").appendTo($container);\n\n    if (options.createPreHeaderPanel) {\n      $preHeaderPanelScroller = $(\"<div class='slick-preheader-panel ui-state-default' style='overflow:hidden;position:relative;' />\").appendTo($container);\n      $preHeaderPanel = $(\"<div />\").appendTo($preHeaderPanelScroller);\n      $preHeaderPanelSpacer = $(\"<div style='display:block;height:1px;position:absolute;top:0;left:0;'></div>\").appendTo($preHeaderPanelScroller);\n\n      if (!options.showPreHeaderPanel) {\n        $preHeaderPanelScroller.hide();\n      }\n    }\n\n    $headerScroller = $(\"<div class='slick-header ui-state-default' />\").appendTo($container);\n    $headers = $(\"<div class='slick-header-columns' style='left:-1000px' />\").appendTo($headerScroller);\n    $headerRowScroller = $(\"<div class='slick-headerrow ui-state-default' />\").appendTo($container);\n    $headerRow = $(\"<div class='slick-headerrow-columns' />\").appendTo($headerRowScroller);\n    $headerRowSpacer = $(\"<div style='display:block;height:1px;position:absolute;top:0;left:0;'></div>\").appendTo($headerRowScroller);\n    $topPanelScroller = $(\"<div class='slick-top-panel-scroller ui-state-default' />\").appendTo($container);\n    $topPanel = $(\"<div class='slick-top-panel' style='width:10000px' />\").appendTo($topPanelScroller);\n\n    if (!options.showTopPanel) {\n      $topPanelScroller.hide();\n    }\n\n    if (!options.showHeaderRow) {\n      $headerRowScroller.hide();\n    }\n\n    $viewport = $(\"<div class='slick-viewport' style='width:100%;overflow:auto;outline:0;position:relative;;'>\").appendTo($container);\n    $viewport.css(\"overflow-y\", options.alwaysShowVerticalScroll ? \"scroll\" : options.autoHeight ? \"hidden\" : \"auto\");\n    $viewport.css(\"overflow-x\", options.forceFitColumns ? \"hidden\" : \"auto\");\n    if (options.viewportClass) $viewport.toggleClass(options.viewportClass, true);\n    $canvas = $(\"<div class='grid-canvas' />\").appendTo($viewport);\n    scrollbarDimensions = scrollbarDimensions || measureScrollbar();\n    if ($preHeaderPanelSpacer) $preHeaderPanelSpacer.css(\"width\", getCanvasWidth() + scrollbarDimensions.width + \"px\");\n    $headers.width(getHeadersWidth());\n    $headerRowSpacer.css(\"width\", getCanvasWidth() + scrollbarDimensions.width + \"px\");\n\n    if (options.createFooterRow) {\n      $footerRowScroller = $(\"<div class='slick-footerrow ui-state-default' />\").appendTo($container);\n      $footerRow = $(\"<div class='slick-footerrow-columns' />\").appendTo($footerRowScroller);\n      $footerRowSpacer = $(\"<div style='display:block;height:1px;position:absolute;top:0;left:0;'></div>\").css(\"width\", getCanvasWidth() + scrollbarDimensions.width + \"px\").appendTo($footerRowScroller);\n\n      if (!options.showFooterRow) {\n        $footerRowScroller.hide();\n      }\n    }\n\n    $focusSink2 = $focusSink.clone().appendTo($container);\n\n    if (!options.explicitInitialization) {\n      finishInitialization();\n    }\n  }\n\n  function finishInitialization() {\n    if (!initialized) {\n      initialized = true;\n      viewportW = parseFloat($.css($container[0], \"width\", true)); // header columns and cells may have different padding/border skewing width calculations (box-sizing, hello?)\n      // calculate the diff so we can set consistent sizes\n\n      measureCellPaddingAndBorder(); // for usability reasons, all text selection in SlickGrid is disabled\n      // with the exception of input and textarea elements (selection must\n      // be enabled there so that editors work as expected); note that\n      // selection in grid cells (grid body) is already unavailable in\n      // all browsers except IE\n\n      disableSelection($headers); // disable all text selection in header (including input and textarea)\n\n      if (!options.enableTextSelectionOnCells) {\n        // disable text selection in grid cells except in input and textarea elements\n        // (this is IE-specific, because selectstart event will only fire in IE)\n        $viewport.on(\"selectstart.ui\", function (event) {\n          return $(event.target).is(\"input,textarea\");\n        });\n      }\n\n      updateColumnCaches();\n      createColumnHeaders();\n      setupColumnSort();\n      createCssRules();\n      resizeCanvas();\n      bindAncestorScrollEvents();\n      $container.on(\"resize.slickgrid\", resizeCanvas);\n      $viewport //.on(\"click\", handleClick)\n      .on(\"scroll\", handleScroll);\n      $headerScroller //.on(\"scroll\", handleHeaderScroll)\n      .on(\"contextmenu\", handleHeaderContextMenu).on(\"click\", handleHeaderClick).on(\"mouseenter\", \".slick-header-column\", handleHeaderMouseEnter).on(\"mouseleave\", \".slick-header-column\", handleHeaderMouseLeave);\n      $headerRowScroller.on(\"scroll\", handleHeaderRowScroll);\n\n      if (options.createFooterRow) {\n        $footerRowScroller.on(\"scroll\", handleFooterRowScroll);\n      }\n\n      if (options.createPreHeaderPanel) {\n        $preHeaderPanelScroller.on(\"scroll\", handlePreHeaderPanelScroll);\n      }\n\n      $focusSink.add($focusSink2).on(\"keydown\", handleKeyDown);\n      $canvas.on(\"keydown\", handleKeyDown).on(\"click\", handleClick).on(\"dblclick\", handleDblClick).on(\"contextmenu\", handleContextMenu).on(\"draginit\", handleDragInit).on(\"dragstart\", {\n        distance: 3\n      }, handleDragStart).on(\"drag\", handleDrag).on(\"dragend\", handleDragEnd).on(\"mouseenter\", \".slick-cell\", handleMouseEnter).on(\"mouseleave\", \".slick-cell\", handleMouseLeave); // Work around http://crbug.com/312427.\n\n      if (navigator.userAgent.toLowerCase().match(/webkit/) && navigator.userAgent.toLowerCase().match(/macintosh/)) {\n        $canvas.on(\"mousewheel\", handleMouseWheel);\n      }\n\n      restoreCssFromHiddenInit();\n    }\n  }\n\n  function cacheCssForHiddenInit() {\n    // handle display:none on container or container parents\n    $hiddenParents = $container.parents().addBack().not(':visible');\n    $hiddenParents.each(function () {\n      var old = {};\n\n      for (var name in cssShow) {\n        old[name] = this.style[name];\n        this.style[name] = cssShow[name];\n      }\n\n      oldProps.push(old);\n    });\n  }\n\n  function restoreCssFromHiddenInit() {\n    // finish handle display:none on container or container parents\n    // - put values back the way they were\n    $hiddenParents.each(function (i) {\n      var old = oldProps[i];\n\n      for (var name in cssShow) {\n        this.style[name] = old[name];\n      }\n    });\n  }\n\n  function registerPlugin(plugin) {\n    plugins.unshift(plugin);\n    plugin.init(self);\n  }\n\n  function unregisterPlugin(plugin) {\n    for (var i = plugins.length; i >= 0; i--) {\n      if (plugins[i] === plugin) {\n        if (plugins[i].destroy) {\n          plugins[i].destroy();\n        }\n\n        plugins.splice(i, 1);\n        break;\n      }\n    }\n  }\n\n  function setSelectionModel(model) {\n    if (selectionModel) {\n      selectionModel.onSelectedRangesChanged.unsubscribe(handleSelectedRangesChanged);\n\n      if (selectionModel.destroy) {\n        selectionModel.destroy();\n      }\n    }\n\n    selectionModel = model;\n\n    if (selectionModel) {\n      selectionModel.init(self);\n      selectionModel.onSelectedRangesChanged.subscribe(handleSelectedRangesChanged);\n    }\n  }\n\n  function getSelectionModel() {\n    return selectionModel;\n  }\n\n  function getCanvasNode() {\n    return $canvas[0];\n  }\n\n  function measureScrollbar() {\n    var $outerdiv = $('<div class=\"' + $viewport.className + '\" style=\"position:absolute; top:-10000px; left:-10000px; overflow:auto; width:100px; height:100px;\"></div>').appendTo($viewport);\n    var $innerdiv = $('<div style=\"width:200px; height:200px; overflow:auto;\"></div>').appendTo($outerdiv);\n    var dim = {\n      width: $outerdiv[0].offsetWidth - $outerdiv[0].clientWidth,\n      height: $outerdiv[0].offsetHeight - $outerdiv[0].clientHeight\n    };\n    $innerdiv.remove();\n    $outerdiv.remove();\n    return dim;\n  }\n\n  function getColumnTotalWidth(includeScrollbar) {\n    var totalWidth = 0;\n\n    for (var i = 0, ii = columns.length; i < ii; i++) {\n      var width = columns[i].width;\n      totalWidth += width;\n    }\n\n    if (includeScrollbar) {\n      totalWidth += scrollbarDimensions.width;\n    }\n\n    return totalWidth;\n  }\n\n  function getHeadersWidth() {\n    var headersWidth = getColumnTotalWidth(!options.autoHeight);\n    return Math.max(headersWidth, viewportW) + 1000;\n  }\n\n  function getCanvasWidth() {\n    var availableWidth = viewportHasVScroll ? viewportW - scrollbarDimensions.width : viewportW;\n    var rowWidth = 0;\n    var i = columns.length;\n\n    while (i--) {\n      rowWidth += columns[i].width;\n    }\n\n    return options.fullWidthRows ? Math.max(rowWidth, availableWidth) : rowWidth;\n  }\n\n  function updateCanvasWidth(forceColumnWidthsUpdate) {\n    var oldCanvasWidth = canvasWidth;\n    canvasWidth = getCanvasWidth();\n\n    if (canvasWidth != oldCanvasWidth) {\n      $canvas.width(canvasWidth);\n      $headerRow.width(canvasWidth);\n\n      if (options.createFooterRow) {\n        $footerRow.width(canvasWidth);\n      }\n\n      if (options.createPreHeaderPanel) {\n        $preHeaderPanel.width(canvasWidth);\n      }\n\n      $headers.width(getHeadersWidth());\n      viewportHasHScroll = canvasWidth > viewportW - scrollbarDimensions.width;\n    }\n\n    var w = canvasWidth + (viewportHasVScroll ? scrollbarDimensions.width : 0);\n    $headerRowSpacer.width(w);\n\n    if (options.createFooterRow) {\n      $footerRowSpacer.width(w);\n    }\n\n    if (options.createPreHeaderPanel) {\n      $preHeaderPanelSpacer.width(w);\n    }\n\n    if (canvasWidth != oldCanvasWidth || forceColumnWidthsUpdate) {\n      applyColumnWidths();\n    }\n  }\n\n  function disableSelection($target) {\n    if ($target && $target.jquery) {\n      $target.attr(\"unselectable\", \"on\").css(\"MozUserSelect\", \"none\").on(\"selectstart.ui\", function () {\n        return false;\n      }); // from jquery:ui.core.js 1.7.2\n    }\n  }\n\n  function getMaxSupportedCssHeight() {\n    var supportedHeight = 1000000; // FF reports the height back but still renders blank after ~6M px\n\n    var testUpTo = navigator.userAgent.toLowerCase().match(/firefox/) ? 6000000 : 1000000000;\n    var div = $(\"<div style='display:none' />\").appendTo(document.body);\n\n    while (true) {\n      var test = supportedHeight * 2;\n      div.css(\"height\", test);\n\n      if (test > testUpTo || div.height() !== test) {\n        break;\n      } else {\n        supportedHeight = test;\n      }\n    }\n\n    div.remove();\n    return supportedHeight;\n  }\n\n  function getUID() {\n    return uid;\n  }\n\n  function getHeaderColumnWidthDiff() {\n    return headerColumnWidthDiff;\n  }\n\n  function getScrollbarDimensions() {\n    return scrollbarDimensions;\n  } // TODO:  this is static.  need to handle page mutation.\n\n\n  function bindAncestorScrollEvents() {\n    var elem = $canvas[0];\n\n    while ((elem = elem.parentNode) != document.body && elem != null) {\n      // bind to scroll containers only\n      if (elem == $viewport[0] || elem.scrollWidth != elem.clientWidth || elem.scrollHeight != elem.clientHeight) {\n        var $elem = $(elem);\n\n        if (!$boundAncestors) {\n          $boundAncestors = $elem;\n        } else {\n          $boundAncestors = $boundAncestors.add($elem);\n        }\n\n        $elem.on(\"scroll.\" + uid, handleActiveCellPositionChange);\n      }\n    }\n  }\n\n  function unbindAncestorScrollEvents() {\n    if (!$boundAncestors) {\n      return;\n    }\n\n    $boundAncestors.off(\"scroll.\" + uid);\n    $boundAncestors = null;\n  }\n\n  function updateColumnHeader(columnId, title, toolTip) {\n    if (!initialized) {\n      return;\n    }\n\n    var idx = getColumnIndex(columnId);\n\n    if (idx == null) {\n      return;\n    }\n\n    var columnDef = columns[idx];\n    var $header = $headers.children().eq(idx);\n\n    if ($header) {\n      if (title !== undefined) {\n        columns[idx].name = title;\n      }\n\n      if (toolTip !== undefined) {\n        columns[idx].toolTip = toolTip;\n      }\n\n      trigger(self.onBeforeHeaderCellDestroy, {\n        \"node\": $header[0],\n        \"column\": columnDef,\n        \"grid\": self\n      });\n      $header.attr(\"title\", toolTip || \"\").children().eq(0).html(title);\n      trigger(self.onHeaderCellRendered, {\n        \"node\": $header[0],\n        \"column\": columnDef,\n        \"grid\": self\n      });\n    }\n  }\n\n  function getHeader() {\n    return $headers[0];\n  }\n\n  function getHeaderColumn(columnIdOrIdx) {\n    var idx = typeof columnIdOrIdx === \"number\" ? columnIdOrIdx : getColumnIndex(columnIdOrIdx);\n    var $rtn = $headers.children().eq(idx);\n    return $rtn && $rtn[0];\n  }\n\n  function getHeaderRow() {\n    return $headerRow[0];\n  }\n\n  function getFooterRow() {\n    return $footerRow[0];\n  }\n\n  function getPreHeaderPanel() {\n    return $preHeaderPanel[0];\n  }\n\n  function getHeaderRowColumn(columnIdOrIdx) {\n    var idx = typeof columnIdOrIdx === \"number\" ? columnIdOrIdx : getColumnIndex(columnIdOrIdx);\n    var $rtn = $headerRow.children().eq(idx);\n    return $rtn && $rtn[0];\n  }\n\n  function getFooterRowColumn(columnIdOrIdx) {\n    var idx = typeof columnIdOrIdx === \"number\" ? columnIdOrIdx : getColumnIndex(columnIdOrIdx);\n    var $rtn = $footerRow.children().eq(idx);\n    return $rtn && $rtn[0];\n  }\n\n  function createColumnHeaders() {\n    function onMouseEnter() {\n      $(this).addClass(\"ui-state-hover\");\n    }\n\n    function onMouseLeave() {\n      $(this).removeClass(\"ui-state-hover\");\n    }\n\n    $headers.find(\".slick-header-column\").each(function () {\n      var columnDef = $(this).data(\"column\");\n\n      if (columnDef) {\n        trigger(self.onBeforeHeaderCellDestroy, {\n          \"node\": this,\n          \"column\": columnDef,\n          \"grid\": self\n        });\n      }\n    });\n    $headers.empty();\n    $headers.width(getHeadersWidth());\n    $headerRow.find(\".slick-headerrow-column\").each(function () {\n      var columnDef = $(this).data(\"column\");\n\n      if (columnDef) {\n        trigger(self.onBeforeHeaderRowCellDestroy, {\n          \"node\": this,\n          \"column\": columnDef,\n          \"grid\": self\n        });\n      }\n    });\n    $headerRow.empty();\n\n    if (options.createFooterRow) {\n      $footerRow.find(\".slick-footerrow-column\").each(function () {\n        var columnDef = $(this).data(\"column\");\n\n        if (columnDef) {\n          trigger(self.onBeforeFooterRowCellDestroy, {\n            \"node\": this,\n            \"column\": columnDef\n          });\n        }\n      });\n      $footerRow.empty();\n    }\n\n    for (var i = 0; i < columns.length; i++) {\n      var m = columns[i];\n      var header = $(\"<div class='ui-state-default slick-header-column' />\").html(\"<span class='slick-column-name'>\" + m.name + \"</span>\").width(m.width - headerColumnWidthDiff).attr(\"id\", \"\" + uid + m.id).attr(\"title\", m.toolTip || \"\").data(\"column\", m).addClass(m.headerCssClass || \"\").appendTo($headers);\n\n      if (options.enableColumnReorder || m.sortable) {\n        header.on('mouseenter', onMouseEnter).on('mouseleave', onMouseLeave);\n      }\n\n      if (m.sortable) {\n        header.addClass(\"slick-header-sortable\");\n        header.append(\"<span class='slick-sort-indicator\" + (options.numberedMultiColumnSort && !options.sortColNumberInSeparateSpan ? \" slick-sort-indicator-numbered\" : \"\") + \"' />\");\n\n        if (options.numberedMultiColumnSort && options.sortColNumberInSeparateSpan) {\n          header.append(\"<span class='slick-sort-indicator-numbered' />\");\n        }\n      }\n\n      trigger(self.onHeaderCellRendered, {\n        \"node\": header[0],\n        \"column\": m,\n        \"grid\": self\n      });\n\n      if (options.showHeaderRow) {\n        var headerRowCell = $(\"<div class='ui-state-default slick-headerrow-column l\" + i + \" r\" + i + \"'></div>\").data(\"column\", m).appendTo($headerRow);\n        trigger(self.onHeaderRowCellRendered, {\n          \"node\": headerRowCell[0],\n          \"column\": m,\n          \"grid\": self\n        });\n      }\n\n      if (options.createFooterRow && options.showFooterRow) {\n        var footerRowCell = $(\"<div class='ui-state-default slick-footerrow-column l\" + i + \" r\" + i + \"'></div>\").data(\"column\", m).appendTo($footerRow);\n        trigger(self.onFooterRowCellRendered, {\n          \"node\": footerRowCell[0],\n          \"column\": m\n        });\n      }\n    }\n\n    setSortColumns(sortColumns);\n    setupColumnResize();\n\n    if (options.enableColumnReorder) {\n      if (typeof options.enableColumnReorder == 'function') {\n        options.enableColumnReorder(self, $headers, headerColumnWidthDiff, setColumns, setupColumnResize, columns, getColumnIndex, uid, trigger);\n      } else {\n        setupColumnReorder();\n      }\n    }\n  }\n\n  function setupColumnSort() {\n    $headers.click(function (e) {\n      if (columnResizeDragging) return; // temporary workaround for a bug in jQuery 1.7.1 (http://bugs.jquery.com/ticket/11328)\n\n      e.metaKey = e.metaKey || e.ctrlKey;\n\n      if ($(e.target).hasClass(\"slick-resizable-handle\")) {\n        return;\n      }\n\n      var $col = $(e.target).closest(\".slick-header-column\");\n\n      if (!$col.length) {\n        return;\n      }\n\n      var column = $col.data(\"column\");\n\n      if (column.sortable) {\n        if (!getEditorLock().commitCurrentEdit()) {\n          return;\n        }\n\n        var sortColumn = null;\n        var i = 0;\n\n        for (; i < sortColumns.length; i++) {\n          if (sortColumns[i].columnId == column.id) {\n            sortColumn = sortColumns[i];\n            sortColumn.sortAsc = !sortColumn.sortAsc;\n            break;\n          }\n        }\n\n        var hadSortCol = !!sortColumn;\n\n        if (options.tristateMultiColumnSort) {\n          if (!sortColumn) {\n            sortColumn = {\n              columnId: column.id,\n              sortAsc: column.defaultSortAsc\n            };\n          }\n\n          if (hadSortCol && sortColumn.sortAsc) {\n            // three state: remove sort rather than go back to ASC\n            sortColumns.splice(i, 1);\n            sortColumn = null;\n          }\n\n          if (!options.multiColumnSort) {\n            sortColumns = [];\n          }\n\n          if (sortColumn && (!hadSortCol || !options.multiColumnSort)) {\n            sortColumns.push(sortColumn);\n          }\n        } else {\n          // legacy behaviour\n          if (e.metaKey && options.multiColumnSort) {\n            if (sortColumn) {\n              sortColumns.splice(i, 1);\n            }\n          } else {\n            if (!e.shiftKey && !e.metaKey || !options.multiColumnSort) {\n              sortColumns = [];\n            }\n\n            if (!sortColumn) {\n              sortColumn = {\n                columnId: column.id,\n                sortAsc: column.defaultSortAsc\n              };\n              sortColumns.push(sortColumn);\n            } else if (sortColumns.length == 0) {\n              sortColumns.push(sortColumn);\n            }\n          }\n        }\n\n        setSortColumns(sortColumns);\n\n        if (!options.multiColumnSort) {\n          trigger(self.onSort, {\n            multiColumnSort: false,\n            sortCol: sortColumns.length > 0 ? column : null,\n            sortAsc: sortColumns.length > 0 ? sortColumns[0].sortAsc : true\n          }, e);\n        } else {\n          trigger(self.onSort, {\n            multiColumnSort: true,\n            sortCols: $.map(sortColumns, function (col) {\n              return {\n                sortCol: columns[getColumnIndex(col.columnId)],\n                sortAsc: col.sortAsc\n              };\n            })\n          }, e);\n        }\n      }\n    });\n  }\n\n  function setupColumnReorder() {\n    $headers.filter(\":ui-sortable\").sortable(\"destroy\");\n    $headers.sortable({\n      containment: \"parent\",\n      distance: 3,\n      axis: \"x\",\n      cursor: \"default\",\n      tolerance: \"intersection\",\n      helper: \"clone\",\n      placeholder: \"slick-sortable-placeholder ui-state-default slick-header-column\",\n      start: function (e, ui) {\n        ui.placeholder.width(ui.helper.outerWidth() - headerColumnWidthDiff);\n        $(ui.helper).addClass(\"slick-header-column-active\");\n      },\n      beforeStop: function (e, ui) {\n        $(ui.helper).removeClass(\"slick-header-column-active\");\n      },\n      stop: function (e) {\n        if (!getEditorLock().commitCurrentEdit()) {\n          $(this).sortable(\"cancel\");\n          return;\n        }\n\n        var reorderedIds = $headers.sortable(\"toArray\");\n        var reorderedColumns = [];\n\n        for (var i = 0; i < reorderedIds.length; i++) {\n          reorderedColumns.push(columns[getColumnIndex(reorderedIds[i].replace(uid, \"\"))]);\n        }\n\n        setColumns(reorderedColumns);\n        trigger(self.onColumnsReordered, {});\n        e.stopPropagation();\n        setupColumnResize();\n      }\n    });\n  }\n\n  function setupColumnResize() {\n    var $col, j, c, pageX, columnElements, minPageX, maxPageX, firstResizable, lastResizable;\n    columnElements = $headers.children();\n    columnElements.find(\".slick-resizable-handle\").remove();\n    columnElements.each(function (i, e) {\n      if (i >= columns.length) {\n        return;\n      }\n\n      if (columns[i].resizable) {\n        if (firstResizable === undefined) {\n          firstResizable = i;\n        }\n\n        lastResizable = i;\n      }\n    });\n\n    if (firstResizable === undefined) {\n      return;\n    }\n\n    columnElements.each(function (i, e) {\n      if (i >= columns.length) {\n        return;\n      }\n\n      if (i < firstResizable || options.forceFitColumns && i >= lastResizable) {\n        return;\n      }\n\n      $col = $(e);\n      $(\"<div class='slick-resizable-handle' />\").appendTo(e).on(\"dragstart\", function (e, dd) {\n        if (!getEditorLock().commitCurrentEdit()) {\n          return false;\n        }\n\n        pageX = e.pageX;\n        $(this).parent().addClass(\"slick-header-column-active\");\n        var shrinkLeewayOnRight = null,\n            stretchLeewayOnRight = null; // lock each column's width option to current width\n\n        columnElements.each(function (i, e) {\n          if (i >= columns.length) {\n            return;\n          }\n\n          columns[i].previousWidth = $(e).outerWidth();\n        });\n\n        if (options.forceFitColumns) {\n          shrinkLeewayOnRight = 0;\n          stretchLeewayOnRight = 0; // colums on right affect maxPageX/minPageX\n\n          for (j = i + 1; j < columns.length; j++) {\n            c = columns[j];\n\n            if (c.resizable) {\n              if (stretchLeewayOnRight !== null) {\n                if (c.maxWidth) {\n                  stretchLeewayOnRight += c.maxWidth - c.previousWidth;\n                } else {\n                  stretchLeewayOnRight = null;\n                }\n              }\n\n              shrinkLeewayOnRight += c.previousWidth - Math.max(c.minWidth || 0, absoluteColumnMinWidth);\n            }\n          }\n        }\n\n        var shrinkLeewayOnLeft = 0,\n            stretchLeewayOnLeft = 0;\n\n        for (j = 0; j <= i; j++) {\n          // columns on left only affect minPageX\n          c = columns[j];\n\n          if (c.resizable) {\n            if (stretchLeewayOnLeft !== null) {\n              if (c.maxWidth) {\n                stretchLeewayOnLeft += c.maxWidth - c.previousWidth;\n              } else {\n                stretchLeewayOnLeft = null;\n              }\n            }\n\n            shrinkLeewayOnLeft += c.previousWidth - Math.max(c.minWidth || 0, absoluteColumnMinWidth);\n          }\n        }\n\n        if (shrinkLeewayOnRight === null) {\n          shrinkLeewayOnRight = 100000;\n        }\n\n        if (shrinkLeewayOnLeft === null) {\n          shrinkLeewayOnLeft = 100000;\n        }\n\n        if (stretchLeewayOnRight === null) {\n          stretchLeewayOnRight = 100000;\n        }\n\n        if (stretchLeewayOnLeft === null) {\n          stretchLeewayOnLeft = 100000;\n        }\n\n        maxPageX = pageX + Math.min(shrinkLeewayOnRight, stretchLeewayOnLeft);\n        minPageX = pageX - Math.min(shrinkLeewayOnLeft, stretchLeewayOnRight);\n      }).on(\"drag\", function (e, dd) {\n        columnResizeDragging = true;\n        var actualMinWidth,\n            d = Math.min(maxPageX, Math.max(minPageX, e.pageX)) - pageX,\n            x;\n\n        if (d < 0) {\n          // shrink column\n          x = d;\n\n          for (j = i; j >= 0; j--) {\n            c = columns[j];\n\n            if (c.resizable) {\n              actualMinWidth = Math.max(c.minWidth || 0, absoluteColumnMinWidth);\n\n              if (x && c.previousWidth + x < actualMinWidth) {\n                x += c.previousWidth - actualMinWidth;\n                c.width = actualMinWidth;\n              } else {\n                c.width = c.previousWidth + x;\n                x = 0;\n              }\n            }\n          }\n\n          if (options.forceFitColumns) {\n            x = -d;\n\n            for (j = i + 1; j < columns.length; j++) {\n              c = columns[j];\n\n              if (c.resizable) {\n                if (x && c.maxWidth && c.maxWidth - c.previousWidth < x) {\n                  x -= c.maxWidth - c.previousWidth;\n                  c.width = c.maxWidth;\n                } else {\n                  c.width = c.previousWidth + x;\n                  x = 0;\n                }\n              }\n            }\n          }\n        } else {\n          // stretch column\n          x = d;\n\n          for (j = i; j >= 0; j--) {\n            c = columns[j];\n\n            if (c.resizable) {\n              if (x && c.maxWidth && c.maxWidth - c.previousWidth < x) {\n                x -= c.maxWidth - c.previousWidth;\n                c.width = c.maxWidth;\n              } else {\n                c.width = c.previousWidth + x;\n                x = 0;\n              }\n            }\n          }\n\n          if (options.forceFitColumns) {\n            x = -d;\n\n            for (j = i + 1; j < columns.length; j++) {\n              c = columns[j];\n\n              if (c.resizable) {\n                actualMinWidth = Math.max(c.minWidth || 0, absoluteColumnMinWidth);\n\n                if (x && c.previousWidth + x < actualMinWidth) {\n                  x += c.previousWidth - actualMinWidth;\n                  c.width = actualMinWidth;\n                } else {\n                  c.width = c.previousWidth + x;\n                  x = 0;\n                }\n              }\n            }\n          }\n        }\n\n        applyColumnHeaderWidths();\n\n        if (options.syncColumnCellResize) {\n          applyColumnWidths();\n        }\n      }).on(\"dragend\", function (e, dd) {\n        var newWidth;\n        $(this).parent().removeClass(\"slick-header-column-active\");\n\n        for (j = 0; j < columns.length; j++) {\n          c = columns[j];\n          newWidth = $(columnElements[j]).outerWidth();\n\n          if (c.previousWidth !== newWidth && c.rerenderOnResize) {\n            invalidateAllRows();\n          }\n        }\n\n        updateCanvasWidth(true);\n        render();\n        trigger(self.onColumnsResized, {});\n        setTimeout(function () {\n          columnResizeDragging = false;\n        }, 300);\n      });\n    });\n  }\n\n  function getVBoxDelta($el) {\n    var p = [\"borderTopWidth\", \"borderBottomWidth\", \"paddingTop\", \"paddingBottom\"];\n    var delta = 0;\n    $.each(p, function (n, val) {\n      delta += parseFloat($el.css(val)) || 0;\n    });\n    return delta;\n  }\n\n  function measureCellPaddingAndBorder() {\n    var el;\n    var h = [\"borderLeftWidth\", \"borderRightWidth\", \"paddingLeft\", \"paddingRight\"];\n    var v = [\"borderTopWidth\", \"borderBottomWidth\", \"paddingTop\", \"paddingBottom\"]; // jquery prior to version 1.8 handles .width setter/getter as a direct css write/read\n    // jquery 1.8 changed .width to read the true inner element width if box-sizing is set to border-box, and introduced a setter for .outerWidth\n    // so for equivalent functionality, prior to 1.8 use .width, and after use .outerWidth\n\n    var verArray = $.fn.jquery.split('.');\n    jQueryNewWidthBehaviour = verArray[0] == 1 && verArray[1] >= 8 || verArray[0] >= 2;\n    el = $(\"<div class='ui-state-default slick-header-column' style='visibility:hidden'>-</div>\").appendTo($headers);\n    headerColumnWidthDiff = headerColumnHeightDiff = 0;\n\n    if (el.css(\"box-sizing\") != \"border-box\" && el.css(\"-moz-box-sizing\") != \"border-box\" && el.css(\"-webkit-box-sizing\") != \"border-box\") {\n      $.each(h, function (n, val) {\n        headerColumnWidthDiff += parseFloat(el.css(val)) || 0;\n      });\n      $.each(v, function (n, val) {\n        headerColumnHeightDiff += parseFloat(el.css(val)) || 0;\n      });\n    }\n\n    el.remove();\n    var r = $(\"<div class='slick-row' />\").appendTo($canvas);\n    el = $(\"<div class='slick-cell' id='' style='visibility:hidden'>-</div>\").appendTo(r);\n    cellWidthDiff = cellHeightDiff = 0;\n\n    if (el.css(\"box-sizing\") != \"border-box\" && el.css(\"-moz-box-sizing\") != \"border-box\" && el.css(\"-webkit-box-sizing\") != \"border-box\") {\n      $.each(h, function (n, val) {\n        cellWidthDiff += parseFloat(el.css(val)) || 0;\n      });\n      $.each(v, function (n, val) {\n        cellHeightDiff += parseFloat(el.css(val)) || 0;\n      });\n    }\n\n    r.remove();\n    absoluteColumnMinWidth = Math.max(headerColumnWidthDiff, cellWidthDiff);\n  }\n\n  function createCssRules() {\n    $style = $(\"<style type='text/css' rel='stylesheet' />\").appendTo($(\"head\"));\n    var rowHeight = options.rowHeight - cellHeightDiff;\n    var rules = [\".\" + uid + \" .slick-header-column { left: 1000px; }\", \".\" + uid + \" .slick-top-panel { height:\" + options.topPanelHeight + \"px; }\", \".\" + uid + \" .slick-preheader-panel { height:\" + options.preHeaderPanelHeight + \"px; }\", \".\" + uid + \" .slick-headerrow-columns { height:\" + options.headerRowHeight + \"px; }\", \".\" + uid + \" .slick-footerrow-columns { height:\" + options.footerRowHeight + \"px; }\", \".\" + uid + \" .slick-cell { height:\" + rowHeight + \"px; }\", \".\" + uid + \" .slick-row { height:\" + options.rowHeight + \"px; }\"];\n\n    for (var i = 0; i < columns.length; i++) {\n      rules.push(\".\" + uid + \" .l\" + i + \" { }\");\n      rules.push(\".\" + uid + \" .r\" + i + \" { }\");\n    }\n\n    if ($style[0].styleSheet) {\n      // IE\n      $style[0].styleSheet.cssText = rules.join(\" \");\n    } else {\n      $style[0].appendChild(document.createTextNode(rules.join(\" \")));\n    }\n  }\n\n  function getColumnCssRules(idx) {\n    var i;\n\n    if (!stylesheet) {\n      var sheets = document.styleSheets;\n\n      for (i = 0; i < sheets.length; i++) {\n        if ((sheets[i].ownerNode || sheets[i].owningElement) == $style[0]) {\n          stylesheet = sheets[i];\n          break;\n        }\n      }\n\n      if (!stylesheet) {\n        throw new Error(\"Cannot find stylesheet.\");\n      } // find and cache column CSS rules\n\n\n      columnCssRulesL = [];\n      columnCssRulesR = [];\n      var cssRules = stylesheet.cssRules || stylesheet.rules;\n      var matches, columnIdx;\n\n      for (i = 0; i < cssRules.length; i++) {\n        var selector = cssRules[i].selectorText;\n\n        if (matches = /\\.l\\d+/.exec(selector)) {\n          columnIdx = parseInt(matches[0].substr(2, matches[0].length - 2), 10);\n          columnCssRulesL[columnIdx] = cssRules[i];\n        } else if (matches = /\\.r\\d+/.exec(selector)) {\n          columnIdx = parseInt(matches[0].substr(2, matches[0].length - 2), 10);\n          columnCssRulesR[columnIdx] = cssRules[i];\n        }\n      }\n    }\n\n    return {\n      \"left\": columnCssRulesL[idx],\n      \"right\": columnCssRulesR[idx]\n    };\n  }\n\n  function removeCssRules() {\n    $style.remove();\n    stylesheet = null;\n  }\n\n  function destroy() {\n    getEditorLock().cancelCurrentEdit();\n    trigger(self.onBeforeDestroy, {});\n    var i = plugins.length;\n\n    while (i--) {\n      unregisterPlugin(plugins[i]);\n    }\n\n    if (options.enableColumnReorder) {\n      $headers.filter(\":ui-sortable\").sortable(\"destroy\");\n    }\n\n    unbindAncestorScrollEvents();\n    $container.off(\".slickgrid\");\n    removeCssRules();\n    $canvas.off(\"draginit dragstart dragend drag\");\n    $container.empty().removeClass(uid);\n  } //////////////////////////////////////////////////////////////////////////////////////////////\n  // General\n\n\n  function trigger(evt, args, e) {\n    e = e || new Slick.EventData();\n    args = args || {};\n    args.grid = self;\n    return evt.notify(args, e, self);\n  }\n\n  function getEditorLock() {\n    return options.editorLock;\n  }\n\n  function getEditController() {\n    return editController;\n  }\n\n  function getColumnIndex(id) {\n    return columnsById[id];\n  }\n\n  function autosizeColumns() {\n    var i,\n        c,\n        widths = [],\n        shrinkLeeway = 0,\n        total = 0,\n        prevTotal,\n        availWidth = viewportHasVScroll ? viewportW - scrollbarDimensions.width : viewportW;\n\n    for (i = 0; i < columns.length; i++) {\n      c = columns[i];\n      widths.push(c.width);\n      total += c.width;\n\n      if (c.resizable) {\n        shrinkLeeway += c.width - Math.max(c.minWidth, absoluteColumnMinWidth);\n      }\n    } // shrink\n\n\n    prevTotal = total;\n\n    while (total > availWidth && shrinkLeeway) {\n      var shrinkProportion = (total - availWidth) / shrinkLeeway;\n\n      for (i = 0; i < columns.length && total > availWidth; i++) {\n        c = columns[i];\n        var width = widths[i];\n\n        if (!c.resizable || width <= c.minWidth || width <= absoluteColumnMinWidth) {\n          continue;\n        }\n\n        var absMinWidth = Math.max(c.minWidth, absoluteColumnMinWidth);\n        var shrinkSize = Math.floor(shrinkProportion * (width - absMinWidth)) || 1;\n        shrinkSize = Math.min(shrinkSize, width - absMinWidth);\n        total -= shrinkSize;\n        shrinkLeeway -= shrinkSize;\n        widths[i] -= shrinkSize;\n      }\n\n      if (prevTotal <= total) {\n        // avoid infinite loop\n        break;\n      }\n\n      prevTotal = total;\n    } // grow\n\n\n    prevTotal = total;\n\n    while (total < availWidth) {\n      var growProportion = availWidth / total;\n\n      for (i = 0; i < columns.length && total < availWidth; i++) {\n        c = columns[i];\n        var currentWidth = widths[i];\n        var growSize;\n\n        if (!c.resizable || c.maxWidth <= currentWidth) {\n          growSize = 0;\n        } else {\n          growSize = Math.min(Math.floor(growProportion * currentWidth) - currentWidth, c.maxWidth - currentWidth || 1000000) || 1;\n        }\n\n        total += growSize;\n        widths[i] += total <= availWidth ? growSize : 0;\n      }\n\n      if (prevTotal >= total) {\n        // avoid infinite loop\n        break;\n      }\n\n      prevTotal = total;\n    }\n\n    var reRender = false;\n\n    for (i = 0; i < columns.length; i++) {\n      if (columns[i].rerenderOnResize && columns[i].width != widths[i]) {\n        reRender = true;\n      }\n\n      columns[i].width = widths[i];\n    }\n\n    applyColumnHeaderWidths();\n    updateCanvasWidth(true);\n    trigger(self.onAutosizeColumns, {\n      \"columns\": columns\n    });\n\n    if (reRender) {\n      invalidateAllRows();\n      render();\n    }\n  }\n\n  function applyColumnHeaderWidths() {\n    if (!initialized) {\n      return;\n    }\n\n    var h;\n\n    for (var i = 0, headers = $headers.children(), ii = columns.length; i < ii; i++) {\n      h = $(headers[i]);\n\n      if (jQueryNewWidthBehaviour) {\n        if (h.outerWidth() !== columns[i].width) {\n          h.outerWidth(columns[i].width);\n        }\n      } else {\n        if (h.width() !== columns[i].width - headerColumnWidthDiff) {\n          h.width(columns[i].width - headerColumnWidthDiff);\n        }\n      }\n    }\n\n    updateColumnCaches();\n  }\n\n  function applyColumnWidths() {\n    var x = 0,\n        w,\n        rule;\n\n    for (var i = 0; i < columns.length; i++) {\n      w = columns[i].width;\n      rule = getColumnCssRules(i);\n      rule.left.style.left = x + \"px\";\n      rule.right.style.right = canvasWidth - x - w + \"px\";\n      x += columns[i].width;\n    }\n  }\n\n  function setSortColumn(columnId, ascending) {\n    setSortColumns([{\n      columnId: columnId,\n      sortAsc: ascending\n    }]);\n  }\n\n  function setSortColumns(cols) {\n    sortColumns = cols;\n    var numberCols = options.numberedMultiColumnSort && sortColumns.length > 1;\n    var headerColumnEls = $headers.children();\n    headerColumnEls.removeClass(\"slick-header-column-sorted\").find(\".slick-sort-indicator\").removeClass(\"slick-sort-indicator-asc slick-sort-indicator-desc\");\n    headerColumnEls.find(\".slick-sort-indicator-numbered\").text('');\n    $.each(sortColumns, function (i, col) {\n      if (col.sortAsc == null) {\n        col.sortAsc = true;\n      }\n\n      var columnIndex = getColumnIndex(col.columnId);\n\n      if (columnIndex != null) {\n        headerColumnEls.eq(columnIndex).addClass(\"slick-header-column-sorted\").find(\".slick-sort-indicator\").addClass(col.sortAsc ? \"slick-sort-indicator-asc\" : \"slick-sort-indicator-desc\");\n\n        if (numberCols) {\n          headerColumnEls.eq(columnIndex).find(\".slick-sort-indicator-numbered\").text(i + 1);\n        }\n      }\n    });\n  }\n\n  function getSortColumns() {\n    return sortColumns;\n  }\n\n  function handleSelectedRangesChanged(e, ranges) {\n    selectedRows = [];\n    var hash = {};\n\n    for (var i = 0; i < ranges.length; i++) {\n      for (var j = ranges[i].fromRow; j <= ranges[i].toRow; j++) {\n        if (!hash[j]) {\n          // prevent duplicates\n          selectedRows.push(j);\n          hash[j] = {};\n        }\n\n        for (var k = ranges[i].fromCell; k <= ranges[i].toCell; k++) {\n          if (canCellBeSelected(j, k)) {\n            hash[j][columns[k].id] = options.selectedCellCssClass;\n          }\n        }\n      }\n    }\n\n    setCellCssStyles(options.selectedCellCssClass, hash);\n    trigger(self.onSelectedRowsChanged, {\n      rows: getSelectedRows()\n    }, e);\n  }\n\n  function getColumns() {\n    return columns;\n  }\n\n  function updateColumnCaches() {\n    // Pre-calculate cell boundaries.\n    columnPosLeft = [];\n    columnPosRight = [];\n    var x = 0;\n\n    for (var i = 0, ii = columns.length; i < ii; i++) {\n      columnPosLeft[i] = x;\n      columnPosRight[i] = x + columns[i].width;\n      x += columns[i].width;\n    }\n  }\n\n  function setColumns(columnDefinitions) {\n    columns = columnDefinitions;\n    columnsById = {};\n\n    for (var i = 0; i < columns.length; i++) {\n      var m = columns[i] = $.extend({}, columnDefaults, columns[i]);\n      columnsById[m.id] = i;\n\n      if (m.minWidth && m.width < m.minWidth) {\n        m.width = m.minWidth;\n      }\n\n      if (m.maxWidth && m.width > m.maxWidth) {\n        m.width = m.maxWidth;\n      }\n    }\n\n    updateColumnCaches();\n\n    if (initialized) {\n      invalidateAllRows();\n      createColumnHeaders();\n      removeCssRules();\n      createCssRules();\n      resizeCanvas();\n      applyColumnWidths();\n      handleScroll();\n    }\n  }\n\n  function getOptions() {\n    return options;\n  }\n\n  function setOptions(args, suppressRender) {\n    if (!getEditorLock().commitCurrentEdit()) {\n      return;\n    }\n\n    makeActiveCellNormal();\n\n    if (options.enableAddRow !== args.enableAddRow) {\n      invalidateRow(getDataLength());\n    }\n\n    options = $.extend(options, args);\n    validateAndEnforceOptions();\n    $viewport.css(\"overflow-y\", options.autoHeight ? \"hidden\" : \"auto\");\n\n    if (!suppressRender) {\n      render();\n    }\n  }\n\n  function validateAndEnforceOptions() {\n    if (options.autoHeight) {\n      options.leaveSpaceForNewRows = false;\n    }\n  }\n\n  function setData(newData, scrollToTop) {\n    data = newData;\n    invalidateAllRows();\n    updateRowCount();\n\n    if (scrollToTop) {\n      scrollTo(0);\n    }\n  }\n\n  function getData() {\n    return data;\n  }\n\n  function getDataLength() {\n    if (data.getLength) {\n      return data.getLength();\n    } else {\n      return data.length;\n    }\n  }\n\n  function getDataLengthIncludingAddNew() {\n    return getDataLength() + (!options.enableAddRow ? 0 : !pagingActive || pagingIsLastPage ? 1 : 0);\n  }\n\n  function getDataItem(i) {\n    if (data.getItem) {\n      return data.getItem(i);\n    } else {\n      return data[i];\n    }\n  }\n\n  function getTopPanel() {\n    return $topPanel[0];\n  }\n\n  function setTopPanelVisibility(visible) {\n    if (options.showTopPanel != visible) {\n      options.showTopPanel = visible;\n\n      if (visible) {\n        $topPanelScroller.slideDown(\"fast\", resizeCanvas);\n      } else {\n        $topPanelScroller.slideUp(\"fast\", resizeCanvas);\n      }\n    }\n  }\n\n  function setHeaderRowVisibility(visible) {\n    if (options.showHeaderRow != visible) {\n      options.showHeaderRow = visible;\n\n      if (visible) {\n        $headerRowScroller.slideDown(\"fast\", resizeCanvas);\n      } else {\n        $headerRowScroller.slideUp(\"fast\", resizeCanvas);\n      }\n    }\n  }\n\n  function setFooterRowVisibility(visible) {\n    if (options.showFooterRow != visible) {\n      options.showFooterRow = visible;\n\n      if (visible) {\n        $footerRowScroller.slideDown(\"fast\", resizeCanvas);\n      } else {\n        $footerRowScroller.slideUp(\"fast\", resizeCanvas);\n      }\n    }\n  }\n\n  function setPreHeaderPanelVisibility(visible) {\n    if (options.showPreHeaderPanel != visible) {\n      options.showPreHeaderPanel = visible;\n\n      if (visible) {\n        $preHeaderPanelScroller.slideDown(\"fast\", resizeCanvas);\n      } else {\n        $preHeaderPanelScroller.slideUp(\"fast\", resizeCanvas);\n      }\n    }\n  }\n\n  function getContainerNode() {\n    return $container.get(0);\n  } //////////////////////////////////////////////////////////////////////////////////////////////\n  // Rendering / Scrolling\n\n\n  function getRowTop(row) {\n    return options.rowHeight * row - offset;\n  }\n\n  function getRowFromPosition(y) {\n    return Math.floor((y + offset) / options.rowHeight);\n  }\n\n  function scrollTo(y) {\n    y = Math.max(y, 0);\n    y = Math.min(y, th - viewportH + (viewportHasHScroll ? scrollbarDimensions.height : 0));\n    var oldOffset = offset;\n    page = Math.min(n - 1, Math.floor(y / ph));\n    offset = Math.round(page * cj);\n    var newScrollTop = y - offset;\n\n    if (offset != oldOffset) {\n      var range = getVisibleRange(newScrollTop);\n      cleanupRows(range);\n      updateRowPositions();\n    }\n\n    if (prevScrollTop != newScrollTop) {\n      vScrollDir = prevScrollTop + oldOffset < newScrollTop + offset ? 1 : -1;\n      $viewport[0].scrollTop = lastRenderedScrollTop = scrollTop = prevScrollTop = newScrollTop;\n      trigger(self.onViewportChanged, {});\n    }\n  }\n\n  function defaultFormatter(row, cell, value, columnDef, dataContext, grid) {\n    if (value == null) {\n      return \"\";\n    } else {\n      return (value + \"\").replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\");\n    }\n  }\n\n  function getFormatter(row, column) {\n    var rowMetadata = data.getItemMetadata && data.getItemMetadata(row); // look up by id, then index\n\n    var columnOverrides = rowMetadata && rowMetadata.columns && (rowMetadata.columns[column.id] || rowMetadata.columns[getColumnIndex(column.id)]);\n    return columnOverrides && columnOverrides.formatter || rowMetadata && rowMetadata.formatter || column.formatter || options.formatterFactory && options.formatterFactory.getFormatter(column) || options.defaultFormatter;\n  }\n\n  function getEditor(row, cell) {\n    var column = columns[cell];\n    var rowMetadata = data.getItemMetadata && data.getItemMetadata(row);\n    var columnMetadata = rowMetadata && rowMetadata.columns;\n\n    if (columnMetadata && columnMetadata[column.id] && columnMetadata[column.id].editor !== undefined) {\n      return columnMetadata[column.id].editor;\n    }\n\n    if (columnMetadata && columnMetadata[cell] && columnMetadata[cell].editor !== undefined) {\n      return columnMetadata[cell].editor;\n    }\n\n    return column.editor || options.editorFactory && options.editorFactory.getEditor(column);\n  }\n\n  function getDataItemValueForColumn(item, columnDef) {\n    if (options.dataItemColumnValueExtractor) {\n      return options.dataItemColumnValueExtractor(item, columnDef);\n    }\n\n    return item[columnDef.field];\n  }\n\n  function appendRowHtml(stringArray, row, range, dataLength) {\n    var d = getDataItem(row);\n    var dataLoading = row < dataLength && !d;\n    var rowCss = \"slick-row\" + (dataLoading ? \" loading\" : \"\") + (row === activeRow && options.showCellSelection ? \" active\" : \"\") + (row % 2 == 1 ? \" odd\" : \" even\");\n\n    if (!d) {\n      rowCss += \" \" + options.addNewRowCssClass;\n    }\n\n    var metadata = data.getItemMetadata && data.getItemMetadata(row);\n\n    if (metadata && metadata.cssClasses) {\n      rowCss += \" \" + metadata.cssClasses;\n    }\n\n    stringArray.push(\"<div class='ui-widget-content \" + rowCss + \"' style='top:\" + getRowTop(row) + \"px'>\");\n    var colspan, m;\n\n    for (var i = 0, ii = columns.length; i < ii; i++) {\n      m = columns[i];\n      colspan = 1;\n\n      if (metadata && metadata.columns) {\n        var columnData = metadata.columns[m.id] || metadata.columns[i];\n        colspan = columnData && columnData.colspan || 1;\n\n        if (colspan === \"*\") {\n          colspan = ii - i;\n        }\n      } // Do not render cells outside of the viewport.\n\n\n      if (columnPosRight[Math.min(ii - 1, i + colspan - 1)] > range.leftPx) {\n        if (columnPosLeft[i] > range.rightPx) {\n          // All columns to the right are outside the range.\n          break;\n        }\n\n        appendCellHtml(stringArray, row, i, colspan, d);\n      }\n\n      if (colspan > 1) {\n        i += colspan - 1;\n      }\n    }\n\n    stringArray.push(\"</div>\");\n  }\n\n  function appendCellHtml(stringArray, row, cell, colspan, item) {\n    // stringArray: stringBuilder containing the HTML parts\n    // row, cell: row and column index\n    // colspan: HTML colspan\n    // item: grid data for row\n    var m = columns[cell];\n    var cellCss = \"slick-cell l\" + cell + \" r\" + Math.min(columns.length - 1, cell + colspan - 1) + (m.cssClass ? \" \" + m.cssClass : \"\");\n\n    if (row === activeRow && cell === activeCell && options.showCellSelection) {\n      cellCss += \" active\";\n    } // TODO:  merge them together in the setter\n\n\n    for (var key in cellCssClasses) {\n      if (cellCssClasses[key][row] && cellCssClasses[key][row][m.id]) {\n        cellCss += \" \" + cellCssClasses[key][row][m.id];\n      }\n    }\n\n    var value = null,\n        formatterResult = '';\n\n    if (item) {\n      value = getDataItemValueForColumn(item, m);\n      formatterResult = getFormatter(row, m)(row, cell, value, m, item, self);\n\n      if (formatterResult === null || formatterResult === undefined) {\n        formatterResult = '';\n      }\n    } // get addl css class names from object type formatter return and from string type return of onBeforeAppendCell\n\n\n    var addlCssClasses = trigger(self.onBeforeAppendCell, {\n      row: row,\n      cell: cell,\n      value: value,\n      dataContext: item\n    }) || '';\n    addlCssClasses += formatterResult && formatterResult.addClasses ? (addlCssClasses ? ' ' : '') + formatterResult.addClasses : '';\n    stringArray.push(\"<div class='\" + cellCss + (addlCssClasses ? ' ' + addlCssClasses : '') + \"'>\"); // if there is a corresponding row (if not, this is the Add New row or this data hasn't been loaded yet)\n\n    if (item) {\n      stringArray.push(Object.prototype.toString.call(formatterResult) !== '[object Object]' ? formatterResult : formatterResult.text);\n    }\n\n    stringArray.push(\"</div>\");\n    rowsCache[row].cellRenderQueue.push(cell);\n    rowsCache[row].cellColSpans[cell] = colspan;\n  }\n\n  function cleanupRows(rangeToKeep) {\n    for (var i in rowsCache) {\n      if ((i = parseInt(i, 10)) !== activeRow && (i < rangeToKeep.top || i > rangeToKeep.bottom)) {\n        removeRowFromCache(i);\n      }\n    }\n\n    if (options.enableAsyncPostRenderCleanup) {\n      startPostProcessingCleanup();\n    }\n  }\n\n  function invalidate() {\n    updateRowCount();\n    invalidateAllRows();\n    render();\n  }\n\n  function invalidateAllRows() {\n    if (currentEditor) {\n      makeActiveCellNormal();\n    }\n\n    for (var row in rowsCache) {\n      removeRowFromCache(row);\n    }\n\n    if (options.enableAsyncPostRenderCleanup) {\n      startPostProcessingCleanup();\n    }\n  }\n\n  function queuePostProcessedRowForCleanup(cacheEntry, postProcessedRow, rowIdx) {\n    postProcessgroupId++; // store and detach node for later async cleanup\n\n    for (var columnIdx in postProcessedRow) {\n      if (postProcessedRow.hasOwnProperty(columnIdx)) {\n        postProcessedCleanupQueue.push({\n          actionType: 'C',\n          groupId: postProcessgroupId,\n          node: cacheEntry.cellNodesByColumnIdx[columnIdx | 0],\n          columnIdx: columnIdx | 0,\n          rowIdx: rowIdx\n        });\n      }\n    }\n\n    postProcessedCleanupQueue.push({\n      actionType: 'R',\n      groupId: postProcessgroupId,\n      node: cacheEntry.rowNode\n    });\n    $(cacheEntry.rowNode).detach();\n  }\n\n  function queuePostProcessedCellForCleanup(cellnode, columnIdx, rowIdx) {\n    postProcessedCleanupQueue.push({\n      actionType: 'C',\n      groupId: postProcessgroupId,\n      node: cellnode,\n      columnIdx: columnIdx,\n      rowIdx: rowIdx\n    });\n    $(cellnode).detach();\n  }\n\n  function removeRowFromCache(row) {\n    var cacheEntry = rowsCache[row];\n\n    if (!cacheEntry) {\n      return;\n    }\n\n    if (cacheEntry.rowNode) {\n      if (rowNodeFromLastMouseWheelEvent === cacheEntry.rowNode) {\n        cacheEntry.rowNode.style.display = 'none';\n        zombieRowNodeFromLastMouseWheelEvent = rowNodeFromLastMouseWheelEvent;\n        zombieRowCacheFromLastMouseWheelEvent = cacheEntry;\n        zombieRowPostProcessedFromLastMouseWheelEvent = postProcessedRows[row]; // ignore post processing cleanup in this case - it will be dealt with later\n      } else {\n        if (options.enableAsyncPostRenderCleanup && postProcessedRows[row]) {\n          queuePostProcessedRowForCleanup(cacheEntry, postProcessedRows[row], row);\n        } else {\n          $canvas[0].removeChild(cacheEntry.rowNode);\n        }\n      }\n    }\n\n    delete rowsCache[row];\n    delete postProcessedRows[row];\n    renderedRows--;\n    counter_rows_removed++;\n  }\n\n  function invalidateRows(rows) {\n    var i, rl;\n\n    if (!rows || !rows.length) {\n      return;\n    }\n\n    vScrollDir = 0;\n    rl = rows.length;\n\n    for (i = 0; i < rl; i++) {\n      if (currentEditor && activeRow === rows[i]) {\n        makeActiveCellNormal();\n      }\n\n      if (rowsCache[rows[i]]) {\n        removeRowFromCache(rows[i]);\n      }\n    }\n\n    if (options.enableAsyncPostRenderCleanup) {\n      startPostProcessingCleanup();\n    }\n  }\n\n  function invalidateRow(row) {\n    if (!row && row !== 0) {\n      return;\n    }\n\n    invalidateRows([row]);\n  }\n\n  function applyFormatResultToCellNode(formatterResult, cellNode, suppressRemove) {\n    if (formatterResult === null || formatterResult === undefined) {\n      formatterResult = '';\n    }\n\n    if (Object.prototype.toString.call(formatterResult) !== '[object Object]') {\n      cellNode.innerHTML = formatterResult;\n      return;\n    }\n\n    cellNode.innerHTML = formatterResult.text;\n\n    if (formatterResult.removeClasses && !suppressRemove) {\n      $(cellNode).removeClass(formatterResult.removeClasses);\n    }\n\n    if (formatterResult.addClasses) {\n      $(cellNode).addClass(formatterResult.addClasses);\n    }\n  }\n\n  function updateCell(row, cell) {\n    var cellNode = getCellNode(row, cell);\n\n    if (!cellNode) {\n      return;\n    }\n\n    var m = columns[cell],\n        d = getDataItem(row);\n\n    if (currentEditor && activeRow === row && activeCell === cell) {\n      currentEditor.loadValue(d);\n    } else {\n      var formatterResult = d ? getFormatter(row, m)(row, cell, getDataItemValueForColumn(d, m), m, d, self) : \"\";\n      applyFormatResultToCellNode(formatterResult, cellNode);\n      invalidatePostProcessingResults(row);\n    }\n  }\n\n  function updateRow(row) {\n    var cacheEntry = rowsCache[row];\n\n    if (!cacheEntry) {\n      return;\n    }\n\n    ensureCellNodesInRowsCache(row);\n    var formatterResult,\n        d = getDataItem(row);\n\n    for (var columnIdx in cacheEntry.cellNodesByColumnIdx) {\n      if (!cacheEntry.cellNodesByColumnIdx.hasOwnProperty(columnIdx)) {\n        continue;\n      }\n\n      columnIdx = columnIdx | 0;\n      var m = columns[columnIdx],\n          node = cacheEntry.cellNodesByColumnIdx[columnIdx];\n\n      if (row === activeRow && columnIdx === activeCell && currentEditor) {\n        currentEditor.loadValue(d);\n      } else if (d) {\n        formatterResult = getFormatter(row, m)(row, columnIdx, getDataItemValueForColumn(d, m), m, d, self);\n        applyFormatResultToCellNode(formatterResult, node);\n      } else {\n        node.innerHTML = \"\";\n      }\n    }\n\n    invalidatePostProcessingResults(row);\n  }\n\n  function getViewportHeight() {\n    return parseFloat($.css($container[0], \"height\", true)) - parseFloat($.css($container[0], \"paddingTop\", true)) - parseFloat($.css($container[0], \"paddingBottom\", true)) - parseFloat($.css($headerScroller[0], \"height\")) - getVBoxDelta($headerScroller) - (options.showTopPanel ? options.topPanelHeight + getVBoxDelta($topPanelScroller) : 0) - (options.showHeaderRow ? options.headerRowHeight + getVBoxDelta($headerRowScroller) : 0) - (options.createFooterRow && options.showFooterRow ? options.footerRowHeight + getVBoxDelta($footerRowScroller) : 0) - (options.createPreHeaderPanel && options.showPreHeaderPanel ? options.preHeaderPanelHeight + getVBoxDelta($preHeaderPanelScroller) : 0);\n  }\n\n  function resizeCanvas() {\n    if (!initialized) {\n      return;\n    }\n\n    if (options.autoHeight) {\n      viewportH = options.rowHeight * getDataLengthIncludingAddNew();\n    } else {\n      viewportH = getViewportHeight();\n    }\n\n    numVisibleRows = Math.ceil(viewportH / options.rowHeight);\n    viewportW = parseFloat($.css($container[0], \"width\", true));\n\n    if (!options.autoHeight) {\n      $viewport.height(viewportH);\n    }\n\n    if (!scrollbarDimensions || !scrollbarDimensions.width) {\n      scrollbarDimensions = measureScrollbar();\n    }\n\n    if (options.forceFitColumns) {\n      autosizeColumns();\n    }\n\n    updateRowCount();\n    handleScroll(); // Since the width has changed, force the render() to reevaluate virtually rendered cells.\n\n    lastRenderedScrollLeft = -1;\n    render();\n  }\n\n  function updatePagingStatusFromView(pagingInfo) {\n    pagingActive = pagingInfo.pageSize !== 0;\n    pagingIsLastPage = pagingInfo.pageNum == pagingInfo.totalPages - 1;\n  }\n\n  function updateRowCount() {\n    if (!initialized) {\n      return;\n    }\n\n    var dataLength = getDataLength();\n    var dataLengthIncludingAddNew = getDataLengthIncludingAddNew();\n    var numberOfRows = dataLengthIncludingAddNew + (options.leaveSpaceForNewRows ? numVisibleRows - 1 : 0);\n    var oldViewportHasVScroll = viewportHasVScroll; // with autoHeight, we do not need to accommodate the vertical scroll bar\n\n    viewportHasVScroll = options.alwaysShowVerticalScroll || !options.autoHeight && numberOfRows * options.rowHeight > viewportH;\n    viewportHasHScroll = canvasWidth > viewportW - scrollbarDimensions.width;\n    makeActiveCellNormal(); // remove the rows that are now outside of the data range\n    // this helps avoid redundant calls to .removeRow() when the size of the data decreased by thousands of rows\n\n    var r1 = dataLength - 1;\n\n    for (var i in rowsCache) {\n      if (i > r1) {\n        removeRowFromCache(i);\n      }\n    }\n\n    if (options.enableAsyncPostRenderCleanup) {\n      startPostProcessingCleanup();\n    }\n\n    if (activeCellNode && activeRow > r1) {\n      resetActiveCell();\n    }\n\n    var oldH = h;\n    th = Math.max(options.rowHeight * numberOfRows, viewportH - scrollbarDimensions.height);\n\n    if (th < maxSupportedCssHeight) {\n      // just one page\n      h = ph = th;\n      n = 1;\n      cj = 0;\n    } else {\n      // break into pages\n      h = maxSupportedCssHeight;\n      ph = h / 100;\n      n = Math.floor(th / ph);\n      cj = (th - h) / (n - 1);\n    }\n\n    if (h !== oldH) {\n      $canvas.css(\"height\", h);\n      scrollTop = $viewport[0].scrollTop;\n    }\n\n    var oldScrollTopInRange = scrollTop + offset <= th - viewportH;\n\n    if (th == 0 || scrollTop == 0) {\n      page = offset = 0;\n    } else if (oldScrollTopInRange) {\n      // maintain virtual position\n      scrollTo(scrollTop + offset);\n    } else {\n      // scroll to bottom\n      scrollTo(th - viewportH);\n    }\n\n    if (h != oldH && options.autoHeight) {\n      resizeCanvas();\n    }\n\n    if (options.forceFitColumns && oldViewportHasVScroll != viewportHasVScroll) {\n      autosizeColumns();\n    }\n\n    updateCanvasWidth(false);\n  }\n\n  function getVisibleRange(viewportTop, viewportLeft) {\n    if (viewportTop == null) {\n      viewportTop = scrollTop;\n    }\n\n    if (viewportLeft == null) {\n      viewportLeft = scrollLeft;\n    }\n\n    return {\n      top: getRowFromPosition(viewportTop),\n      bottom: getRowFromPosition(viewportTop + viewportH) + 1,\n      leftPx: viewportLeft,\n      rightPx: viewportLeft + viewportW\n    };\n  }\n\n  function getRenderedRange(viewportTop, viewportLeft) {\n    var range = getVisibleRange(viewportTop, viewportLeft);\n    var buffer = Math.round(viewportH / options.rowHeight);\n    var minBuffer = options.minRowBuffer;\n\n    if (vScrollDir == -1) {\n      range.top -= buffer;\n      range.bottom += minBuffer;\n    } else if (vScrollDir == 1) {\n      range.top -= minBuffer;\n      range.bottom += buffer;\n    } else {\n      range.top -= minBuffer;\n      range.bottom += minBuffer;\n    }\n\n    range.top = Math.max(0, range.top);\n    range.bottom = Math.min(getDataLengthIncludingAddNew() - 1, range.bottom);\n    range.leftPx -= viewportW;\n    range.rightPx += viewportW;\n    range.leftPx = Math.max(0, range.leftPx);\n    range.rightPx = Math.min(canvasWidth, range.rightPx);\n    return range;\n  }\n\n  function ensureCellNodesInRowsCache(row) {\n    var cacheEntry = rowsCache[row];\n\n    if (cacheEntry) {\n      if (cacheEntry.cellRenderQueue.length) {\n        var lastChild = cacheEntry.rowNode.lastChild;\n\n        while (cacheEntry.cellRenderQueue.length) {\n          var columnIdx = cacheEntry.cellRenderQueue.pop();\n          cacheEntry.cellNodesByColumnIdx[columnIdx] = lastChild;\n          lastChild = lastChild.previousSibling;\n        }\n      }\n    }\n  }\n\n  function cleanUpCells(range, row) {\n    var totalCellsRemoved = 0;\n    var cacheEntry = rowsCache[row]; // Remove cells outside the range.\n\n    var cellsToRemove = [];\n\n    for (var i in cacheEntry.cellNodesByColumnIdx) {\n      // I really hate it when people mess with Array.prototype.\n      if (!cacheEntry.cellNodesByColumnIdx.hasOwnProperty(i)) {\n        continue;\n      } // This is a string, so it needs to be cast back to a number.\n\n\n      i = i | 0;\n      var colspan = cacheEntry.cellColSpans[i];\n\n      if (columnPosLeft[i] > range.rightPx || columnPosRight[Math.min(columns.length - 1, i + colspan - 1)] < range.leftPx) {\n        if (!(row == activeRow && i == activeCell)) {\n          cellsToRemove.push(i);\n        }\n      }\n    }\n\n    var cellToRemove, node;\n    postProcessgroupId++;\n\n    while ((cellToRemove = cellsToRemove.pop()) != null) {\n      node = cacheEntry.cellNodesByColumnIdx[cellToRemove];\n\n      if (options.enableAsyncPostRenderCleanup && postProcessedRows[row] && postProcessedRows[row][cellToRemove]) {\n        queuePostProcessedCellForCleanup(node, cellToRemove, row);\n      } else {\n        cacheEntry.rowNode.removeChild(node);\n      }\n\n      delete cacheEntry.cellColSpans[cellToRemove];\n      delete cacheEntry.cellNodesByColumnIdx[cellToRemove];\n\n      if (postProcessedRows[row]) {\n        delete postProcessedRows[row][cellToRemove];\n      }\n\n      totalCellsRemoved++;\n    }\n  }\n\n  function cleanUpAndRenderCells(range) {\n    var cacheEntry;\n    var stringArray = [];\n    var processedRows = [];\n    var cellsAdded;\n    var totalCellsAdded = 0;\n    var colspan;\n\n    for (var row = range.top, btm = range.bottom; row <= btm; row++) {\n      cacheEntry = rowsCache[row];\n\n      if (!cacheEntry) {\n        continue;\n      } // cellRenderQueue populated in renderRows() needs to be cleared first\n\n\n      ensureCellNodesInRowsCache(row);\n      cleanUpCells(range, row); // Render missing cells.\n\n      cellsAdded = 0;\n      var metadata = data.getItemMetadata && data.getItemMetadata(row);\n      metadata = metadata && metadata.columns;\n      var d = getDataItem(row); // TODO:  shorten this loop (index? heuristics? binary search?)\n\n      for (var i = 0, ii = columns.length; i < ii; i++) {\n        // Cells to the right are outside the range.\n        if (columnPosLeft[i] > range.rightPx) {\n          break;\n        } // Already rendered.\n\n\n        if ((colspan = cacheEntry.cellColSpans[i]) != null) {\n          i += colspan > 1 ? colspan - 1 : 0;\n          continue;\n        }\n\n        colspan = 1;\n\n        if (metadata) {\n          var columnData = metadata[columns[i].id] || metadata[i];\n          colspan = columnData && columnData.colspan || 1;\n\n          if (colspan === \"*\") {\n            colspan = ii - i;\n          }\n        }\n\n        if (columnPosRight[Math.min(ii - 1, i + colspan - 1)] > range.leftPx) {\n          appendCellHtml(stringArray, row, i, colspan, d);\n          cellsAdded++;\n        }\n\n        i += colspan > 1 ? colspan - 1 : 0;\n      }\n\n      if (cellsAdded) {\n        totalCellsAdded += cellsAdded;\n        processedRows.push(row);\n      }\n    }\n\n    if (!stringArray.length) {\n      return;\n    }\n\n    var x = document.createElement(\"div\");\n    x.innerHTML = stringArray.join(\"\");\n    var processedRow;\n    var node;\n\n    while ((processedRow = processedRows.pop()) != null) {\n      cacheEntry = rowsCache[processedRow];\n      var columnIdx;\n\n      while ((columnIdx = cacheEntry.cellRenderQueue.pop()) != null) {\n        node = x.lastChild;\n        cacheEntry.rowNode.appendChild(node);\n        cacheEntry.cellNodesByColumnIdx[columnIdx] = node;\n      }\n    }\n  }\n\n  function renderRows(range) {\n    var parentNode = $canvas[0],\n        stringArray = [],\n        rows = [],\n        needToReselectCell = false,\n        dataLength = getDataLength();\n\n    for (var i = range.top, ii = range.bottom; i <= ii; i++) {\n      if (rowsCache[i]) {\n        continue;\n      }\n\n      renderedRows++;\n      rows.push(i); // Create an entry right away so that appendRowHtml() can\n      // start populatating it.\n\n      rowsCache[i] = {\n        \"rowNode\": null,\n        // ColSpans of rendered cells (by column idx).\n        // Can also be used for checking whether a cell has been rendered.\n        \"cellColSpans\": [],\n        // Cell nodes (by column idx).  Lazy-populated by ensureCellNodesInRowsCache().\n        \"cellNodesByColumnIdx\": [],\n        // Column indices of cell nodes that have been rendered, but not yet indexed in\n        // cellNodesByColumnIdx.  These are in the same order as cell nodes added at the\n        // end of the row.\n        \"cellRenderQueue\": []\n      };\n      appendRowHtml(stringArray, i, range, dataLength);\n\n      if (activeCellNode && activeRow === i) {\n        needToReselectCell = true;\n      }\n\n      counter_rows_rendered++;\n    }\n\n    if (!rows.length) {\n      return;\n    }\n\n    var x = document.createElement(\"div\");\n    x.innerHTML = stringArray.join(\"\");\n\n    for (var i = 0, ii = rows.length; i < ii; i++) {\n      rowsCache[rows[i]].rowNode = parentNode.appendChild(x.firstChild);\n    }\n\n    if (needToReselectCell) {\n      activeCellNode = getCellNode(activeRow, activeCell);\n    }\n  }\n\n  function startPostProcessing() {\n    if (!options.enableAsyncPostRender) {\n      return;\n    }\n\n    clearTimeout(h_postrender);\n    h_postrender = setTimeout(asyncPostProcessRows, options.asyncPostRenderDelay);\n  }\n\n  function startPostProcessingCleanup() {\n    if (!options.enableAsyncPostRenderCleanup) {\n      return;\n    }\n\n    clearTimeout(h_postrenderCleanup);\n    h_postrenderCleanup = setTimeout(asyncPostProcessCleanupRows, options.asyncPostRenderCleanupDelay);\n  }\n\n  function invalidatePostProcessingResults(row) {\n    // change status of columns to be re-rendered\n    for (var columnIdx in postProcessedRows[row]) {\n      if (postProcessedRows[row].hasOwnProperty(columnIdx)) {\n        postProcessedRows[row][columnIdx] = 'C';\n      }\n    }\n\n    postProcessFromRow = Math.min(postProcessFromRow, row);\n    postProcessToRow = Math.max(postProcessToRow, row);\n    startPostProcessing();\n  }\n\n  function updateRowPositions() {\n    for (var row in rowsCache) {\n      rowsCache[row].rowNode.style.top = getRowTop(row) + \"px\";\n    }\n  }\n\n  function render() {\n    if (!initialized) {\n      return;\n    }\n\n    scrollThrottle.dequeue();\n    var visible = getVisibleRange();\n    var rendered = getRenderedRange(); // remove rows no longer in the viewport\n\n    cleanupRows(rendered); // add new rows & missing cells in existing rows\n\n    if (lastRenderedScrollLeft != scrollLeft) {\n      cleanUpAndRenderCells(rendered);\n    } // render missing rows\n\n\n    renderRows(rendered);\n    postProcessFromRow = visible.top;\n    postProcessToRow = Math.min(getDataLengthIncludingAddNew() - 1, visible.bottom);\n    startPostProcessing();\n    lastRenderedScrollTop = scrollTop;\n    lastRenderedScrollLeft = scrollLeft;\n    h_render = null;\n    trigger(self.onRendered, {\n      startRow: visible.top,\n      endRow: visible.bottom,\n      grid: self\n    });\n  }\n\n  function handleHeaderScroll() {\n    handleElementScroll($headerScroller[0]);\n  }\n\n  function handleHeaderRowScroll() {\n    handleElementScroll($headerRowScroller[0]);\n  }\n\n  function handleFooterRowScroll() {\n    handleElementScroll($footerRowScroller[0]);\n  }\n\n  function handlePreHeaderPanelScroll() {\n    handleElementScroll($preHeaderPanelScroller[0]);\n  }\n\n  function handleElementScroll(element) {\n    var scrollLeft = element.scrollLeft;\n\n    if (scrollLeft != $viewport[0].scrollLeft) {\n      $viewport[0].scrollLeft = scrollLeft;\n    }\n  }\n\n  function handleScroll() {\n    scrollTop = $viewport[0].scrollTop;\n    scrollLeft = $viewport[0].scrollLeft;\n    var vScrollDist = Math.abs(scrollTop - prevScrollTop);\n    var hScrollDist = Math.abs(scrollLeft - prevScrollLeft);\n\n    if (hScrollDist) {\n      prevScrollLeft = scrollLeft;\n      $headerScroller[0].scrollLeft = scrollLeft;\n      $topPanelScroller[0].scrollLeft = scrollLeft;\n      $headerRowScroller[0].scrollLeft = scrollLeft;\n\n      if (options.createFooterRow) {\n        $footerRowScroller[0].scrollLeft = scrollLeft;\n      }\n\n      if (options.createPreHeaderPanel) {\n        $preHeaderPanelScroller[0].scrollLeft = scrollLeft;\n      }\n    }\n\n    if (vScrollDist) {\n      vScrollDir = prevScrollTop < scrollTop ? 1 : -1;\n      prevScrollTop = scrollTop; // switch virtual pages if needed\n\n      if (vScrollDist < viewportH) {\n        scrollTo(scrollTop + offset);\n      } else {\n        var oldOffset = offset;\n\n        if (h == viewportH) {\n          page = 0;\n        } else {\n          page = Math.min(n - 1, Math.floor(scrollTop * ((th - viewportH) / (h - viewportH)) * (1 / ph)));\n        }\n\n        offset = Math.round(page * cj);\n\n        if (oldOffset != offset) {\n          invalidateAllRows();\n        }\n      }\n    }\n\n    if (hScrollDist || vScrollDist) {\n      var dx = Math.abs(lastRenderedScrollLeft - scrollLeft);\n      var dy = Math.abs(lastRenderedScrollTop - scrollTop);\n\n      if (dx > 20 || dy > 20) {\n        // if rendering is forced or scrolling is small enough to be \"easy\", just render\n        if (options.forceSyncScrolling || dy < viewportH && dx < viewportW) {\n          render();\n        } else {\n          // otherwise, perform \"difficult\" renders at a capped frequency\n          scrollThrottle.enqueue();\n        }\n\n        trigger(self.onViewportChanged, {});\n      }\n    }\n\n    trigger(self.onScroll, {\n      scrollLeft: scrollLeft,\n      scrollTop: scrollTop\n    });\n  }\n  /*\n  limits the frequency at which the provided action is executed.\n  call enqueue to execute the action - it will execute either immediately or, if it was executed less than minPeriod_ms in the past, as soon as minPeriod_ms has expired.\n  call dequeue to cancel any pending action.\n  */\n\n\n  function ActionThrottle(action, minPeriod_ms) {\n    var blocked = false;\n    var queued = false;\n\n    function enqueue() {\n      if (!blocked) {\n        blockAndExecute();\n      } else {\n        queued = true;\n      }\n    }\n\n    function dequeue() {\n      queued = false;\n    }\n\n    function blockAndExecute() {\n      blocked = true;\n      setTimeout(unblock, minPeriod_ms);\n      action();\n    }\n\n    function unblock() {\n      if (queued) {\n        dequeue();\n        blockAndExecute();\n      } else {\n        blocked = false;\n      }\n    }\n\n    return {\n      enqueue: enqueue,\n      dequeue: dequeue\n    };\n  }\n\n  function asyncPostProcessRows() {\n    var dataLength = getDataLength();\n\n    while (postProcessFromRow <= postProcessToRow) {\n      var row = vScrollDir >= 0 ? postProcessFromRow++ : postProcessToRow--;\n      var cacheEntry = rowsCache[row];\n\n      if (!cacheEntry || row >= dataLength) {\n        continue;\n      }\n\n      if (!postProcessedRows[row]) {\n        postProcessedRows[row] = {};\n      }\n\n      ensureCellNodesInRowsCache(row);\n\n      for (var columnIdx in cacheEntry.cellNodesByColumnIdx) {\n        if (!cacheEntry.cellNodesByColumnIdx.hasOwnProperty(columnIdx)) {\n          continue;\n        }\n\n        columnIdx = columnIdx | 0;\n        var m = columns[columnIdx];\n        var processedStatus = postProcessedRows[row][columnIdx]; // C=cleanup and re-render, R=rendered\n\n        if (m.asyncPostRender && processedStatus !== 'R') {\n          var node = cacheEntry.cellNodesByColumnIdx[columnIdx];\n\n          if (node) {\n            m.asyncPostRender(node, row, getDataItem(row), m, processedStatus === 'C');\n          }\n\n          postProcessedRows[row][columnIdx] = 'R';\n        }\n      }\n\n      h_postrender = setTimeout(asyncPostProcessRows, options.asyncPostRenderDelay);\n      return;\n    }\n  }\n\n  function asyncPostProcessCleanupRows() {\n    if (postProcessedCleanupQueue.length > 0) {\n      var groupId = postProcessedCleanupQueue[0].groupId; // loop through all queue members with this groupID\n\n      while (postProcessedCleanupQueue.length > 0 && postProcessedCleanupQueue[0].groupId == groupId) {\n        var entry = postProcessedCleanupQueue.shift();\n\n        if (entry.actionType == 'R') {\n          $(entry.node).remove();\n        }\n\n        if (entry.actionType == 'C') {\n          var column = columns[entry.columnIdx];\n\n          if (column.asyncPostRenderCleanup && entry.node) {\n            // cleanup must also remove element\n            column.asyncPostRenderCleanup(entry.node, entry.rowIdx, column);\n          }\n        }\n      } // call this function again after the specified delay\n\n\n      h_postrenderCleanup = setTimeout(asyncPostProcessCleanupRows, options.asyncPostRenderCleanupDelay);\n    }\n  }\n\n  function updateCellCssStylesOnRenderedRows(addedHash, removedHash) {\n    var node, columnId, addedRowHash, removedRowHash;\n\n    for (var row in rowsCache) {\n      removedRowHash = removedHash && removedHash[row];\n      addedRowHash = addedHash && addedHash[row];\n\n      if (removedRowHash) {\n        for (columnId in removedRowHash) {\n          if (!addedRowHash || removedRowHash[columnId] != addedRowHash[columnId]) {\n            node = getCellNode(row, getColumnIndex(columnId));\n\n            if (node) {\n              $(node).removeClass(removedRowHash[columnId]);\n            }\n          }\n        }\n      }\n\n      if (addedRowHash) {\n        for (columnId in addedRowHash) {\n          if (!removedRowHash || removedRowHash[columnId] != addedRowHash[columnId]) {\n            node = getCellNode(row, getColumnIndex(columnId));\n\n            if (node) {\n              $(node).addClass(addedRowHash[columnId]);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  function addCellCssStyles(key, hash) {\n    if (cellCssClasses[key]) {\n      throw new Error(\"addCellCssStyles: cell CSS hash with key '\" + key + \"' already exists.\");\n    }\n\n    cellCssClasses[key] = hash;\n    updateCellCssStylesOnRenderedRows(hash, null);\n    trigger(self.onCellCssStylesChanged, {\n      \"key\": key,\n      \"hash\": hash,\n      \"grid\": self\n    });\n  }\n\n  function removeCellCssStyles(key) {\n    if (!cellCssClasses[key]) {\n      return;\n    }\n\n    updateCellCssStylesOnRenderedRows(null, cellCssClasses[key]);\n    delete cellCssClasses[key];\n    trigger(self.onCellCssStylesChanged, {\n      \"key\": key,\n      \"hash\": null,\n      \"grid\": self\n    });\n  }\n\n  function setCellCssStyles(key, hash) {\n    var prevHash = cellCssClasses[key];\n    cellCssClasses[key] = hash;\n    updateCellCssStylesOnRenderedRows(hash, prevHash);\n    trigger(self.onCellCssStylesChanged, {\n      \"key\": key,\n      \"hash\": hash,\n      \"grid\": self\n    });\n  }\n\n  function getCellCssStyles(key) {\n    return cellCssClasses[key];\n  }\n\n  function flashCell(row, cell, speed) {\n    speed = speed || 100;\n\n    if (rowsCache[row]) {\n      var $cell = $(getCellNode(row, cell));\n\n      var toggleCellClass = function (times) {\n        if (!times) {\n          return;\n        }\n\n        setTimeout(function () {\n          $cell.queue(function () {\n            $cell.toggleClass(options.cellFlashingCssClass).dequeue();\n            toggleCellClass(times - 1);\n          });\n        }, speed);\n      };\n\n      toggleCellClass(4);\n    }\n  } //////////////////////////////////////////////////////////////////////////////////////////////\n  // Interactivity\n\n\n  function handleMouseWheel(e) {\n    var rowNode = $(e.target).closest(\".slick-row\")[0];\n\n    if (rowNode != rowNodeFromLastMouseWheelEvent) {\n      if (zombieRowNodeFromLastMouseWheelEvent && zombieRowNodeFromLastMouseWheelEvent != rowNode) {\n        if (options.enableAsyncPostRenderCleanup && zombieRowPostProcessedFromLastMouseWheelEvent) {\n          queuePostProcessedRowForCleanup(zombieRowCacheFromLastMouseWheelEvent, zombieRowPostProcessedFromLastMouseWheelEvent);\n        } else {\n          $canvas[0].removeChild(zombieRowNodeFromLastMouseWheelEvent);\n        }\n\n        zombieRowNodeFromLastMouseWheelEvent = null;\n        zombieRowCacheFromLastMouseWheelEvent = null;\n        zombieRowPostProcessedFromLastMouseWheelEvent = null;\n\n        if (options.enableAsyncPostRenderCleanup) {\n          startPostProcessingCleanup();\n        }\n      }\n\n      rowNodeFromLastMouseWheelEvent = rowNode;\n    }\n  }\n\n  function handleDragInit(e, dd) {\n    var cell = getCellFromEvent(e);\n\n    if (!cell || !cellExists(cell.row, cell.cell)) {\n      return false;\n    }\n\n    var retval = trigger(self.onDragInit, dd, e);\n\n    if (e.isImmediatePropagationStopped()) {\n      return retval;\n    } // if nobody claims to be handling drag'n'drop by stopping immediate propagation,\n    // cancel out of it\n\n\n    return false;\n  }\n\n  function handleDragStart(e, dd) {\n    var cell = getCellFromEvent(e);\n\n    if (!cell || !cellExists(cell.row, cell.cell)) {\n      return false;\n    }\n\n    var retval = trigger(self.onDragStart, dd, e);\n\n    if (e.isImmediatePropagationStopped()) {\n      return retval;\n    }\n\n    return false;\n  }\n\n  function handleDrag(e, dd) {\n    return trigger(self.onDrag, dd, e);\n  }\n\n  function handleDragEnd(e, dd) {\n    trigger(self.onDragEnd, dd, e);\n  }\n\n  function handleKeyDown(e) {\n    trigger(self.onKeyDown, {\n      row: activeRow,\n      cell: activeCell\n    }, e);\n    var handled = e.isImmediatePropagationStopped();\n    var keyCode = Slick.keyCode;\n\n    if (!handled) {\n      if (!e.shiftKey && !e.altKey) {\n        if (options.editable && currentEditor && currentEditor.keyCaptureList) {\n          if (currentEditor.keyCaptureList.indexOf(e.which) > -1) {\n            return;\n          }\n        }\n\n        if (e.which == keyCode.HOME) {\n          handled = e.ctrlKey ? navigateTop() : navigateRowStart();\n        } else if (e.which == keyCode.END) {\n          handled = e.ctrlKey ? navigateBottom() : navigateRowEnd();\n        }\n      }\n    }\n\n    if (!handled) {\n      if (!e.shiftKey && !e.altKey && !e.ctrlKey) {\n        // editor may specify an array of keys to bubble\n        if (options.editable && currentEditor && currentEditor.keyCaptureList) {\n          if (currentEditor.keyCaptureList.indexOf(e.which) > -1) {\n            return;\n          }\n        }\n\n        if (e.which == keyCode.ESCAPE) {\n          if (!getEditorLock().isActive()) {\n            return; // no editing mode to cancel, allow bubbling and default processing (exit without cancelling the event)\n          }\n\n          cancelEditAndSetFocus();\n        } else if (e.which == keyCode.PAGE_DOWN) {\n          navigatePageDown();\n          handled = true;\n        } else if (e.which == keyCode.PAGE_UP) {\n          navigatePageUp();\n          handled = true;\n        } else if (e.which == keyCode.LEFT) {\n          handled = navigateLeft();\n        } else if (e.which == keyCode.RIGHT) {\n          handled = navigateRight();\n        } else if (e.which == keyCode.UP) {\n          handled = navigateUp();\n        } else if (e.which == keyCode.DOWN) {\n          handled = navigateDown();\n        } else if (e.which == keyCode.TAB) {\n          handled = navigateNext();\n        } else if (e.which == keyCode.ENTER) {\n          if (options.editable) {\n            if (currentEditor) {\n              // adding new row\n              if (activeRow === getDataLength()) {\n                navigateDown();\n              } else {\n                commitEditAndSetFocus();\n              }\n            } else {\n              if (getEditorLock().commitCurrentEdit()) {\n                makeActiveCellEditable(undefined, undefined, e);\n              }\n            }\n          }\n\n          handled = true;\n        }\n      } else if (e.which == keyCode.TAB && e.shiftKey && !e.ctrlKey && !e.altKey) {\n        handled = navigatePrev();\n      }\n    }\n\n    if (handled) {\n      // the event has been handled so don't let parent element (bubbling/propagation) or browser (default) handle it\n      e.stopPropagation();\n      e.preventDefault();\n\n      try {\n        e.originalEvent.keyCode = 0; // prevent default behaviour for special keys in IE browsers (F3, F5, etc.)\n      } // ignore exceptions - setting the original event's keycode throws access denied exception for \"Ctrl\"\n      // (hitting control key only, nothing else), \"Shift\" (maybe others)\n      catch (error) {}\n    }\n  }\n\n  function handleClick(e) {\n    if (!currentEditor) {\n      // if this click resulted in some cell child node getting focus,\n      // don't steal it back - keyboard events will still bubble up\n      // IE9+ seems to default DIVs to tabIndex=0 instead of -1, so check for cell clicks directly.\n      if (e.target != document.activeElement || $(e.target).hasClass(\"slick-cell\")) {\n        setFocus();\n      }\n    }\n\n    var cell = getCellFromEvent(e);\n\n    if (!cell || currentEditor !== null && activeRow == cell.row && activeCell == cell.cell) {\n      return;\n    }\n\n    trigger(self.onClick, {\n      row: cell.row,\n      cell: cell.cell\n    }, e);\n\n    if (e.isImmediatePropagationStopped()) {\n      return;\n    } // this optimisation causes trouble - MLeibman #329\n    //if ((activeCell != cell.cell || activeRow != cell.row) && canCellBeActive(cell.row, cell.cell)) {\n\n\n    if (canCellBeActive(cell.row, cell.cell)) {\n      if (!getEditorLock().isActive() || getEditorLock().commitCurrentEdit()) {\n        scrollRowIntoView(cell.row, false);\n        var preClickModeOn = e.target && e.target.className === Slick.preClickClassName;\n        var column = columns[cell.cell];\n        var suppressActiveCellChangedEvent = options.editable && column && column.editor && options.suppressActiveCellChangeOnEdit ? true : false;\n        setActiveCellInternal(getCellNode(cell.row, cell.cell), null, preClickModeOn, suppressActiveCellChangedEvent, e);\n      }\n    }\n  }\n\n  function handleContextMenu(e) {\n    var $cell = $(e.target).closest(\".slick-cell\", $canvas);\n\n    if ($cell.length === 0) {\n      return;\n    } // are we editing this cell?\n\n\n    if (activeCellNode === $cell[0] && currentEditor !== null) {\n      return;\n    }\n\n    trigger(self.onContextMenu, {}, e);\n  }\n\n  function handleDblClick(e) {\n    var cell = getCellFromEvent(e);\n\n    if (!cell || currentEditor !== null && activeRow == cell.row && activeCell == cell.cell) {\n      return;\n    }\n\n    trigger(self.onDblClick, {\n      row: cell.row,\n      cell: cell.cell\n    }, e);\n\n    if (e.isImmediatePropagationStopped()) {\n      return;\n    }\n\n    if (options.editable) {\n      gotoCell(cell.row, cell.cell, true, e);\n    }\n  }\n\n  function handleHeaderMouseEnter(e) {\n    trigger(self.onHeaderMouseEnter, {\n      \"column\": $(this).data(\"column\"),\n      \"grid\": self\n    }, e);\n  }\n\n  function handleHeaderMouseLeave(e) {\n    trigger(self.onHeaderMouseLeave, {\n      \"column\": $(this).data(\"column\"),\n      \"grid\": self\n    }, e);\n  }\n\n  function handleHeaderContextMenu(e) {\n    var $header = $(e.target).closest(\".slick-header-column\", \".slick-header-columns\");\n    var column = $header && $header.data(\"column\");\n    trigger(self.onHeaderContextMenu, {\n      column: column\n    }, e);\n  }\n\n  function handleHeaderClick(e) {\n    if (columnResizeDragging) return;\n    var $header = $(e.target).closest(\".slick-header-column\", \".slick-header-columns\");\n    var column = $header && $header.data(\"column\");\n\n    if (column) {\n      trigger(self.onHeaderClick, {\n        column: column\n      }, e);\n    }\n  }\n\n  function handleMouseEnter(e) {\n    trigger(self.onMouseEnter, {}, e);\n  }\n\n  function handleMouseLeave(e) {\n    trigger(self.onMouseLeave, {}, e);\n  }\n\n  function cellExists(row, cell) {\n    return !(row < 0 || row >= getDataLength() || cell < 0 || cell >= columns.length);\n  }\n\n  function getCellFromPoint(x, y) {\n    var row = getRowFromPosition(y);\n    var cell = 0;\n    var w = 0;\n\n    for (var i = 0; i < columns.length && w < x; i++) {\n      w += columns[i].width;\n      cell++;\n    }\n\n    if (cell < 0) {\n      cell = 0;\n    }\n\n    return {\n      row: row,\n      cell: cell - 1\n    };\n  }\n\n  function getCellFromNode(cellNode) {\n    // read column number from .l<columnNumber> CSS class\n    var cls = /l\\d+/.exec(cellNode.className);\n\n    if (!cls) {\n      throw new Error(\"getCellFromNode: cannot get cell - \" + cellNode.className);\n    }\n\n    return parseInt(cls[0].substr(1, cls[0].length - 1), 10);\n  }\n\n  function getRowFromNode(rowNode) {\n    for (var row in rowsCache) {\n      if (rowsCache[row].rowNode === rowNode) {\n        return row | 0;\n      }\n    }\n\n    return null;\n  }\n\n  function getCellFromEvent(e) {\n    var $cell = $(e.target).closest(\".slick-cell\", $canvas);\n\n    if (!$cell.length) {\n      return null;\n    }\n\n    var row = getRowFromNode($cell[0].parentNode);\n    var cell = getCellFromNode($cell[0]);\n\n    if (row == null || cell == null) {\n      return null;\n    } else {\n      return {\n        \"row\": row,\n        \"cell\": cell\n      };\n    }\n  }\n\n  function getCellNodeBox(row, cell) {\n    if (!cellExists(row, cell)) {\n      return null;\n    }\n\n    var y1 = getRowTop(row);\n    var y2 = y1 + options.rowHeight - 1;\n    var x1 = 0;\n\n    for (var i = 0; i < cell; i++) {\n      x1 += columns[i].width;\n    }\n\n    var x2 = x1 + columns[cell].width;\n    return {\n      top: y1,\n      left: x1,\n      bottom: y2,\n      right: x2\n    };\n  } //////////////////////////////////////////////////////////////////////////////////////////////\n  // Cell switching\n\n\n  function resetActiveCell() {\n    setActiveCellInternal(null, false);\n  }\n\n  function setFocus() {\n    if (tabbingDirection == -1) {\n      $focusSink[0].focus();\n    } else {\n      $focusSink2[0].focus();\n    }\n  }\n\n  function scrollCellIntoView(row, cell, doPaging) {\n    scrollRowIntoView(row, doPaging);\n    var colspan = getColspan(row, cell);\n    internalScrollColumnIntoView(columnPosLeft[cell], columnPosRight[cell + (colspan > 1 ? colspan - 1 : 0)]);\n  }\n\n  function internalScrollColumnIntoView(left, right) {\n    var scrollRight = scrollLeft + viewportW;\n\n    if (left < scrollLeft) {\n      $viewport.scrollLeft(left);\n      handleScroll();\n      render();\n    } else if (right > scrollRight) {\n      $viewport.scrollLeft(Math.min(left, right - $viewport[0].clientWidth));\n      handleScroll();\n      render();\n    }\n  }\n\n  function scrollColumnIntoView(cell) {\n    internalScrollColumnIntoView(columnPosLeft[cell], columnPosRight[cell]);\n  }\n\n  function setActiveCellInternal(newCell, opt_editMode, preClickModeOn, suppressActiveCellChangedEvent, e) {\n    if (activeCellNode !== null) {\n      makeActiveCellNormal();\n      $(activeCellNode).removeClass(\"active\");\n\n      if (rowsCache[activeRow]) {\n        $(rowsCache[activeRow].rowNode).removeClass(\"active\");\n      }\n    }\n\n    var activeCellChanged = activeCellNode !== newCell;\n    activeCellNode = newCell;\n\n    if (activeCellNode != null) {\n      activeRow = getRowFromNode(activeCellNode.parentNode);\n      activeCell = activePosX = getCellFromNode(activeCellNode);\n\n      if (opt_editMode == null) {\n        opt_editMode = activeRow == getDataLength() || options.autoEdit;\n      }\n\n      if (options.showCellSelection) {\n        $(activeCellNode).addClass(\"active\");\n        $(rowsCache[activeRow].rowNode).addClass(\"active\");\n      }\n\n      if (options.editable && opt_editMode && isCellPotentiallyEditable(activeRow, activeCell)) {\n        clearTimeout(h_editorLoader);\n\n        if (options.asyncEditorLoading) {\n          h_editorLoader = setTimeout(function () {\n            makeActiveCellEditable(undefined, preClickModeOn, e);\n          }, options.asyncEditorLoadDelay);\n        } else {\n          makeActiveCellEditable(undefined, preClickModeOn, e);\n        }\n      }\n    } else {\n      activeRow = activeCell = null;\n    } // this optimisation causes trouble - MLeibman #329\n    //if (activeCellChanged) {\n\n\n    if (!suppressActiveCellChangedEvent) {\n      trigger(self.onActiveCellChanged, getActiveCell());\n    } //}\n\n  }\n\n  function clearTextSelection() {\n    if (document.selection && document.selection.empty) {\n      try {\n        //IE fails here if selected element is not in dom\n        document.selection.empty();\n      } catch (e) {}\n    } else if (window.getSelection) {\n      var sel = window.getSelection();\n\n      if (sel && sel.removeAllRanges) {\n        sel.removeAllRanges();\n      }\n    }\n  }\n\n  function isCellPotentiallyEditable(row, cell) {\n    var dataLength = getDataLength(); // is the data for this row loaded?\n\n    if (row < dataLength && !getDataItem(row)) {\n      return false;\n    } // are we in the Add New row?  can we create new from this cell?\n\n\n    if (columns[cell].cannotTriggerInsert && row >= dataLength) {\n      return false;\n    } // does this cell have an editor?\n\n\n    if (!getEditor(row, cell)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  function makeActiveCellNormal() {\n    if (!currentEditor) {\n      return;\n    }\n\n    trigger(self.onBeforeCellEditorDestroy, {\n      editor: currentEditor\n    });\n    currentEditor.destroy();\n    currentEditor = null;\n\n    if (activeCellNode) {\n      var d = getDataItem(activeRow);\n      $(activeCellNode).removeClass(\"editable invalid\");\n\n      if (d) {\n        var column = columns[activeCell];\n        var formatter = getFormatter(activeRow, column);\n        var formatterResult = formatter(activeRow, activeCell, getDataItemValueForColumn(d, column), column, d, self);\n        applyFormatResultToCellNode(formatterResult, activeCellNode);\n        invalidatePostProcessingResults(activeRow);\n      }\n    } // if there previously was text selected on a page (such as selected text in the edit cell just removed),\n    // IE can't set focus to anything else correctly\n\n\n    if (navigator.userAgent.toLowerCase().match(/msie/)) {\n      clearTextSelection();\n    }\n\n    getEditorLock().deactivate(editController);\n  }\n\n  function makeActiveCellEditable(editor, preClickModeOn, e) {\n    if (!activeCellNode) {\n      return;\n    }\n\n    if (!options.editable) {\n      throw new Error(\"Grid : makeActiveCellEditable : should never get called when options.editable is false\");\n    } // cancel pending async call if there is one\n\n\n    clearTimeout(h_editorLoader);\n\n    if (!isCellPotentiallyEditable(activeRow, activeCell)) {\n      return;\n    }\n\n    var columnDef = columns[activeCell];\n    var item = getDataItem(activeRow);\n\n    if (trigger(self.onBeforeEditCell, {\n      row: activeRow,\n      cell: activeCell,\n      item: item,\n      column: columnDef\n    }) === false) {\n      setFocus();\n      return;\n    }\n\n    getEditorLock().activate(editController);\n    $(activeCellNode).addClass(\"editable\");\n    var useEditor = editor || getEditor(activeRow, activeCell); // don't clear the cell if a custom editor is passed through\n\n    if (!editor && !useEditor.suppressClearOnEdit) {\n      activeCellNode.innerHTML = \"\";\n    }\n\n    currentEditor = new useEditor({\n      grid: self,\n      gridPosition: absBox($container[0]),\n      position: absBox(activeCellNode),\n      container: activeCellNode,\n      column: columnDef,\n      item: item || {},\n      event: e,\n      commitChanges: commitEditAndSetFocus,\n      cancelChanges: cancelEditAndSetFocus\n    });\n\n    if (item) {\n      currentEditor.loadValue(item);\n\n      if (preClickModeOn && currentEditor.preClick) {\n        currentEditor.preClick();\n      }\n    }\n\n    serializedEditorValue = currentEditor.serializeValue();\n\n    if (currentEditor.position) {\n      handleActiveCellPositionChange();\n    }\n  }\n\n  function commitEditAndSetFocus() {\n    // if the commit fails, it would do so due to a validation error\n    // if so, do not steal the focus from the editor\n    if (getEditorLock().commitCurrentEdit()) {\n      setFocus();\n\n      if (options.autoEdit) {\n        navigateDown();\n      }\n    }\n  }\n\n  function cancelEditAndSetFocus() {\n    if (getEditorLock().cancelCurrentEdit()) {\n      setFocus();\n    }\n  }\n\n  function absBox(elem) {\n    var box = {\n      top: elem.offsetTop,\n      left: elem.offsetLeft,\n      bottom: 0,\n      right: 0,\n      width: $(elem).outerWidth(),\n      height: $(elem).outerHeight(),\n      visible: true\n    };\n    box.bottom = box.top + box.height;\n    box.right = box.left + box.width; // walk up the tree\n\n    var offsetParent = elem.offsetParent;\n\n    while ((elem = elem.parentNode) != document.body) {\n      if (elem == null) break;\n\n      if (box.visible && elem.scrollHeight != elem.offsetHeight && $(elem).css(\"overflowY\") != \"visible\") {\n        box.visible = box.bottom > elem.scrollTop && box.top < elem.scrollTop + elem.clientHeight;\n      }\n\n      if (box.visible && elem.scrollWidth != elem.offsetWidth && $(elem).css(\"overflowX\") != \"visible\") {\n        box.visible = box.right > elem.scrollLeft && box.left < elem.scrollLeft + elem.clientWidth;\n      }\n\n      box.left -= elem.scrollLeft;\n      box.top -= elem.scrollTop;\n\n      if (elem === offsetParent) {\n        box.left += elem.offsetLeft;\n        box.top += elem.offsetTop;\n        offsetParent = elem.offsetParent;\n      }\n\n      box.bottom = box.top + box.height;\n      box.right = box.left + box.width;\n    }\n\n    return box;\n  }\n\n  function getActiveCellPosition() {\n    return absBox(activeCellNode);\n  }\n\n  function getGridPosition() {\n    return absBox($container[0]);\n  }\n\n  function handleActiveCellPositionChange() {\n    if (!activeCellNode) {\n      return;\n    }\n\n    trigger(self.onActiveCellPositionChanged, {});\n\n    if (currentEditor) {\n      var cellBox = getActiveCellPosition();\n\n      if (currentEditor.show && currentEditor.hide) {\n        if (!cellBox.visible) {\n          currentEditor.hide();\n        } else {\n          currentEditor.show();\n        }\n      }\n\n      if (currentEditor.position) {\n        currentEditor.position(cellBox);\n      }\n    }\n  }\n\n  function getCellEditor() {\n    return currentEditor;\n  }\n\n  function getActiveCell() {\n    if (!activeCellNode) {\n      return null;\n    } else {\n      return {\n        row: activeRow,\n        cell: activeCell\n      };\n    }\n  }\n\n  function getActiveCellNode() {\n    return activeCellNode;\n  }\n\n  function scrollRowIntoView(row, doPaging) {\n    var rowAtTop = row * options.rowHeight;\n    var rowAtBottom = (row + 1) * options.rowHeight - viewportH + (viewportHasHScroll ? scrollbarDimensions.height : 0); // need to page down?\n\n    if ((row + 1) * options.rowHeight > scrollTop + viewportH + offset) {\n      scrollTo(doPaging ? rowAtTop : rowAtBottom);\n      render();\n    } // or page up?\n    else if (row * options.rowHeight < scrollTop + offset) {\n        scrollTo(doPaging ? rowAtBottom : rowAtTop);\n        render();\n      }\n  }\n\n  function scrollRowToTop(row) {\n    scrollTo(row * options.rowHeight);\n    render();\n  }\n\n  function scrollPage(dir) {\n    var deltaRows = dir * numVisibleRows;\n    scrollTo((getRowFromPosition(scrollTop) + deltaRows) * options.rowHeight);\n    render();\n\n    if (options.enableCellNavigation && activeRow != null) {\n      var row = activeRow + deltaRows;\n      var dataLengthIncludingAddNew = getDataLengthIncludingAddNew();\n\n      if (row >= dataLengthIncludingAddNew) {\n        row = dataLengthIncludingAddNew - 1;\n      }\n\n      if (row < 0) {\n        row = 0;\n      }\n\n      var cell = 0,\n          prevCell = null;\n      var prevActivePosX = activePosX;\n\n      while (cell <= activePosX) {\n        if (canCellBeActive(row, cell)) {\n          prevCell = cell;\n        }\n\n        cell += getColspan(row, cell);\n      }\n\n      if (prevCell !== null) {\n        setActiveCellInternal(getCellNode(row, prevCell));\n        activePosX = prevActivePosX;\n      } else {\n        resetActiveCell();\n      }\n    }\n  }\n\n  function navigatePageDown() {\n    scrollPage(1);\n  }\n\n  function navigatePageUp() {\n    scrollPage(-1);\n  }\n\n  function navigateTop() {\n    navigateToRow(0);\n  }\n\n  function navigateBottom() {\n    navigateToRow(getDataLength() - 1);\n  }\n\n  function navigateToRow(row) {\n    var num_rows = getDataLength();\n    if (!num_rows) return true;\n    if (row < 0) row = 0;else if (row >= num_rows) row = num_rows - 1;\n    scrollCellIntoView(row, 0, true);\n\n    if (options.enableCellNavigation && activeRow != null) {\n      var cell = 0,\n          prevCell = null;\n      var prevActivePosX = activePosX;\n\n      while (cell <= activePosX) {\n        if (canCellBeActive(row, cell)) {\n          prevCell = cell;\n        }\n\n        cell += getColspan(row, cell);\n      }\n\n      if (prevCell !== null) {\n        setActiveCellInternal(getCellNode(row, prevCell));\n        activePosX = prevActivePosX;\n      } else {\n        resetActiveCell();\n      }\n    }\n\n    return true;\n  }\n\n  function getColspan(row, cell) {\n    var metadata = data.getItemMetadata && data.getItemMetadata(row);\n\n    if (!metadata || !metadata.columns) {\n      return 1;\n    }\n\n    var columnData = metadata.columns[columns[cell].id] || metadata.columns[cell];\n    var colspan = columnData && columnData.colspan;\n\n    if (colspan === \"*\") {\n      colspan = columns.length - cell;\n    } else {\n      colspan = colspan || 1;\n    }\n\n    return colspan;\n  }\n\n  function findFirstFocusableCell(row) {\n    var cell = 0;\n\n    while (cell < columns.length) {\n      if (canCellBeActive(row, cell)) {\n        return cell;\n      }\n\n      cell += getColspan(row, cell);\n    }\n\n    return null;\n  }\n\n  function findLastFocusableCell(row) {\n    var cell = 0;\n    var lastFocusableCell = null;\n\n    while (cell < columns.length) {\n      if (canCellBeActive(row, cell)) {\n        lastFocusableCell = cell;\n      }\n\n      cell += getColspan(row, cell);\n    }\n\n    return lastFocusableCell;\n  }\n\n  function gotoRight(row, cell, posX) {\n    if (cell >= columns.length) {\n      return null;\n    }\n\n    do {\n      cell += getColspan(row, cell);\n    } while (cell < columns.length && !canCellBeActive(row, cell));\n\n    if (cell < columns.length) {\n      return {\n        \"row\": row,\n        \"cell\": cell,\n        \"posX\": cell\n      };\n    }\n\n    return null;\n  }\n\n  function gotoLeft(row, cell, posX) {\n    if (cell <= 0) {\n      return null;\n    }\n\n    var firstFocusableCell = findFirstFocusableCell(row);\n\n    if (firstFocusableCell === null || firstFocusableCell >= cell) {\n      return null;\n    }\n\n    var prev = {\n      \"row\": row,\n      \"cell\": firstFocusableCell,\n      \"posX\": firstFocusableCell\n    };\n    var pos;\n\n    while (true) {\n      pos = gotoRight(prev.row, prev.cell, prev.posX);\n\n      if (!pos) {\n        return null;\n      }\n\n      if (pos.cell >= cell) {\n        return prev;\n      }\n\n      prev = pos;\n    }\n  }\n\n  function gotoDown(row, cell, posX) {\n    var prevCell;\n    var dataLengthIncludingAddNew = getDataLengthIncludingAddNew();\n\n    while (true) {\n      if (++row >= dataLengthIncludingAddNew) {\n        return null;\n      }\n\n      prevCell = cell = 0;\n\n      while (cell <= posX) {\n        prevCell = cell;\n        cell += getColspan(row, cell);\n      }\n\n      if (canCellBeActive(row, prevCell)) {\n        return {\n          \"row\": row,\n          \"cell\": prevCell,\n          \"posX\": posX\n        };\n      }\n    }\n  }\n\n  function gotoUp(row, cell, posX) {\n    var prevCell;\n\n    while (true) {\n      if (--row < 0) {\n        return null;\n      }\n\n      prevCell = cell = 0;\n\n      while (cell <= posX) {\n        prevCell = cell;\n        cell += getColspan(row, cell);\n      }\n\n      if (canCellBeActive(row, prevCell)) {\n        return {\n          \"row\": row,\n          \"cell\": prevCell,\n          \"posX\": posX\n        };\n      }\n    }\n  }\n\n  function gotoNext(row, cell, posX) {\n    if (row == null && cell == null) {\n      row = cell = posX = 0;\n\n      if (canCellBeActive(row, cell)) {\n        return {\n          \"row\": row,\n          \"cell\": cell,\n          \"posX\": cell\n        };\n      }\n    }\n\n    var pos = gotoRight(row, cell, posX);\n\n    if (pos) {\n      return pos;\n    }\n\n    var firstFocusableCell = null;\n    var dataLengthIncludingAddNew = getDataLengthIncludingAddNew(); // if at last row, cycle through columns rather than get stuck in the last one\n\n    if (row === dataLengthIncludingAddNew - 1) {\n      row--;\n    }\n\n    while (++row < dataLengthIncludingAddNew) {\n      firstFocusableCell = findFirstFocusableCell(row);\n\n      if (firstFocusableCell !== null) {\n        return {\n          \"row\": row,\n          \"cell\": firstFocusableCell,\n          \"posX\": firstFocusableCell\n        };\n      }\n    }\n\n    return null;\n  }\n\n  function gotoPrev(row, cell, posX) {\n    if (row == null && cell == null) {\n      row = getDataLengthIncludingAddNew() - 1;\n      cell = posX = columns.length - 1;\n\n      if (canCellBeActive(row, cell)) {\n        return {\n          \"row\": row,\n          \"cell\": cell,\n          \"posX\": cell\n        };\n      }\n    }\n\n    var pos;\n    var lastSelectableCell;\n\n    while (!pos) {\n      pos = gotoLeft(row, cell, posX);\n\n      if (pos) {\n        break;\n      }\n\n      if (--row < 0) {\n        return null;\n      }\n\n      cell = 0;\n      lastSelectableCell = findLastFocusableCell(row);\n\n      if (lastSelectableCell !== null) {\n        pos = {\n          \"row\": row,\n          \"cell\": lastSelectableCell,\n          \"posX\": lastSelectableCell\n        };\n      }\n    }\n\n    return pos;\n  }\n\n  function gotoRowStart(row, cell, posX) {\n    var newCell = findFirstFocusableCell(row);\n    if (newCell === null) return null;\n    return {\n      \"row\": row,\n      \"cell\": newCell,\n      \"posX\": newCell\n    };\n  }\n\n  function gotoRowEnd(row, cell, posX) {\n    var newCell = findLastFocusableCell(row);\n    if (newCell === null) return null;\n    return {\n      \"row\": row,\n      \"cell\": newCell,\n      \"posX\": newCell\n    };\n  }\n\n  function navigateRight() {\n    return navigate(\"right\");\n  }\n\n  function navigateLeft() {\n    return navigate(\"left\");\n  }\n\n  function navigateDown() {\n    return navigate(\"down\");\n  }\n\n  function navigateUp() {\n    return navigate(\"up\");\n  }\n\n  function navigateNext() {\n    return navigate(\"next\");\n  }\n\n  function navigatePrev() {\n    return navigate(\"prev\");\n  }\n\n  function navigateRowStart() {\n    return navigate(\"home\");\n  }\n\n  function navigateRowEnd() {\n    return navigate(\"end\");\n  }\n  /**\n   * @param {string} dir Navigation direction.\n   * @return {boolean} Whether navigation resulted in a change of active cell.\n   */\n\n\n  function navigate(dir) {\n    if (!options.enableCellNavigation) {\n      return false;\n    }\n\n    if (!activeCellNode && dir != \"prev\" && dir != \"next\") {\n      return false;\n    }\n\n    if (!getEditorLock().commitCurrentEdit()) {\n      return true;\n    }\n\n    setFocus();\n    var tabbingDirections = {\n      \"up\": -1,\n      \"down\": 1,\n      \"left\": -1,\n      \"right\": 1,\n      \"prev\": -1,\n      \"next\": 1,\n      \"home\": -1,\n      \"end\": 1\n    };\n    tabbingDirection = tabbingDirections[dir];\n    var stepFunctions = {\n      \"up\": gotoUp,\n      \"down\": gotoDown,\n      \"left\": gotoLeft,\n      \"right\": gotoRight,\n      \"prev\": gotoPrev,\n      \"next\": gotoNext,\n      \"home\": gotoRowStart,\n      \"end\": gotoRowEnd\n    };\n    var stepFn = stepFunctions[dir];\n    var pos = stepFn(activeRow, activeCell, activePosX);\n\n    if (pos) {\n      var isAddNewRow = pos.row == getDataLength();\n      scrollCellIntoView(pos.row, pos.cell, !isAddNewRow && options.emulatePagingWhenScrolling);\n      setActiveCellInternal(getCellNode(pos.row, pos.cell));\n      activePosX = pos.posX;\n      return true;\n    } else {\n      setActiveCellInternal(getCellNode(activeRow, activeCell));\n      return false;\n    }\n  }\n\n  function getCellNode(row, cell) {\n    if (rowsCache[row]) {\n      ensureCellNodesInRowsCache(row);\n      return rowsCache[row].cellNodesByColumnIdx[cell];\n    }\n\n    return null;\n  }\n\n  function setActiveCell(row, cell, opt_editMode, preClickModeOn, suppressActiveCellChangedEvent) {\n    if (!initialized) {\n      return;\n    }\n\n    if (row > getDataLength() || row < 0 || cell >= columns.length || cell < 0) {\n      return;\n    }\n\n    if (!options.enableCellNavigation) {\n      return;\n    }\n\n    scrollCellIntoView(row, cell, false);\n    setActiveCellInternal(getCellNode(row, cell), opt_editMode, preClickModeOn, suppressActiveCellChangedEvent);\n  }\n\n  function canCellBeActive(row, cell) {\n    if (!options.enableCellNavigation || row >= getDataLengthIncludingAddNew() || row < 0 || cell >= columns.length || cell < 0) {\n      return false;\n    }\n\n    var rowMetadata = data.getItemMetadata && data.getItemMetadata(row);\n\n    if (rowMetadata && typeof rowMetadata.focusable !== \"undefined\") {\n      return !!rowMetadata.focusable;\n    }\n\n    var columnMetadata = rowMetadata && rowMetadata.columns;\n\n    if (columnMetadata && columnMetadata[columns[cell].id] && typeof columnMetadata[columns[cell].id].focusable !== \"undefined\") {\n      return !!columnMetadata[columns[cell].id].focusable;\n    }\n\n    if (columnMetadata && columnMetadata[cell] && typeof columnMetadata[cell].focusable !== \"undefined\") {\n      return !!columnMetadata[cell].focusable;\n    }\n\n    return !!columns[cell].focusable;\n  }\n\n  function canCellBeSelected(row, cell) {\n    if (row >= getDataLength() || row < 0 || cell >= columns.length || cell < 0) {\n      return false;\n    }\n\n    var rowMetadata = data.getItemMetadata && data.getItemMetadata(row);\n\n    if (rowMetadata && typeof rowMetadata.selectable !== \"undefined\") {\n      return !!rowMetadata.selectable;\n    }\n\n    var columnMetadata = rowMetadata && rowMetadata.columns && (rowMetadata.columns[columns[cell].id] || rowMetadata.columns[cell]);\n\n    if (columnMetadata && typeof columnMetadata.selectable !== \"undefined\") {\n      return !!columnMetadata.selectable;\n    }\n\n    return !!columns[cell].selectable;\n  }\n\n  function gotoCell(row, cell, forceEdit, e) {\n    if (!initialized) {\n      return;\n    }\n\n    if (!canCellBeActive(row, cell)) {\n      return;\n    }\n\n    if (!getEditorLock().commitCurrentEdit()) {\n      return;\n    }\n\n    scrollCellIntoView(row, cell, false);\n    var newCell = getCellNode(row, cell); // if selecting the 'add new' row, start editing right away\n\n    setActiveCellInternal(newCell, forceEdit || row === getDataLength() || options.autoEdit, null, options.editable, e); // if no editor was created, set the focus back on the grid\n\n    if (!currentEditor) {\n      setFocus();\n    }\n  } //////////////////////////////////////////////////////////////////////////////////////////////\n  // IEditor implementation for the editor lock\n\n\n  function commitCurrentEdit() {\n    var item = getDataItem(activeRow);\n    var column = columns[activeCell];\n\n    if (currentEditor) {\n      if (currentEditor.isValueChanged()) {\n        var validationResults = currentEditor.validate();\n\n        if (validationResults.valid) {\n          if (activeRow < getDataLength()) {\n            var editCommand = {\n              row: activeRow,\n              cell: activeCell,\n              editor: currentEditor,\n              serializedValue: currentEditor.serializeValue(),\n              prevSerializedValue: serializedEditorValue,\n              execute: function () {\n                this.editor.applyValue(item, this.serializedValue);\n                updateRow(this.row);\n                trigger(self.onCellChange, {\n                  row: this.row,\n                  cell: this.cell,\n                  item: item\n                });\n              },\n              undo: function () {\n                this.editor.applyValue(item, this.prevSerializedValue);\n                updateRow(this.row);\n                trigger(self.onCellChange, {\n                  row: this.row,\n                  cell: this.cell,\n                  item: item\n                });\n              }\n            };\n\n            if (options.editCommandHandler) {\n              makeActiveCellNormal();\n              options.editCommandHandler(item, column, editCommand);\n            } else {\n              editCommand.execute();\n              makeActiveCellNormal();\n            }\n          } else {\n            var newItem = {};\n            currentEditor.applyValue(newItem, currentEditor.serializeValue());\n            makeActiveCellNormal();\n            trigger(self.onAddNewRow, {\n              item: newItem,\n              column: column\n            });\n          } // check whether the lock has been re-acquired by event handlers\n\n\n          return !getEditorLock().isActive();\n        } else {\n          // Re-add the CSS class to trigger transitions, if any.\n          $(activeCellNode).removeClass(\"invalid\");\n          $(activeCellNode).width(); // force layout\n\n          $(activeCellNode).addClass(\"invalid\");\n          trigger(self.onValidationError, {\n            editor: currentEditor,\n            cellNode: activeCellNode,\n            validationResults: validationResults,\n            row: activeRow,\n            cell: activeCell,\n            column: column\n          });\n          currentEditor.focus();\n          return false;\n        }\n      }\n\n      makeActiveCellNormal();\n    }\n\n    return true;\n  }\n\n  function cancelCurrentEdit() {\n    makeActiveCellNormal();\n    return true;\n  }\n\n  function rowsToRanges(rows) {\n    var ranges = [];\n    var lastCell = columns.length - 1;\n\n    for (var i = 0; i < rows.length; i++) {\n      ranges.push(new Slick.Range(rows[i], 0, rows[i], lastCell));\n    }\n\n    return ranges;\n  }\n\n  function getSelectedRows() {\n    if (!selectionModel) {\n      throw new Error(\"Selection model is not set\");\n    }\n\n    return selectedRows;\n  }\n\n  function setSelectedRows(rows) {\n    if (!selectionModel) {\n      throw new Error(\"Selection model is not set\");\n    }\n\n    if (self && self.getEditorLock && !self.getEditorLock().isActive()) {\n      selectionModel.setSelectedRanges(rowsToRanges(rows));\n    }\n  } //////////////////////////////////////////////////////////////////////////////////////////////\n  // Debug\n\n\n  this.debug = function () {\n    var s = \"\";\n    s += \"\\n\" + \"counter_rows_rendered:  \" + counter_rows_rendered;\n    s += \"\\n\" + \"counter_rows_removed:  \" + counter_rows_removed;\n    s += \"\\n\" + \"renderedRows:  \" + renderedRows;\n    s += \"\\n\" + \"numVisibleRows:  \" + numVisibleRows;\n    s += \"\\n\" + \"maxSupportedCssHeight:  \" + maxSupportedCssHeight;\n    s += \"\\n\" + \"n(umber of pages):  \" + n;\n    s += \"\\n\" + \"(current) page:  \" + page;\n    s += \"\\n\" + \"page height (ph):  \" + ph;\n    s += \"\\n\" + \"vScrollDir:  \" + vScrollDir;\n    alert(s);\n  }; // a debug helper to be able to access private members\n\n\n  this.eval = function (expr) {\n    return eval(expr);\n  }; //////////////////////////////////////////////////////////////////////////////////////////////\n  // Public API\n\n\n  $.extend(this, {\n    \"slickGridVersion\": \"2.3.23\",\n    // Events\n    \"onScroll\": new Slick.Event(),\n    \"onSort\": new Slick.Event(),\n    \"onHeaderMouseEnter\": new Slick.Event(),\n    \"onHeaderMouseLeave\": new Slick.Event(),\n    \"onHeaderContextMenu\": new Slick.Event(),\n    \"onHeaderClick\": new Slick.Event(),\n    \"onHeaderCellRendered\": new Slick.Event(),\n    \"onBeforeHeaderCellDestroy\": new Slick.Event(),\n    \"onHeaderRowCellRendered\": new Slick.Event(),\n    \"onFooterRowCellRendered\": new Slick.Event(),\n    \"onBeforeHeaderRowCellDestroy\": new Slick.Event(),\n    \"onBeforeFooterRowCellDestroy\": new Slick.Event(),\n    \"onMouseEnter\": new Slick.Event(),\n    \"onMouseLeave\": new Slick.Event(),\n    \"onClick\": new Slick.Event(),\n    \"onDblClick\": new Slick.Event(),\n    \"onContextMenu\": new Slick.Event(),\n    \"onKeyDown\": new Slick.Event(),\n    \"onAddNewRow\": new Slick.Event(),\n    \"onBeforeAppendCell\": new Slick.Event(),\n    \"onValidationError\": new Slick.Event(),\n    \"onViewportChanged\": new Slick.Event(),\n    \"onColumnsReordered\": new Slick.Event(),\n    \"onColumnsResized\": new Slick.Event(),\n    \"onCellChange\": new Slick.Event(),\n    \"onBeforeEditCell\": new Slick.Event(),\n    \"onBeforeCellEditorDestroy\": new Slick.Event(),\n    \"onBeforeDestroy\": new Slick.Event(),\n    \"onActiveCellChanged\": new Slick.Event(),\n    \"onActiveCellPositionChanged\": new Slick.Event(),\n    \"onDragInit\": new Slick.Event(),\n    \"onDragStart\": new Slick.Event(),\n    \"onDrag\": new Slick.Event(),\n    \"onDragEnd\": new Slick.Event(),\n    \"onSelectedRowsChanged\": new Slick.Event(),\n    \"onCellCssStylesChanged\": new Slick.Event(),\n    \"onAutosizeColumns\": new Slick.Event(),\n    \"onRendered\": new Slick.Event(),\n    // Methods\n    \"registerPlugin\": registerPlugin,\n    \"unregisterPlugin\": unregisterPlugin,\n    \"getColumns\": getColumns,\n    \"setColumns\": setColumns,\n    \"getColumnIndex\": getColumnIndex,\n    \"updateColumnHeader\": updateColumnHeader,\n    \"setSortColumn\": setSortColumn,\n    \"setSortColumns\": setSortColumns,\n    \"getSortColumns\": getSortColumns,\n    \"autosizeColumns\": autosizeColumns,\n    \"getOptions\": getOptions,\n    \"setOptions\": setOptions,\n    \"getData\": getData,\n    \"getDataLength\": getDataLength,\n    \"getDataItem\": getDataItem,\n    \"setData\": setData,\n    \"getSelectionModel\": getSelectionModel,\n    \"setSelectionModel\": setSelectionModel,\n    \"getSelectedRows\": getSelectedRows,\n    \"setSelectedRows\": setSelectedRows,\n    \"getContainerNode\": getContainerNode,\n    \"updatePagingStatusFromView\": updatePagingStatusFromView,\n    \"render\": render,\n    \"invalidate\": invalidate,\n    \"invalidateRow\": invalidateRow,\n    \"invalidateRows\": invalidateRows,\n    \"invalidateAllRows\": invalidateAllRows,\n    \"updateCell\": updateCell,\n    \"updateRow\": updateRow,\n    \"getViewport\": getVisibleRange,\n    \"getRenderedRange\": getRenderedRange,\n    \"resizeCanvas\": resizeCanvas,\n    \"updateRowCount\": updateRowCount,\n    \"scrollRowIntoView\": scrollRowIntoView,\n    \"scrollRowToTop\": scrollRowToTop,\n    \"scrollCellIntoView\": scrollCellIntoView,\n    \"scrollColumnIntoView\": scrollColumnIntoView,\n    \"getCanvasNode\": getCanvasNode,\n    \"getUID\": getUID,\n    \"getHeaderColumnWidthDiff\": getHeaderColumnWidthDiff,\n    \"getScrollbarDimensions\": getScrollbarDimensions,\n    \"getHeadersWidth\": getHeadersWidth,\n    \"getCanvasWidth\": getCanvasWidth,\n    \"focus\": setFocus,\n    \"scrollTo\": scrollTo,\n    \"getCellFromPoint\": getCellFromPoint,\n    \"getCellFromEvent\": getCellFromEvent,\n    \"getActiveCell\": getActiveCell,\n    \"setActiveCell\": setActiveCell,\n    \"getActiveCellNode\": getActiveCellNode,\n    \"getActiveCellPosition\": getActiveCellPosition,\n    \"resetActiveCell\": resetActiveCell,\n    \"editActiveCell\": makeActiveCellEditable,\n    \"getCellEditor\": getCellEditor,\n    \"getCellNode\": getCellNode,\n    \"getCellNodeBox\": getCellNodeBox,\n    \"canCellBeSelected\": canCellBeSelected,\n    \"canCellBeActive\": canCellBeActive,\n    \"navigatePrev\": navigatePrev,\n    \"navigateNext\": navigateNext,\n    \"navigateUp\": navigateUp,\n    \"navigateDown\": navigateDown,\n    \"navigateLeft\": navigateLeft,\n    \"navigateRight\": navigateRight,\n    \"navigatePageUp\": navigatePageUp,\n    \"navigatePageDown\": navigatePageDown,\n    \"navigateTop\": navigateTop,\n    \"navigateBottom\": navigateBottom,\n    \"navigateRowStart\": navigateRowStart,\n    \"navigateRowEnd\": navigateRowEnd,\n    \"gotoCell\": gotoCell,\n    \"getTopPanel\": getTopPanel,\n    \"setTopPanelVisibility\": setTopPanelVisibility,\n    \"getPreHeaderPanel\": getPreHeaderPanel,\n    \"setPreHeaderPanelVisibility\": setPreHeaderPanelVisibility,\n    \"getHeader\": getHeader,\n    \"getHeaderColumn\": getHeaderColumn,\n    \"setHeaderRowVisibility\": setHeaderRowVisibility,\n    \"getHeaderRow\": getHeaderRow,\n    \"getHeaderRowColumn\": getHeaderRowColumn,\n    \"setFooterRowVisibility\": setFooterRowVisibility,\n    \"getFooterRow\": getFooterRow,\n    \"getFooterRowColumn\": getFooterRowColumn,\n    \"getGridPosition\": getGridPosition,\n    \"flashCell\": flashCell,\n    \"addCellCssStyles\": addCellCssStyles,\n    \"setCellCssStyles\": setCellCssStyles,\n    \"removeCellCssStyles\": removeCellCssStyles,\n    \"getCellCssStyles\": getCellCssStyles,\n    \"init\": finishInitialization,\n    \"destroy\": destroy,\n    // IEditor implementation\n    \"getEditorLock\": getEditorLock,\n    \"getEditController\": getEditController\n  });\n  init();\n}\n\nmodule.exports = {\n  Grid: SlickGrid\n};","map":{"version":3,"sources":["/Users/gen/Desktop/defund_to_refund/node_modules/@bokeh/slickgrid/slick.grid.js"],"names":["$","require","Slick","scrollbarDimensions","maxSupportedCssHeight","SlickGrid","container","data","columns","options","fn","drag","drop","defaults","alwaysShowVerticalScroll","explicitInitialization","rowHeight","defaultColumnWidth","enableAddRow","leaveSpaceForNewRows","editable","autoEdit","suppressActiveCellChangeOnEdit","enableCellNavigation","enableColumnReorder","asyncEditorLoading","asyncEditorLoadDelay","forceFitColumns","enableAsyncPostRender","asyncPostRenderDelay","enableAsyncPostRenderCleanup","asyncPostRenderCleanupDelay","autoHeight","editorLock","GlobalEditorLock","showHeaderRow","headerRowHeight","createFooterRow","showFooterRow","footerRowHeight","createPreHeaderPanel","showPreHeaderPanel","preHeaderPanelHeight","showTopPanel","topPanelHeight","formatterFactory","editorFactory","cellFlashingCssClass","selectedCellCssClass","multiSelect","enableTextSelectionOnCells","dataItemColumnValueExtractor","fullWidthRows","multiColumnSort","numberedMultiColumnSort","tristateMultiColumnSort","sortColNumberInSeparateSpan","defaultFormatter","forceSyncScrolling","addNewRowCssClass","preserveCopiedSelectionOnPaste","showCellSelection","viewportClass","minRowBuffer","emulatePagingWhenScrolling","editorCellNavOnLRKeys","columnDefaults","name","resizable","sortable","minWidth","rerenderOnResize","headerCssClass","defaultSortAsc","focusable","selectable","th","h","ph","n","cj","page","offset","vScrollDir","initialized","$container","uid","Math","round","random","self","$focusSink","$focusSink2","$headerScroller","$headers","$headerRow","$headerRowScroller","$headerRowSpacer","$footerRow","$footerRowScroller","$footerRowSpacer","$preHeaderPanel","$preHeaderPanelScroller","$preHeaderPanelSpacer","$topPanelScroller","$topPanel","$viewport","$canvas","$style","$boundAncestors","stylesheet","columnCssRulesL","columnCssRulesR","viewportH","viewportW","canvasWidth","viewportHasHScroll","viewportHasVScroll","headerColumnWidthDiff","headerColumnHeightDiff","cellWidthDiff","cellHeightDiff","jQueryNewWidthBehaviour","absoluteColumnMinWidth","tabbingDirection","activePosX","activeRow","activeCell","activeCellNode","currentEditor","serializedEditorValue","editController","rowsCache","renderedRows","numVisibleRows","prevScrollTop","scrollTop","lastRenderedScrollTop","lastRenderedScrollLeft","prevScrollLeft","scrollLeft","selectionModel","selectedRows","plugins","cellCssClasses","columnsById","sortColumns","columnPosLeft","columnPosRight","pagingActive","pagingIsLastPage","scrollThrottle","ActionThrottle","render","h_editorLoader","h_render","h_postrender","h_postrenderCleanup","postProcessedRows","postProcessToRow","postProcessFromRow","postProcessedCleanupQueue","postProcessgroupId","counter_rows_rendered","counter_rows_removed","rowNodeFromLastMouseWheelEvent","zombieRowNodeFromLastMouseWheelEvent","zombieRowCacheFromLastMouseWheelEvent","zombieRowPostProcessedFromLastMouseWheelEvent","cssShow","position","visibility","display","$hiddenParents","oldProps","columnResizeDragging","init","length","Error","cacheCssForHiddenInit","getMaxSupportedCssHeight","extend","validateAndEnforceOptions","width","i","m","id","maxWidth","commitCurrentEdit","cancelCurrentEdit","empty","css","addClass","test","appendTo","hide","toggleClass","measureScrollbar","getCanvasWidth","getHeadersWidth","clone","finishInitialization","parseFloat","measureCellPaddingAndBorder","disableSelection","on","event","target","is","updateColumnCaches","createColumnHeaders","setupColumnSort","createCssRules","resizeCanvas","bindAncestorScrollEvents","handleScroll","handleHeaderContextMenu","handleHeaderClick","handleHeaderMouseEnter","handleHeaderMouseLeave","handleHeaderRowScroll","handleFooterRowScroll","handlePreHeaderPanelScroll","add","handleKeyDown","handleClick","handleDblClick","handleContextMenu","handleDragInit","distance","handleDragStart","handleDrag","handleDragEnd","handleMouseEnter","handleMouseLeave","navigator","userAgent","toLowerCase","match","handleMouseWheel","restoreCssFromHiddenInit","parents","addBack","not","each","old","style","push","registerPlugin","plugin","unshift","unregisterPlugin","destroy","splice","setSelectionModel","model","onSelectedRangesChanged","unsubscribe","handleSelectedRangesChanged","subscribe","getSelectionModel","getCanvasNode","$outerdiv","className","$innerdiv","dim","offsetWidth","clientWidth","height","offsetHeight","clientHeight","remove","getColumnTotalWidth","includeScrollbar","totalWidth","ii","headersWidth","max","availableWidth","rowWidth","updateCanvasWidth","forceColumnWidthsUpdate","oldCanvasWidth","w","applyColumnWidths","$target","jquery","attr","supportedHeight","testUpTo","div","document","body","getUID","getHeaderColumnWidthDiff","getScrollbarDimensions","elem","parentNode","scrollWidth","scrollHeight","$elem","handleActiveCellPositionChange","unbindAncestorScrollEvents","off","updateColumnHeader","columnId","title","toolTip","idx","getColumnIndex","columnDef","$header","children","eq","undefined","trigger","onBeforeHeaderCellDestroy","html","onHeaderCellRendered","getHeader","getHeaderColumn","columnIdOrIdx","$rtn","getHeaderRow","getFooterRow","getPreHeaderPanel","getHeaderRowColumn","getFooterRowColumn","onMouseEnter","onMouseLeave","removeClass","find","onBeforeHeaderRowCellDestroy","onBeforeFooterRowCellDestroy","header","append","headerRowCell","onHeaderRowCellRendered","footerRowCell","onFooterRowCellRendered","setSortColumns","setupColumnResize","setColumns","setupColumnReorder","click","e","metaKey","ctrlKey","hasClass","$col","closest","column","getEditorLock","sortColumn","sortAsc","hadSortCol","shiftKey","onSort","sortCol","sortCols","map","col","filter","containment","axis","cursor","tolerance","helper","placeholder","start","ui","outerWidth","beforeStop","stop","reorderedIds","reorderedColumns","replace","onColumnsReordered","stopPropagation","j","c","pageX","columnElements","minPageX","maxPageX","firstResizable","lastResizable","dd","parent","shrinkLeewayOnRight","stretchLeewayOnRight","previousWidth","shrinkLeewayOnLeft","stretchLeewayOnLeft","min","actualMinWidth","d","x","applyColumnHeaderWidths","syncColumnCellResize","newWidth","invalidateAllRows","onColumnsResized","setTimeout","getVBoxDelta","$el","p","delta","val","el","v","verArray","split","r","rules","styleSheet","cssText","join","appendChild","createTextNode","getColumnCssRules","sheets","styleSheets","ownerNode","owningElement","cssRules","matches","columnIdx","selector","selectorText","exec","parseInt","substr","removeCssRules","onBeforeDestroy","evt","args","EventData","grid","notify","getEditController","autosizeColumns","widths","shrinkLeeway","total","prevTotal","availWidth","shrinkProportion","absMinWidth","shrinkSize","floor","growProportion","currentWidth","growSize","reRender","onAutosizeColumns","headers","rule","left","right","setSortColumn","ascending","cols","numberCols","headerColumnEls","text","columnIndex","getSortColumns","ranges","hash","fromRow","toRow","k","fromCell","toCell","canCellBeSelected","setCellCssStyles","onSelectedRowsChanged","rows","getSelectedRows","getColumns","columnDefinitions","getOptions","setOptions","suppressRender","makeActiveCellNormal","invalidateRow","getDataLength","setData","newData","scrollToTop","updateRowCount","scrollTo","getData","getLength","getDataLengthIncludingAddNew","getDataItem","getItem","getTopPanel","setTopPanelVisibility","visible","slideDown","slideUp","setHeaderRowVisibility","setFooterRowVisibility","setPreHeaderPanelVisibility","getContainerNode","get","getRowTop","row","getRowFromPosition","y","oldOffset","newScrollTop","range","getVisibleRange","cleanupRows","updateRowPositions","onViewportChanged","cell","value","dataContext","getFormatter","rowMetadata","getItemMetadata","columnOverrides","formatter","getEditor","columnMetadata","editor","getDataItemValueForColumn","item","field","appendRowHtml","stringArray","dataLength","dataLoading","rowCss","metadata","cssClasses","colspan","columnData","leftPx","rightPx","appendCellHtml","cellCss","cssClass","key","formatterResult","addlCssClasses","onBeforeAppendCell","addClasses","Object","prototype","toString","call","cellRenderQueue","cellColSpans","rangeToKeep","top","bottom","removeRowFromCache","startPostProcessingCleanup","invalidate","queuePostProcessedRowForCleanup","cacheEntry","postProcessedRow","rowIdx","hasOwnProperty","actionType","groupId","node","cellNodesByColumnIdx","rowNode","detach","queuePostProcessedCellForCleanup","cellnode","removeChild","invalidateRows","rl","applyFormatResultToCellNode","cellNode","suppressRemove","innerHTML","removeClasses","updateCell","getCellNode","loadValue","invalidatePostProcessingResults","updateRow","ensureCellNodesInRowsCache","getViewportHeight","ceil","updatePagingStatusFromView","pagingInfo","pageSize","pageNum","totalPages","dataLengthIncludingAddNew","numberOfRows","oldViewportHasVScroll","r1","resetActiveCell","oldH","oldScrollTopInRange","viewportTop","viewportLeft","getRenderedRange","buffer","minBuffer","lastChild","pop","previousSibling","cleanUpCells","totalCellsRemoved","cellsToRemove","cellToRemove","cleanUpAndRenderCells","processedRows","cellsAdded","totalCellsAdded","btm","createElement","processedRow","renderRows","needToReselectCell","firstChild","startPostProcessing","clearTimeout","asyncPostProcessRows","asyncPostProcessCleanupRows","dequeue","rendered","onRendered","startRow","endRow","handleHeaderScroll","handleElementScroll","element","vScrollDist","abs","hScrollDist","dx","dy","enqueue","onScroll","action","minPeriod_ms","blocked","queued","blockAndExecute","unblock","processedStatus","asyncPostRender","entry","shift","asyncPostRenderCleanup","updateCellCssStylesOnRenderedRows","addedHash","removedHash","addedRowHash","removedRowHash","addCellCssStyles","onCellCssStylesChanged","removeCellCssStyles","prevHash","getCellCssStyles","flashCell","speed","$cell","toggleCellClass","times","queue","getCellFromEvent","cellExists","retval","onDragInit","isImmediatePropagationStopped","onDragStart","onDrag","onDragEnd","onKeyDown","handled","keyCode","altKey","keyCaptureList","indexOf","which","HOME","navigateTop","navigateRowStart","END","navigateBottom","navigateRowEnd","ESCAPE","isActive","cancelEditAndSetFocus","PAGE_DOWN","navigatePageDown","PAGE_UP","navigatePageUp","LEFT","navigateLeft","RIGHT","navigateRight","UP","navigateUp","DOWN","navigateDown","TAB","navigateNext","ENTER","commitEditAndSetFocus","makeActiveCellEditable","navigatePrev","preventDefault","originalEvent","error","activeElement","setFocus","onClick","canCellBeActive","scrollRowIntoView","preClickModeOn","preClickClassName","suppressActiveCellChangedEvent","setActiveCellInternal","onContextMenu","onDblClick","gotoCell","onHeaderMouseEnter","onHeaderMouseLeave","onHeaderContextMenu","onHeaderClick","getCellFromPoint","getCellFromNode","cls","getRowFromNode","getCellNodeBox","y1","y2","x1","x2","focus","scrollCellIntoView","doPaging","getColspan","internalScrollColumnIntoView","scrollRight","scrollColumnIntoView","newCell","opt_editMode","activeCellChanged","isCellPotentiallyEditable","onActiveCellChanged","getActiveCell","clearTextSelection","selection","window","getSelection","sel","removeAllRanges","cannotTriggerInsert","onBeforeCellEditorDestroy","deactivate","onBeforeEditCell","activate","useEditor","suppressClearOnEdit","gridPosition","absBox","commitChanges","cancelChanges","preClick","serializeValue","box","offsetTop","offsetLeft","outerHeight","offsetParent","getActiveCellPosition","getGridPosition","onActiveCellPositionChanged","cellBox","show","getCellEditor","getActiveCellNode","rowAtTop","rowAtBottom","scrollRowToTop","scrollPage","dir","deltaRows","prevCell","prevActivePosX","navigateToRow","num_rows","findFirstFocusableCell","findLastFocusableCell","lastFocusableCell","gotoRight","posX","gotoLeft","firstFocusableCell","prev","pos","gotoDown","gotoUp","gotoNext","gotoPrev","lastSelectableCell","gotoRowStart","gotoRowEnd","navigate","tabbingDirections","stepFunctions","stepFn","isAddNewRow","setActiveCell","forceEdit","isValueChanged","validationResults","validate","valid","editCommand","serializedValue","prevSerializedValue","execute","applyValue","onCellChange","undo","editCommandHandler","newItem","onAddNewRow","onValidationError","rowsToRanges","lastCell","Range","setSelectedRows","setSelectedRanges","debug","s","alert","eval","expr","Event","module","exports","Grid"],"mappings":"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","sourcesContent":["  \"use strict\";\n\n/**\n * @license\n * (c) 2009-2016 Michael Leibman\n * michael{dot}leibman{at}gmail{dot}com\n * http://github.com/mleibman/slickgrid\n *\n * Distributed under MIT license.\n * All rights reserved.\n *\n * SlickGrid v2.3\n *\n * NOTES:\n *     Cell/row DOM manipulations are done directly bypassing jQuery's DOM manipulation methods.\n *     This increases the speed dramatically, but can only be done safely because there are no event handlers\n *     or data associated with any cell/row DOM nodes.  Cell editors must make sure they implement .destroy()\n *     and do proper cleanup.\n */\n\n  var $ = require(\"./slick.jquery\");\n  var Slick = require(\"./slick.core\");\n\n  // shared across all grids on the page\n  var scrollbarDimensions;\n  var maxSupportedCssHeight;  // browser's breaking point\n\n  //////////////////////////////////////////////////////////////////////////////////////////////\n  // SlickGrid class implementation (available as Slick.Grid)\n\n  /**\n   * Creates a new instance of the grid.\n   * @class SlickGrid\n   * @constructor\n   * @param {Node}              container   Container node to create the grid in.\n   * @param {Array,Object}      data        An array of objects for databinding.\n   * @param {Array}             columns     An array of column definitions.\n   * @param {Object}            options     Grid options.\n   **/\n  function SlickGrid(container, data, columns, options) {\n    if (!$.fn.drag) {\n      require('./lib/jquery.event.drag-2.3.0');\n    }\n\n    if (!$.fn.drop) {\n      require('./lib/jquery.event.drop-2.3.0');\n    }\n\n    // settings\n    var defaults = {\n      alwaysShowVerticalScroll: false,\n      explicitInitialization: false,\n      rowHeight: 25,\n      defaultColumnWidth: 80,\n      enableAddRow: false,\n      leaveSpaceForNewRows: false,\n      editable: false,\n      autoEdit: true,\n      suppressActiveCellChangeOnEdit: false,\n      enableCellNavigation: true,\n      enableColumnReorder: true,\n      asyncEditorLoading: false,\n      asyncEditorLoadDelay: 100,\n      forceFitColumns: false,\n      enableAsyncPostRender: false,\n      asyncPostRenderDelay: 50,\n      enableAsyncPostRenderCleanup: false,\n      asyncPostRenderCleanupDelay: 40,\n      autoHeight: false,\n      editorLock: Slick.GlobalEditorLock,\n      showHeaderRow: false,\n      headerRowHeight: 25,\n      createFooterRow: false,\n      showFooterRow: false,\n      footerRowHeight: 25,\n      createPreHeaderPanel: false,\n      showPreHeaderPanel: false,\n      preHeaderPanelHeight: 25,\n      showTopPanel: false,\n      topPanelHeight: 25,\n      formatterFactory: null,\n      editorFactory: null,\n      cellFlashingCssClass: \"flashing\",\n      selectedCellCssClass: \"selected\",\n      multiSelect: true,\n      enableTextSelectionOnCells: false,\n      dataItemColumnValueExtractor: null,\n      fullWidthRows: false,\n      multiColumnSort: false,\n      numberedMultiColumnSort: false,\n      tristateMultiColumnSort: false,\n      sortColNumberInSeparateSpan: false,\n      defaultFormatter: defaultFormatter,\n      forceSyncScrolling: false,\n      addNewRowCssClass: \"new-row\",\n      preserveCopiedSelectionOnPaste: false,\n      showCellSelection: true,\n      viewportClass: null,\n      minRowBuffer: 3,\n      emulatePagingWhenScrolling: true, // when scrolling off bottom of viewport, place new row at top of viewport\n      editorCellNavOnLRKeys: false\n    };\n\n    var columnDefaults = {\n      name: \"\",\n      resizable: true,\n      sortable: false,\n      minWidth: 30,\n      rerenderOnResize: false,\n      headerCssClass: null,\n      defaultSortAsc: true,\n      focusable: true,\n      selectable: true\n    };\n\n    // scroller\n    var th;   // virtual height\n    var h;    // real scrollable height\n    var ph;   // page height\n    var n;    // number of pages\n    var cj;   // \"jumpiness\" coefficient\n\n    var page = 0;       // current page\n    var offset = 0;     // current page offset\n    var vScrollDir = 1;\n\n    // private\n    var initialized = false;\n    var $container;\n    var uid = \"slickgrid_\" + Math.round(1000000 * Math.random());\n    var self = this;\n    var $focusSink, $focusSink2;\n    var $headerScroller;\n    var $headers;\n    var $headerRow, $headerRowScroller, $headerRowSpacer;\n    var $footerRow, $footerRowScroller, $footerRowSpacer;\n    var $preHeaderPanel, $preHeaderPanelScroller, $preHeaderPanelSpacer;\n    var $topPanelScroller;\n    var $topPanel;\n    var $viewport;\n    var $canvas;\n    var $style;\n    var $boundAncestors;\n    var stylesheet, columnCssRulesL, columnCssRulesR;\n    var viewportH, viewportW;\n    var canvasWidth;\n    var viewportHasHScroll, viewportHasVScroll;\n    var headerColumnWidthDiff = 0, headerColumnHeightDiff = 0, // border+padding\n        cellWidthDiff = 0, cellHeightDiff = 0, jQueryNewWidthBehaviour = false;\n    var absoluteColumnMinWidth;\n    var tabbingDirection = 1;\n    var activePosX;\n    var activeRow, activeCell;\n    var activeCellNode = null;\n    var currentEditor = null;\n    var serializedEditorValue;\n    var editController;\n\n    var rowsCache = {};\n    var renderedRows = 0;\n    var numVisibleRows;\n    var prevScrollTop = 0;\n    var scrollTop = 0;\n    var lastRenderedScrollTop = 0;\n    var lastRenderedScrollLeft = 0;\n    var prevScrollLeft = 0;\n    var scrollLeft = 0;\n\n    var selectionModel;\n    var selectedRows = [];\n\n    var plugins = [];\n    var cellCssClasses = {};\n\n    var columnsById = {};\n    var sortColumns = [];\n    var columnPosLeft = [];\n    var columnPosRight = [];\n\n    var pagingActive = false;\n    var pagingIsLastPage = false;\n\n    \n    var scrollThrottle = ActionThrottle(render, 50);\n    \n    // async call handles\n    var h_editorLoader = null;\n    var h_render = null;\n    var h_postrender = null;\n    var h_postrenderCleanup = null;\n    var postProcessedRows = {};\n    var postProcessToRow = null;\n    var postProcessFromRow = null;\n    var postProcessedCleanupQueue = [];\n    var postProcessgroupId = 0;\n\n    // perf counters\n    var counter_rows_rendered = 0;\n    var counter_rows_removed = 0;\n\n    // These two variables work around a bug with inertial scrolling in Webkit/Blink on Mac.\n    // See http://crbug.com/312427.\n    var rowNodeFromLastMouseWheelEvent;  // this node must not be deleted while inertial scrolling\n    var zombieRowNodeFromLastMouseWheelEvent;  // node that was hidden instead of getting deleted\n    var zombieRowCacheFromLastMouseWheelEvent;  // row cache for above node\n    var zombieRowPostProcessedFromLastMouseWheelEvent;  // post processing references for above node\n\n    // store css attributes if display:none is active in container or parent\n    var cssShow = { position: 'absolute', visibility: 'hidden', display: 'block' };\n    var $hiddenParents;\n    var oldProps = [];\n    var columnResizeDragging = false;\n\n    //////////////////////////////////////////////////////////////////////////////////////////////\n    // Initialization\n\n    function init() {\n      if (container instanceof $) {\n        $container = container;\n      } else {\n        $container = $(container);\n      }\n      if ($container.length < 1) {\n        throw new Error(\"SlickGrid requires a valid container, \" + container + \" does not exist in the DOM.\");\n      }\n\n      cacheCssForHiddenInit();\n\n      // calculate these only once and share between grid instances\n      maxSupportedCssHeight = maxSupportedCssHeight || getMaxSupportedCssHeight();\n\n      options = $.extend({}, defaults, options);\n      validateAndEnforceOptions();\n      columnDefaults.width = options.defaultColumnWidth;\n\n      columnsById = {};\n      for (var i = 0; i < columns.length; i++) {\n        var m = columns[i] = $.extend({}, columnDefaults, columns[i]);\n        columnsById[m.id] = i;\n        if (m.minWidth && m.width < m.minWidth) {\n          m.width = m.minWidth;\n        }\n        if (m.maxWidth && m.width > m.maxWidth) {\n          m.width = m.maxWidth;\n        }\n      }\n\n      // validate loaded JavaScript modules against requested options\n      if (options.enableColumnReorder && !$.fn.sortable) {\n        throw new Error(\"SlickGrid's 'enableColumnReorder = true' option requires jquery-ui.sortable module to be loaded\");\n      }\n\n      editController = {\n        \"commitCurrentEdit\": commitCurrentEdit,\n        \"cancelCurrentEdit\": cancelCurrentEdit\n      };\n\n      $container\n          .empty()\n          .css(\"overflow\", \"hidden\")\n          .css(\"outline\", 0)\n          .addClass(uid)\n          .addClass(\"ui-widget\");\n\n      // set up a positioning container if needed\n      if (!/relative|absolute|fixed/.test($container.css(\"position\"))) {\n        $container.css(\"position\", \"relative\");\n      }\n\n      $focusSink = $(\"<div tabIndex='0' hideFocus style='position:fixed;width:0;height:0;top:0;left:0;outline:0;'></div>\").appendTo($container);\n\n      if (options.createPreHeaderPanel) {\n        $preHeaderPanelScroller = $(\"<div class='slick-preheader-panel ui-state-default' style='overflow:hidden;position:relative;' />\").appendTo($container);\n        $preHeaderPanel = $(\"<div />\").appendTo($preHeaderPanelScroller);\n        $preHeaderPanelSpacer = $(\"<div style='display:block;height:1px;position:absolute;top:0;left:0;'></div>\")\n            .appendTo($preHeaderPanelScroller);\n\n        if (!options.showPreHeaderPanel) {\n          $preHeaderPanelScroller.hide();\n        }\n      }\n\n      $headerScroller = $(\"<div class='slick-header ui-state-default' />\").appendTo($container);\n      $headers = $(\"<div class='slick-header-columns' style='left:-1000px' />\").appendTo($headerScroller);\n\n      $headerRowScroller = $(\"<div class='slick-headerrow ui-state-default' />\").appendTo($container);\n      $headerRow = $(\"<div class='slick-headerrow-columns' />\").appendTo($headerRowScroller);\n      $headerRowSpacer = $(\"<div style='display:block;height:1px;position:absolute;top:0;left:0;'></div>\")\n          .appendTo($headerRowScroller);\n\n      $topPanelScroller = $(\"<div class='slick-top-panel-scroller ui-state-default' />\").appendTo($container);\n      $topPanel = $(\"<div class='slick-top-panel' style='width:10000px' />\").appendTo($topPanelScroller);\n\n      if (!options.showTopPanel) {\n        $topPanelScroller.hide();\n      }\n\n      if (!options.showHeaderRow) {\n        $headerRowScroller.hide();\n      }\n\n      $viewport = $(\"<div class='slick-viewport' style='width:100%;overflow:auto;outline:0;position:relative;;'>\").appendTo($container);\n      $viewport.css(\"overflow-y\", options.alwaysShowVerticalScroll ? \"scroll\" : (options.autoHeight ? \"hidden\" : \"auto\"));\n      $viewport.css(\"overflow-x\", options.forceFitColumns ? \"hidden\" : \"auto\");\n      if (options.viewportClass) $viewport.toggleClass(options.viewportClass, true);\n\n      $canvas = $(\"<div class='grid-canvas' />\").appendTo($viewport);\n\n      scrollbarDimensions = scrollbarDimensions || measureScrollbar();\n\n      if ($preHeaderPanelSpacer) $preHeaderPanelSpacer.css(\"width\", getCanvasWidth() + scrollbarDimensions.width + \"px\");\n      $headers.width(getHeadersWidth());\n      $headerRowSpacer.css(\"width\", getCanvasWidth() + scrollbarDimensions.width + \"px\");\n\n\n\n      if (options.createFooterRow) {\n        $footerRowScroller = $(\"<div class='slick-footerrow ui-state-default' />\").appendTo($container);\n        $footerRow = $(\"<div class='slick-footerrow-columns' />\").appendTo($footerRowScroller);\n        $footerRowSpacer = $(\"<div style='display:block;height:1px;position:absolute;top:0;left:0;'></div>\")\n            .css(\"width\", getCanvasWidth() + scrollbarDimensions.width + \"px\")\n            .appendTo($footerRowScroller);\n\n        if (!options.showFooterRow) {\n          $footerRowScroller.hide();\n        }\n      }\n\n      $focusSink2 = $focusSink.clone().appendTo($container);\n\n      if (!options.explicitInitialization) {\n        finishInitialization();\n      }\n    }\n\n    function finishInitialization() {\n      if (!initialized) {\n        initialized = true;\n\n        viewportW = parseFloat($.css($container[0], \"width\", true));\n\n        // header columns and cells may have different padding/border skewing width calculations (box-sizing, hello?)\n        // calculate the diff so we can set consistent sizes\n        measureCellPaddingAndBorder();\n\n        // for usability reasons, all text selection in SlickGrid is disabled\n        // with the exception of input and textarea elements (selection must\n        // be enabled there so that editors work as expected); note that\n        // selection in grid cells (grid body) is already unavailable in\n        // all browsers except IE\n        disableSelection($headers); // disable all text selection in header (including input and textarea)\n\n        if (!options.enableTextSelectionOnCells) {\n          // disable text selection in grid cells except in input and textarea elements\n          // (this is IE-specific, because selectstart event will only fire in IE)\n          $viewport.on(\"selectstart.ui\", function (event) {\n            return $(event.target).is(\"input,textarea\");\n          });\n        }\n\n        updateColumnCaches();\n        createColumnHeaders();\n        setupColumnSort();\n        createCssRules();\n        resizeCanvas();\n        bindAncestorScrollEvents();\n\n        $container\n            .on(\"resize.slickgrid\", resizeCanvas);\n        $viewport\n            //.on(\"click\", handleClick)\n            .on(\"scroll\", handleScroll);\n        $headerScroller\n            //.on(\"scroll\", handleHeaderScroll)\n            .on(\"contextmenu\", handleHeaderContextMenu)\n            .on(\"click\", handleHeaderClick)\n            .on(\"mouseenter\", \".slick-header-column\", handleHeaderMouseEnter)\n            .on(\"mouseleave\", \".slick-header-column\", handleHeaderMouseLeave);\n        $headerRowScroller\n            .on(\"scroll\", handleHeaderRowScroll);\n\n        if (options.createFooterRow) {\n          $footerRowScroller\n              .on(\"scroll\", handleFooterRowScroll);\n        }\n\n        if (options.createPreHeaderPanel) {\n          $preHeaderPanelScroller\n              .on(\"scroll\", handlePreHeaderPanelScroll);\n        }\n\n        $focusSink.add($focusSink2)\n            .on(\"keydown\", handleKeyDown);\n        $canvas\n            .on(\"keydown\", handleKeyDown)\n            .on(\"click\", handleClick)\n            .on(\"dblclick\", handleDblClick)\n            .on(\"contextmenu\", handleContextMenu)\n            .on(\"draginit\", handleDragInit)\n            .on(\"dragstart\", {distance: 3}, handleDragStart)\n            .on(\"drag\", handleDrag)\n            .on(\"dragend\", handleDragEnd)\n            .on(\"mouseenter\", \".slick-cell\", handleMouseEnter)\n            .on(\"mouseleave\", \".slick-cell\", handleMouseLeave);\n\n        // Work around http://crbug.com/312427.\n        if (navigator.userAgent.toLowerCase().match(/webkit/) &&\n            navigator.userAgent.toLowerCase().match(/macintosh/)) {\n          $canvas.on(\"mousewheel\", handleMouseWheel);\n        }\n        restoreCssFromHiddenInit();\n      }\n    }\n\n    function cacheCssForHiddenInit() {\n      // handle display:none on container or container parents\n      $hiddenParents = $container.parents().addBack().not(':visible');\n      $hiddenParents.each(function() {\n        var old = {};\n        for ( var name in cssShow ) {\n          old[ name ] = this.style[ name ];\n          this.style[ name ] = cssShow[ name ];\n        }\n        oldProps.push(old);\n      });\n    }\n\n    function restoreCssFromHiddenInit() {\n      // finish handle display:none on container or container parents\n      // - put values back the way they were\n      $hiddenParents.each(function(i) {\n        var old = oldProps[i];\n        for ( var name in cssShow ) {\n          this.style[ name ] = old[ name ];\n        }\n      });\n    }\n\n    function registerPlugin(plugin) {\n      plugins.unshift(plugin);\n      plugin.init(self);\n    }\n\n    function unregisterPlugin(plugin) {\n      for (var i = plugins.length; i >= 0; i--) {\n        if (plugins[i] === plugin) {\n          if (plugins[i].destroy) {\n            plugins[i].destroy();\n          }\n          plugins.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    function setSelectionModel(model) {\n      if (selectionModel) {\n        selectionModel.onSelectedRangesChanged.unsubscribe(handleSelectedRangesChanged);\n        if (selectionModel.destroy) {\n          selectionModel.destroy();\n        }\n      }\n\n      selectionModel = model;\n      if (selectionModel) {\n        selectionModel.init(self);\n        selectionModel.onSelectedRangesChanged.subscribe(handleSelectedRangesChanged);\n      }\n    }\n\n    function getSelectionModel() {\n      return selectionModel;\n    }\n\n    function getCanvasNode() {\n      return $canvas[0];\n    }\n\n    function measureScrollbar() {\n      var $outerdiv = $('<div class=\"' + $viewport.className + '\" style=\"position:absolute; top:-10000px; left:-10000px; overflow:auto; width:100px; height:100px;\"></div>').appendTo($viewport);\n      var $innerdiv = $('<div style=\"width:200px; height:200px; overflow:auto;\"></div>').appendTo($outerdiv);\n      var dim = {\n\twidth: $outerdiv[0].offsetWidth - $outerdiv[0].clientWidth,\n\theight: $outerdiv[0].offsetHeight - $outerdiv[0].clientHeight\n      };\n      $innerdiv.remove();\n      $outerdiv.remove();\n      return dim;\n    }\n\n    function getColumnTotalWidth(includeScrollbar) {\n      var totalWidth = 0;\n      for (var i = 0, ii = columns.length; i < ii; i++) {\n        var width = columns[i].width;\n        totalWidth += width;\n      }\n      if (includeScrollbar) {\n        totalWidth += scrollbarDimensions.width;\n      }\n      return totalWidth;\n    }\n\n    function getHeadersWidth() {\n      var headersWidth = getColumnTotalWidth(!options.autoHeight);\n      return Math.max(headersWidth, viewportW) + 1000;\n    }\n\n    function getCanvasWidth() {\n      var availableWidth = viewportHasVScroll ? viewportW - scrollbarDimensions.width : viewportW;\n      var rowWidth = 0;\n      var i = columns.length;\n      while (i--) {\n        rowWidth += columns[i].width;\n      }\n      return options.fullWidthRows ? Math.max(rowWidth, availableWidth) : rowWidth;\n    }\n\n    function updateCanvasWidth(forceColumnWidthsUpdate) {\n      var oldCanvasWidth = canvasWidth;\n      canvasWidth = getCanvasWidth();\n\n      if (canvasWidth != oldCanvasWidth) {\n        $canvas.width(canvasWidth);\n        $headerRow.width(canvasWidth);\n        if (options.createFooterRow) { $footerRow.width(canvasWidth); }\n        if (options.createPreHeaderPanel) { $preHeaderPanel.width(canvasWidth); }\n        $headers.width(getHeadersWidth());\n        viewportHasHScroll = (canvasWidth > viewportW - scrollbarDimensions.width);\n      }\n\n       var w=canvasWidth + (viewportHasVScroll ? scrollbarDimensions.width : 0);\n       $headerRowSpacer.width(w);\n       if (options.createFooterRow) { $footerRowSpacer.width(w); }\n       if (options.createPreHeaderPanel) { $preHeaderPanelSpacer.width(w); }\n\n      if (canvasWidth != oldCanvasWidth || forceColumnWidthsUpdate) {\n        applyColumnWidths();\n      }\n    }\n\n    function disableSelection($target) {\n      if ($target && $target.jquery) {\n        $target\n            .attr(\"unselectable\", \"on\")\n            .css(\"MozUserSelect\", \"none\")\n            .on(\"selectstart.ui\", function () {\n              return false;\n            }); // from jquery:ui.core.js 1.7.2\n      }\n    }\n\n    function getMaxSupportedCssHeight() {\n      var supportedHeight = 1000000;\n      // FF reports the height back but still renders blank after ~6M px\n      var testUpTo = navigator.userAgent.toLowerCase().match(/firefox/) ? 6000000 : 1000000000;\n      var div = $(\"<div style='display:none' />\").appendTo(document.body);\n\n      while (true) {\n        var test = supportedHeight * 2;\n        div.css(\"height\", test);\n        if (test > testUpTo || div.height() !== test) {\n          break;\n        } else {\n          supportedHeight = test;\n        }\n      }\n\n      div.remove();\n      return supportedHeight;\n    }\n\n    function getUID() {\n      return uid;\n    }\n\n    function getHeaderColumnWidthDiff() {\n      return headerColumnWidthDiff;\n    }\n\n    function getScrollbarDimensions() {\n      return scrollbarDimensions;\n    }\n\n    // TODO:  this is static.  need to handle page mutation.\n    function bindAncestorScrollEvents() {\n      var elem = $canvas[0];\n      while ((elem = elem.parentNode) != document.body && elem != null) {\n        // bind to scroll containers only\n        if (elem == $viewport[0] || elem.scrollWidth != elem.clientWidth || elem.scrollHeight != elem.clientHeight) {\n          var $elem = $(elem);\n          if (!$boundAncestors) {\n            $boundAncestors = $elem;\n          } else {\n            $boundAncestors = $boundAncestors.add($elem);\n          }\n          $elem.on(\"scroll.\" + uid, handleActiveCellPositionChange);\n        }\n      }\n    }\n\n    function unbindAncestorScrollEvents() {\n      if (!$boundAncestors) {\n        return;\n      }\n      $boundAncestors.off(\"scroll.\" + uid);\n      $boundAncestors = null;\n    }\n\n    function updateColumnHeader(columnId, title, toolTip) {\n      if (!initialized) { return; }\n      var idx = getColumnIndex(columnId);\n      if (idx == null) {\n        return;\n      }\n\n      var columnDef = columns[idx];\n      var $header = $headers.children().eq(idx);\n      if ($header) {\n        if (title !== undefined) {\n          columns[idx].name = title;\n        }\n        if (toolTip !== undefined) {\n          columns[idx].toolTip = toolTip;\n        }\n\n        trigger(self.onBeforeHeaderCellDestroy, {\n          \"node\": $header[0],\n          \"column\": columnDef,\n          \"grid\": self\n        });\n\n        $header\n            .attr(\"title\", toolTip || \"\")\n            .children().eq(0).html(title);\n\n        trigger(self.onHeaderCellRendered, {\n          \"node\": $header[0],\n          \"column\": columnDef,\n          \"grid\": self\n        });\n      }\n    }\n\n    function getHeader() {\n      return $headers[0];\n    }\n\n    function getHeaderColumn(columnIdOrIdx) {\n      var idx = (typeof columnIdOrIdx === \"number\" ? columnIdOrIdx : getColumnIndex(columnIdOrIdx));\n      var $rtn = $headers.children().eq(idx);\n      return $rtn && $rtn[0];\n    }\n\n    function getHeaderRow() {\n      return $headerRow[0];\n    }\n\n    function getFooterRow() {\n      return $footerRow[0];\n    }\n\n    function getPreHeaderPanel() {\n      return $preHeaderPanel[0];\n    }\n\n    function getHeaderRowColumn(columnIdOrIdx) {\n      var idx = (typeof columnIdOrIdx === \"number\" ? columnIdOrIdx : getColumnIndex(columnIdOrIdx));\n      var $rtn = $headerRow.children().eq(idx);\n      return $rtn && $rtn[0];\n    }\n\n    function getFooterRowColumn(columnIdOrIdx) {\n      var idx = (typeof columnIdOrIdx === \"number\" ? columnIdOrIdx : getColumnIndex(columnIdOrIdx));\n      var $rtn = $footerRow.children().eq(idx);\n      return $rtn && $rtn[0];\n    }\n\n    function createColumnHeaders() {\n      function onMouseEnter() {\n        $(this).addClass(\"ui-state-hover\");\n      }\n\n      function onMouseLeave() {\n        $(this).removeClass(\"ui-state-hover\");\n      }\n\n      $headers.find(\".slick-header-column\")\n        .each(function() {\n          var columnDef = $(this).data(\"column\");\n          if (columnDef) {\n            trigger(self.onBeforeHeaderCellDestroy, {\n              \"node\": this,\n              \"column\": columnDef,\n              \"grid\": self\n            });\n          }\n        });\n      $headers.empty();\n      $headers.width(getHeadersWidth());\n\n      $headerRow.find(\".slick-headerrow-column\")\n        .each(function() {\n          var columnDef = $(this).data(\"column\");\n          if (columnDef) {\n            trigger(self.onBeforeHeaderRowCellDestroy, {\n              \"node\": this,\n              \"column\": columnDef,\n              \"grid\": self\n            });\n          }\n        });\n      $headerRow.empty();\n\n      if (options.createFooterRow) {\n        $footerRow.find(\".slick-footerrow-column\")\n          .each(function() {\n            var columnDef = $(this).data(\"column\");\n            if (columnDef) {\n              trigger(self.onBeforeFooterRowCellDestroy, {\n                \"node\": this,\n                \"column\": columnDef\n              });\n            }\n          });\n        $footerRow.empty();\n      }\n\n      for (var i = 0; i < columns.length; i++) {\n        var m = columns[i];\n\n        var header = $(\"<div class='ui-state-default slick-header-column' />\")\n            .html(\"<span class='slick-column-name'>\" + m.name + \"</span>\")\n            .width(m.width - headerColumnWidthDiff)\n            .attr(\"id\", \"\" + uid + m.id)\n            .attr(\"title\", m.toolTip || \"\")\n            .data(\"column\", m)\n            .addClass(m.headerCssClass || \"\")\n            .appendTo($headers);\n\n        if (options.enableColumnReorder || m.sortable) {\n          header\n            .on('mouseenter', onMouseEnter)\n            .on('mouseleave', onMouseLeave);\n        }\n\n        if (m.sortable) {\n          header.addClass(\"slick-header-sortable\");\n          header.append(\"<span class='slick-sort-indicator\" \n            + (options.numberedMultiColumnSort && !options.sortColNumberInSeparateSpan ? \" slick-sort-indicator-numbered\" : \"\" ) + \"' />\");\n          if (options.numberedMultiColumnSort && options.sortColNumberInSeparateSpan) { header.append(\"<span class='slick-sort-indicator-numbered' />\"); }\n        }\n\n        trigger(self.onHeaderCellRendered, {\n          \"node\": header[0],\n          \"column\": m,\n          \"grid\": self\n        });\n\n        if (options.showHeaderRow) {\n          var headerRowCell = $(\"<div class='ui-state-default slick-headerrow-column l\" + i + \" r\" + i + \"'></div>\")\n              .data(\"column\", m)\n              .appendTo($headerRow);\n\n          trigger(self.onHeaderRowCellRendered, {\n            \"node\": headerRowCell[0],\n            \"column\": m,\n            \"grid\": self\n          });\n        }\n        if (options.createFooterRow && options.showFooterRow) {\n          var footerRowCell = $(\"<div class='ui-state-default slick-footerrow-column l\" + i   + \" r\" + i + \"'></div>\")\n              .data(\"column\", m)\n              .appendTo($footerRow);\n\n          trigger(self.onFooterRowCellRendered, {\n            \"node\": footerRowCell[0],\n            \"column\": m\n          });\n        }\n      }\n\n      setSortColumns(sortColumns);\n      setupColumnResize();\n      if (options.enableColumnReorder) {\n        if (typeof options.enableColumnReorder == 'function') {\n            options.enableColumnReorder(self, $headers, headerColumnWidthDiff, setColumns, setupColumnResize, columns, getColumnIndex, uid, trigger);\n        } else {\n            setupColumnReorder();\n        }\n      }\n    }\n\n    function setupColumnSort() {\n      $headers.click(function (e) {\n        if (columnResizeDragging) return;\n        // temporary workaround for a bug in jQuery 1.7.1 (http://bugs.jquery.com/ticket/11328)\n        e.metaKey = e.metaKey || e.ctrlKey;\n\n        if ($(e.target).hasClass(\"slick-resizable-handle\")) {\n          return;\n        }\n\n        var $col = $(e.target).closest(\".slick-header-column\");\n        if (!$col.length) {\n          return;\n        }\n\n        var column = $col.data(\"column\");\n        if (column.sortable) {\n          if (!getEditorLock().commitCurrentEdit()) {\n            return;\n          }\n\n          var sortColumn = null;\n          var i = 0;\n          for (; i < sortColumns.length; i++) {\n            if (sortColumns[i].columnId == column.id) {\n              sortColumn = sortColumns[i];\n              sortColumn.sortAsc = !sortColumn.sortAsc;\n              break;\n            }\n          }\n          var hadSortCol = !!sortColumn;\n\n          if (options.tristateMultiColumnSort) {\n              if (!sortColumn) {\n                sortColumn = { columnId: column.id, sortAsc: column.defaultSortAsc };\n              }\n              if (hadSortCol && sortColumn.sortAsc) {\n                // three state: remove sort rather than go back to ASC\n                sortColumns.splice(i, 1);\n                sortColumn = null;\n              }\n              if (!options.multiColumnSort) { sortColumns = []; }\n              if (sortColumn && (!hadSortCol || !options.multiColumnSort)) {\n                sortColumns.push(sortColumn);\n              }\n          } else {\n              // legacy behaviour\n              if (e.metaKey && options.multiColumnSort) {\n                if (sortColumn) {\n                  sortColumns.splice(i, 1);\n                }\n              }\n              else {\n                if ((!e.shiftKey && !e.metaKey) || !options.multiColumnSort) {\n                  sortColumns = [];\n                }\n\n                if (!sortColumn) {\n                  sortColumn = { columnId: column.id, sortAsc: column.defaultSortAsc };\n                  sortColumns.push(sortColumn);\n                } else if (sortColumns.length == 0) {\n                  sortColumns.push(sortColumn);\n                }\n              }\n          }\n\n          setSortColumns(sortColumns);\n\n          if (!options.multiColumnSort) {\n            trigger(self.onSort, {\n              multiColumnSort: false,\n              sortCol: (sortColumns.length > 0 ? column : null),\n              sortAsc: (sortColumns.length > 0 ? sortColumns[0].sortAsc : true)\n              }, e);\n          } else {\n            trigger(self.onSort, {\n              multiColumnSort: true,\n              sortCols: $.map(sortColumns, function(col) {\n                return {sortCol: columns[getColumnIndex(col.columnId)], sortAsc: col.sortAsc };\n              })\n              }, e);\n          }\n        }\n      });\n    }\n\n    function setupColumnReorder() {\n      $headers.filter(\":ui-sortable\").sortable(\"destroy\");\n      $headers.sortable({\n        containment: \"parent\",\n        distance: 3,\n        axis: \"x\",\n        cursor: \"default\",\n        tolerance: \"intersection\",\n        helper: \"clone\",\n        placeholder: \"slick-sortable-placeholder ui-state-default slick-header-column\",\n        start: function (e, ui) {\n          ui.placeholder.width(ui.helper.outerWidth() - headerColumnWidthDiff);\n          $(ui.helper).addClass(\"slick-header-column-active\");\n        },\n        beforeStop: function (e, ui) {\n          $(ui.helper).removeClass(\"slick-header-column-active\");\n        },\n        stop: function (e) {\n          if (!getEditorLock().commitCurrentEdit()) {\n            $(this).sortable(\"cancel\");\n            return;\n          }\n\n          var reorderedIds = $headers.sortable(\"toArray\");\n          var reorderedColumns = [];\n          for (var i = 0; i < reorderedIds.length; i++) {\n            reorderedColumns.push(columns[getColumnIndex(reorderedIds[i].replace(uid, \"\"))]);\n          }\n          setColumns(reorderedColumns);\n\n          trigger(self.onColumnsReordered, {});\n          e.stopPropagation();\n          setupColumnResize();\n        }\n      });\n    }\n\n    function setupColumnResize() {\n      var $col, j, c, pageX, columnElements, minPageX, maxPageX, firstResizable, lastResizable;\n      columnElements = $headers.children();\n      columnElements.find(\".slick-resizable-handle\").remove();\n      columnElements.each(function (i, e) {\n        if (i >= columns.length) { return; }\n        if (columns[i].resizable) {\n          if (firstResizable === undefined) {\n            firstResizable = i;\n          }\n          lastResizable = i;\n        }\n      });\n      if (firstResizable === undefined) {\n        return;\n      }\n      columnElements.each(function (i, e) {\n        if (i >= columns.length) { return; }\n        if (i < firstResizable || (options.forceFitColumns && i >= lastResizable)) {\n          return;\n        }\n        $col = $(e);\n        $(\"<div class='slick-resizable-handle' />\")\n            .appendTo(e)\n            .on(\"dragstart\", function (e, dd) {\n              if (!getEditorLock().commitCurrentEdit()) {\n                return false;\n              }\n              pageX = e.pageX;\n              $(this).parent().addClass(\"slick-header-column-active\");\n              var shrinkLeewayOnRight = null, stretchLeewayOnRight = null;\n              // lock each column's width option to current width\n              columnElements.each(function (i, e) {\n                if (i >= columns.length) { return; }\n                columns[i].previousWidth = $(e).outerWidth();\n              });\n              if (options.forceFitColumns) {\n                shrinkLeewayOnRight = 0;\n                stretchLeewayOnRight = 0;\n                // colums on right affect maxPageX/minPageX\n                for (j = i + 1; j < columns.length; j++) {\n                  c = columns[j];\n                  if (c.resizable) {\n                    if (stretchLeewayOnRight !== null) {\n                      if (c.maxWidth) {\n                        stretchLeewayOnRight += c.maxWidth - c.previousWidth;\n                      } else {\n                        stretchLeewayOnRight = null;\n                      }\n                    }\n                    shrinkLeewayOnRight += c.previousWidth - Math.max(c.minWidth || 0, absoluteColumnMinWidth);\n                  }\n                }\n              }\n              var shrinkLeewayOnLeft = 0, stretchLeewayOnLeft = 0;\n              for (j = 0; j <= i; j++) {\n                // columns on left only affect minPageX\n                c = columns[j];\n                if (c.resizable) {\n                  if (stretchLeewayOnLeft !== null) {\n                    if (c.maxWidth) {\n                      stretchLeewayOnLeft += c.maxWidth - c.previousWidth;\n                    } else {\n                      stretchLeewayOnLeft = null;\n                    }\n                  }\n                  shrinkLeewayOnLeft += c.previousWidth - Math.max(c.minWidth || 0, absoluteColumnMinWidth);\n                }\n              }\n              if (shrinkLeewayOnRight === null) {\n                shrinkLeewayOnRight = 100000;\n              }\n              if (shrinkLeewayOnLeft === null) {\n                shrinkLeewayOnLeft = 100000;\n              }\n              if (stretchLeewayOnRight === null) {\n                stretchLeewayOnRight = 100000;\n              }\n              if (stretchLeewayOnLeft === null) {\n                stretchLeewayOnLeft = 100000;\n              }\n              maxPageX = pageX + Math.min(shrinkLeewayOnRight, stretchLeewayOnLeft);\n              minPageX = pageX - Math.min(shrinkLeewayOnLeft, stretchLeewayOnRight);\n            })\n            .on(\"drag\", function (e, dd) {\n              columnResizeDragging = true;\n              var actualMinWidth, d = Math.min(maxPageX, Math.max(minPageX, e.pageX)) - pageX, x;\n              if (d < 0) { // shrink column\n                x = d;\n                for (j = i; j >= 0; j--) {\n                  c = columns[j];\n                  if (c.resizable) {\n                    actualMinWidth = Math.max(c.minWidth || 0, absoluteColumnMinWidth);\n                    if (x && c.previousWidth + x < actualMinWidth) {\n                      x += c.previousWidth - actualMinWidth;\n                      c.width = actualMinWidth;\n                    } else {\n                      c.width = c.previousWidth + x;\n                      x = 0;\n                    }\n                  }\n                }\n\n                if (options.forceFitColumns) {\n                  x = -d;\n                  for (j = i + 1; j < columns.length; j++) {\n                    c = columns[j];\n                    if (c.resizable) {\n                      if (x && c.maxWidth && (c.maxWidth - c.previousWidth < x)) {\n                        x -= c.maxWidth - c.previousWidth;\n                        c.width = c.maxWidth;\n                      } else {\n                        c.width = c.previousWidth + x;\n                        x = 0;\n                      }\n                    }\n                  }\n                }\n              } else { // stretch column\n                x = d;\n                for (j = i; j >= 0; j--) {\n                  c = columns[j];\n                  if (c.resizable) {\n                    if (x && c.maxWidth && (c.maxWidth - c.previousWidth < x)) {\n                      x -= c.maxWidth - c.previousWidth;\n                      c.width = c.maxWidth;\n                    } else {\n                      c.width = c.previousWidth + x;\n                      x = 0;\n                    }\n                  }\n                }\n\n                if (options.forceFitColumns) {\n                  x = -d;\n                  for (j = i + 1; j < columns.length; j++) {\n                    c = columns[j];\n                    if (c.resizable) {\n                      actualMinWidth = Math.max(c.minWidth || 0, absoluteColumnMinWidth);\n                      if (x && c.previousWidth + x < actualMinWidth) {\n                        x += c.previousWidth - actualMinWidth;\n                        c.width = actualMinWidth;\n                      } else {\n                        c.width = c.previousWidth + x;\n                        x = 0;\n                      }\n                    }\n                  }\n                }\n              }\n              applyColumnHeaderWidths();\n              if (options.syncColumnCellResize) {\n                applyColumnWidths();\n              }\n            })\n            .on(\"dragend\", function (e, dd) {\n              var newWidth;\n              $(this).parent().removeClass(\"slick-header-column-active\");\n              for (j = 0; j < columns.length; j++) {\n                c = columns[j];\n                newWidth = $(columnElements[j]).outerWidth();\n\n                if (c.previousWidth !== newWidth && c.rerenderOnResize) {\n                  invalidateAllRows();\n                }\n              }\n              updateCanvasWidth(true);\n              render();\n              trigger(self.onColumnsResized, {});\n              setTimeout(function () { columnResizeDragging = false; }, 300);\n            });\n      });\n    }\n\n    function getVBoxDelta($el) {\n      var p = [\"borderTopWidth\", \"borderBottomWidth\", \"paddingTop\", \"paddingBottom\"];\n      var delta = 0;\n      $.each(p, function (n, val) {\n        delta += parseFloat($el.css(val)) || 0;\n      });\n      return delta;\n    }\n\n    function measureCellPaddingAndBorder() {\n      var el;\n      var h = [\"borderLeftWidth\", \"borderRightWidth\", \"paddingLeft\", \"paddingRight\"];\n      var v = [\"borderTopWidth\", \"borderBottomWidth\", \"paddingTop\", \"paddingBottom\"];\n\n      // jquery prior to version 1.8 handles .width setter/getter as a direct css write/read\n      // jquery 1.8 changed .width to read the true inner element width if box-sizing is set to border-box, and introduced a setter for .outerWidth\n      // so for equivalent functionality, prior to 1.8 use .width, and after use .outerWidth\n      var verArray = $.fn.jquery.split('.');\n      jQueryNewWidthBehaviour = (verArray[0]==1 && verArray[1]>=8) ||  verArray[0] >=2;\n\n      el = $(\"<div class='ui-state-default slick-header-column' style='visibility:hidden'>-</div>\").appendTo($headers);\n      headerColumnWidthDiff = headerColumnHeightDiff = 0;\n      if (el.css(\"box-sizing\") != \"border-box\" && el.css(\"-moz-box-sizing\") != \"border-box\" && el.css(\"-webkit-box-sizing\") != \"border-box\") {\n        $.each(h, function (n, val) {\n          headerColumnWidthDiff += parseFloat(el.css(val)) || 0;\n        });\n        $.each(v, function (n, val) {\n          headerColumnHeightDiff += parseFloat(el.css(val)) || 0;\n        });\n      }\n      el.remove();\n\n      var r = $(\"<div class='slick-row' />\").appendTo($canvas);\n      el = $(\"<div class='slick-cell' id='' style='visibility:hidden'>-</div>\").appendTo(r);\n      cellWidthDiff = cellHeightDiff = 0;\n      if (el.css(\"box-sizing\") != \"border-box\" && el.css(\"-moz-box-sizing\") != \"border-box\" && el.css(\"-webkit-box-sizing\") != \"border-box\") {\n        $.each(h, function (n, val) {\n          cellWidthDiff += parseFloat(el.css(val)) || 0;\n        });\n        $.each(v, function (n, val) {\n          cellHeightDiff += parseFloat(el.css(val)) || 0;\n        });\n      }\n      r.remove();\n\n      absoluteColumnMinWidth = Math.max(headerColumnWidthDiff, cellWidthDiff);\n    }\n\n    function createCssRules() {\n      $style = $(\"<style type='text/css' rel='stylesheet' />\").appendTo($(\"head\"));\n      var rowHeight = (options.rowHeight - cellHeightDiff);\n      var rules = [\n        \".\" + uid + \" .slick-header-column { left: 1000px; }\",\n        \".\" + uid + \" .slick-top-panel { height:\" + options.topPanelHeight + \"px; }\",\n        \".\" + uid + \" .slick-preheader-panel { height:\" + options.preHeaderPanelHeight + \"px; }\",\n        \".\" + uid + \" .slick-headerrow-columns { height:\" + options.headerRowHeight + \"px; }\",\n        \".\" + uid + \" .slick-footerrow-columns { height:\" + options.footerRowHeight + \"px; }\",\n        \".\" + uid + \" .slick-cell { height:\" + rowHeight + \"px; }\",\n        \".\" + uid + \" .slick-row { height:\" + options.rowHeight + \"px; }\"\n      ];\n\n      for (var i = 0; i < columns.length; i++) {\n        rules.push(\".\" + uid + \" .l\" + i + \" { }\");\n        rules.push(\".\" + uid + \" .r\" + i + \" { }\");\n      }\n\n      if ($style[0].styleSheet) { // IE\n        $style[0].styleSheet.cssText = rules.join(\" \");\n      } else {\n        $style[0].appendChild(document.createTextNode(rules.join(\" \")));\n      }\n    }\n\n    function getColumnCssRules(idx) {\n      var i;\n      if (!stylesheet) {\n        var sheets = document.styleSheets;\n        for (i = 0; i < sheets.length; i++) {\n          if ((sheets[i].ownerNode || sheets[i].owningElement) == $style[0]) {\n            stylesheet = sheets[i];\n            break;\n          }\n        }\n\n        if (!stylesheet) {\n          throw new Error(\"Cannot find stylesheet.\");\n        }\n\n        // find and cache column CSS rules\n        columnCssRulesL = [];\n        columnCssRulesR = [];\n        var cssRules = (stylesheet.cssRules || stylesheet.rules);\n        var matches, columnIdx;\n        for (i = 0; i < cssRules.length; i++) {\n          var selector = cssRules[i].selectorText;\n          if (matches = /\\.l\\d+/.exec(selector)) {\n            columnIdx = parseInt(matches[0].substr(2, matches[0].length - 2), 10);\n            columnCssRulesL[columnIdx] = cssRules[i];\n          } else if (matches = /\\.r\\d+/.exec(selector)) {\n            columnIdx = parseInt(matches[0].substr(2, matches[0].length - 2), 10);\n            columnCssRulesR[columnIdx] = cssRules[i];\n          }\n        }\n      }\n\n      return {\n        \"left\": columnCssRulesL[idx],\n        \"right\": columnCssRulesR[idx]\n      };\n    }\n\n    function removeCssRules() {\n      $style.remove();\n      stylesheet = null;\n    }\n\n    function destroy() {\n      getEditorLock().cancelCurrentEdit();\n\n      trigger(self.onBeforeDestroy, {});\n\n      var i = plugins.length;\n      while(i--) {\n        unregisterPlugin(plugins[i]);\n      }\n\n      if (options.enableColumnReorder) {\n          $headers.filter(\":ui-sortable\").sortable(\"destroy\");\n      }\n\n      unbindAncestorScrollEvents();\n      $container.off(\".slickgrid\");\n      removeCssRules();\n\n      $canvas.off(\"draginit dragstart dragend drag\");\n      $container.empty().removeClass(uid);\n    }\n\n\n    //////////////////////////////////////////////////////////////////////////////////////////////\n    // General\n\n    function trigger(evt, args, e) {\n      e = e || new Slick.EventData();\n      args = args || {};\n      args.grid = self;\n      return evt.notify(args, e, self);\n    }\n\n    function getEditorLock() {\n      return options.editorLock;\n    }\n\n    function getEditController() {\n      return editController;\n    }\n\n    function getColumnIndex(id) {\n      return columnsById[id];\n    }\n\n    function autosizeColumns() {\n      var i, c,\n          widths = [],\n          shrinkLeeway = 0,\n          total = 0,\n          prevTotal,\n          availWidth = viewportHasVScroll ? viewportW - scrollbarDimensions.width : viewportW;\n\n      for (i = 0; i < columns.length; i++) {\n        c = columns[i];\n        widths.push(c.width);\n        total += c.width;\n        if (c.resizable) {\n          shrinkLeeway += c.width - Math.max(c.minWidth, absoluteColumnMinWidth);\n        }\n      }\n\n      // shrink\n      prevTotal = total;\n      while (total > availWidth && shrinkLeeway) {\n        var shrinkProportion = (total - availWidth) / shrinkLeeway;\n        for (i = 0; i < columns.length && total > availWidth; i++) {\n          c = columns[i];\n          var width = widths[i];\n          if (!c.resizable || width <= c.minWidth || width <= absoluteColumnMinWidth) {\n            continue;\n          }\n          var absMinWidth = Math.max(c.minWidth, absoluteColumnMinWidth);\n          var shrinkSize = Math.floor(shrinkProportion * (width - absMinWidth)) || 1;\n          shrinkSize = Math.min(shrinkSize, width - absMinWidth);\n          total -= shrinkSize;\n          shrinkLeeway -= shrinkSize;\n          widths[i] -= shrinkSize;\n        }\n        if (prevTotal <= total) {  // avoid infinite loop\n          break;\n        }\n        prevTotal = total;\n      }\n\n      // grow\n      prevTotal = total;\n      while (total < availWidth) {\n        var growProportion = availWidth / total;\n        for (i = 0; i < columns.length && total < availWidth; i++) {\n          c = columns[i];\n          var currentWidth = widths[i];\n          var growSize;\n\n          if (!c.resizable || c.maxWidth <= currentWidth) {\n            growSize = 0;\n          } else {\n            growSize = Math.min(Math.floor(growProportion * currentWidth) - currentWidth, (c.maxWidth - currentWidth) || 1000000) || 1;\n          }\n          total += growSize;\n          widths[i] += (total <= availWidth ? growSize : 0);\n        }\n        if (prevTotal >= total) {  // avoid infinite loop\n          break;\n        }\n        prevTotal = total;\n      }\n\n      var reRender = false;\n      for (i = 0; i < columns.length; i++) {\n        if (columns[i].rerenderOnResize && columns[i].width != widths[i]) {\n          reRender = true;\n        }\n        columns[i].width = widths[i];\n      }\n\n      applyColumnHeaderWidths();\n      updateCanvasWidth(true);\n\n      trigger(self.onAutosizeColumns, { \"columns\": columns});      \n      \n      if (reRender) {\n        invalidateAllRows();\n        render();\n      }\n    }\n\n    function applyColumnHeaderWidths() {\n      if (!initialized) { return; }\n      var h;\n\n      for (var i = 0, headers = $headers.children(), ii = columns.length; i < ii; i++) {\n        h = $(headers[i]);\n        if (jQueryNewWidthBehaviour) {\n            if (h.outerWidth() !== columns[i].width) {\n              h.outerWidth(columns[i].width);\n            }\n        } else {\n            if (h.width() !== columns[i].width - headerColumnWidthDiff) {\n              h.width(columns[i].width - headerColumnWidthDiff);\n            }\n        }\n      }\n\n      updateColumnCaches();\n    }\n\n    function applyColumnWidths() {\n      var x = 0, w, rule;\n      for (var i = 0; i < columns.length; i++) {\n        w = columns[i].width;\n\n        rule = getColumnCssRules(i);\n        rule.left.style.left = x + \"px\";\n        rule.right.style.right = (canvasWidth - x - w) + \"px\";\n\n        x += columns[i].width;\n      }\n    }\n\n    function setSortColumn(columnId, ascending) {\n      setSortColumns([{ columnId: columnId, sortAsc: ascending}]);\n    }\n\n    function setSortColumns(cols) {\n      sortColumns = cols;\n      var numberCols = options.numberedMultiColumnSort && sortColumns.length > 1;\n      var headerColumnEls = $headers.children();\n      headerColumnEls\n        .removeClass(\"slick-header-column-sorted\")\n        .find(\".slick-sort-indicator\")\n          .removeClass(\"slick-sort-indicator-asc slick-sort-indicator-desc\");\n      headerColumnEls\n        .find(\".slick-sort-indicator-numbered\")\n          .text('');\n\n      $.each(sortColumns, function(i, col) {\n        if (col.sortAsc == null) {\n          col.sortAsc = true;\n        }\n        var columnIndex = getColumnIndex(col.columnId);\n        if (columnIndex != null) {\n          headerColumnEls.eq(columnIndex)\n            .addClass(\"slick-header-column-sorted\")\n              .find(\".slick-sort-indicator\")\n                .addClass(col.sortAsc ? \"slick-sort-indicator-asc\" : \"slick-sort-indicator-desc\");\n          if (numberCols) { \n            headerColumnEls.eq(columnIndex)\n              .find(\".slick-sort-indicator-numbered\")\n                .text(i+1); \n          }\n        }\n      });\n    }\n\n    function getSortColumns() {\n      return sortColumns;\n    }\n\n    function handleSelectedRangesChanged(e, ranges) {\n      selectedRows = [];\n      var hash = {};\n      for (var i = 0; i < ranges.length; i++) {\n        for (var j = ranges[i].fromRow; j <= ranges[i].toRow; j++) {\n          if (!hash[j]) {  // prevent duplicates\n            selectedRows.push(j);\n            hash[j] = {};\n          }\n          for (var k = ranges[i].fromCell; k <= ranges[i].toCell; k++) {\n            if (canCellBeSelected(j, k)) {\n              hash[j][columns[k].id] = options.selectedCellCssClass;\n            }\n          }\n        }\n      }\n\n      setCellCssStyles(options.selectedCellCssClass, hash);\n\n      trigger(self.onSelectedRowsChanged, {rows: getSelectedRows()}, e);\n    }\n\n    function getColumns() {\n      return columns;\n    }\n\n    function updateColumnCaches() {\n      // Pre-calculate cell boundaries.\n      columnPosLeft = [];\n      columnPosRight = [];\n      var x = 0;\n      for (var i = 0, ii = columns.length; i < ii; i++) {\n        columnPosLeft[i] = x;\n        columnPosRight[i] = x + columns[i].width;\n        x += columns[i].width;\n      }\n    }\n\n    function setColumns(columnDefinitions) {\n      columns = columnDefinitions;\n\n      columnsById = {};\n      for (var i = 0; i < columns.length; i++) {\n        var m = columns[i] = $.extend({}, columnDefaults, columns[i]);\n        columnsById[m.id] = i;\n        if (m.minWidth && m.width < m.minWidth) {\n          m.width = m.minWidth;\n        }\n        if (m.maxWidth && m.width > m.maxWidth) {\n          m.width = m.maxWidth;\n        }\n      }\n\n      updateColumnCaches();\n\n      if (initialized) {\n        invalidateAllRows();\n        createColumnHeaders();\n        removeCssRules();\n        createCssRules();\n        resizeCanvas();\n        applyColumnWidths();\n        handleScroll();\n      }\n    }\n\n    function getOptions() {\n      return options;\n    }\n\n    function setOptions(args, suppressRender) {\n      if (!getEditorLock().commitCurrentEdit()) {\n        return;\n      }\n\n      makeActiveCellNormal();\n\n      if (options.enableAddRow !== args.enableAddRow) {\n        invalidateRow(getDataLength());\n      }\n\n      options = $.extend(options, args);\n      validateAndEnforceOptions();\n\n      $viewport.css(\"overflow-y\", options.autoHeight ? \"hidden\" : \"auto\");\n      if (!suppressRender) { render(); }\n    }\n\n    function validateAndEnforceOptions() {\n      if (options.autoHeight) {\n        options.leaveSpaceForNewRows = false;\n      }\n    }\n\n    function setData(newData, scrollToTop) {\n      data = newData;\n      invalidateAllRows();\n      updateRowCount();\n      if (scrollToTop) {\n        scrollTo(0);\n      }\n    }\n\n    function getData() {\n      return data;\n    }\n\n    function getDataLength() {\n      if (data.getLength) {\n        return data.getLength();\n      } else {\n        return data.length;\n      }\n    }\n\n    function getDataLengthIncludingAddNew() {\n      return getDataLength() + (!options.enableAddRow ? 0\n        : (!pagingActive || pagingIsLastPage ? 1 : 0)\n      );\n    }\n\n    function getDataItem(i) {\n      if (data.getItem) {\n        return data.getItem(i);\n      } else {\n        return data[i];\n      }\n    }\n\n    function getTopPanel() {\n      return $topPanel[0];\n    }\n\n    function setTopPanelVisibility(visible) {\n      if (options.showTopPanel != visible) {\n        options.showTopPanel = visible;\n        if (visible) {\n          $topPanelScroller.slideDown(\"fast\", resizeCanvas);\n        } else {\n          $topPanelScroller.slideUp(\"fast\", resizeCanvas);\n        }\n      }\n    }\n\n    function setHeaderRowVisibility(visible) {\n      if (options.showHeaderRow != visible) {\n        options.showHeaderRow = visible;\n        if (visible) {\n          $headerRowScroller.slideDown(\"fast\", resizeCanvas);\n        } else {\n          $headerRowScroller.slideUp(\"fast\", resizeCanvas);\n        }\n      }\n    }\n\n    function setFooterRowVisibility(visible) {\n      if (options.showFooterRow != visible) {\n        options.showFooterRow = visible;\n        if (visible) {\n          $footerRowScroller.slideDown(\"fast\", resizeCanvas);\n        } else {\n          $footerRowScroller.slideUp(\"fast\", resizeCanvas);\n        }\n      }\n    }\n\n    function setPreHeaderPanelVisibility(visible) {\n      if (options.showPreHeaderPanel != visible) {\n        options.showPreHeaderPanel = visible;\n        if (visible) {\n          $preHeaderPanelScroller.slideDown(\"fast\", resizeCanvas);\n        } else {\n          $preHeaderPanelScroller.slideUp(\"fast\", resizeCanvas);\n        }\n      }\n    }\n\n    function getContainerNode() {\n      return $container.get(0);\n    }\n\n    //////////////////////////////////////////////////////////////////////////////////////////////\n    // Rendering / Scrolling\n\n    function getRowTop(row) {\n      return options.rowHeight * row - offset;\n    }\n\n    function getRowFromPosition(y) {\n      return Math.floor((y + offset) / options.rowHeight);\n    }\n\n    function scrollTo(y) {\n      y = Math.max(y, 0);\n      y = Math.min(y, th - viewportH + (viewportHasHScroll ? scrollbarDimensions.height : 0));\n\n      var oldOffset = offset;\n\n      page = Math.min(n - 1, Math.floor(y / ph));\n      offset = Math.round(page * cj);\n      var newScrollTop = y - offset;\n\n      if (offset != oldOffset) {\n        var range = getVisibleRange(newScrollTop);\n        cleanupRows(range);\n        updateRowPositions();\n      }\n\n      if (prevScrollTop != newScrollTop) {\n        vScrollDir = (prevScrollTop + oldOffset < newScrollTop + offset) ? 1 : -1;\n        $viewport[0].scrollTop = (lastRenderedScrollTop = scrollTop = prevScrollTop = newScrollTop);\n\n        trigger(self.onViewportChanged, {});\n      }\n    }\n\n    function defaultFormatter(row, cell, value, columnDef, dataContext, grid) {\n      if (value == null) {\n        return \"\";\n      } else {\n        return (value + \"\").replace(/&/g,\"&amp;\").replace(/</g,\"&lt;\").replace(/>/g,\"&gt;\");\n      }\n    }\n\n    function getFormatter(row, column) {\n      var rowMetadata = data.getItemMetadata && data.getItemMetadata(row);\n\n      // look up by id, then index\n      var columnOverrides = rowMetadata &&\n          rowMetadata.columns &&\n          (rowMetadata.columns[column.id] || rowMetadata.columns[getColumnIndex(column.id)]);\n\n      return (columnOverrides && columnOverrides.formatter) ||\n          (rowMetadata && rowMetadata.formatter) ||\n          column.formatter ||\n          (options.formatterFactory && options.formatterFactory.getFormatter(column)) ||\n          options.defaultFormatter;\n    }\n\n    function getEditor(row, cell) {\n      var column = columns[cell];\n      var rowMetadata = data.getItemMetadata && data.getItemMetadata(row);\n      var columnMetadata = rowMetadata && rowMetadata.columns;\n\n      if (columnMetadata && columnMetadata[column.id] && columnMetadata[column.id].editor !== undefined) {\n        return columnMetadata[column.id].editor;\n      }\n      if (columnMetadata && columnMetadata[cell] && columnMetadata[cell].editor !== undefined) {\n        return columnMetadata[cell].editor;\n      }\n\n      return column.editor || (options.editorFactory && options.editorFactory.getEditor(column));\n    }\n\n    function getDataItemValueForColumn(item, columnDef) {\n      if (options.dataItemColumnValueExtractor) {\n        return options.dataItemColumnValueExtractor(item, columnDef);\n      }\n      return item[columnDef.field];\n    }\n\n    function appendRowHtml(stringArray, row, range, dataLength) {\n      var d = getDataItem(row);\n      var dataLoading = row < dataLength && !d;\n      var rowCss = \"slick-row\" +\n          (dataLoading ? \" loading\" : \"\") +\n          (row === activeRow && options.showCellSelection ? \" active\" : \"\") +\n          (row % 2 == 1 ? \" odd\" : \" even\");\n\n      if (!d) {\n        rowCss += \" \" + options.addNewRowCssClass;\n      }\n\n      var metadata = data.getItemMetadata && data.getItemMetadata(row);\n\n      if (metadata && metadata.cssClasses) {\n        rowCss += \" \" + metadata.cssClasses;\n      }\n\n      stringArray.push(\"<div class='ui-widget-content \" + rowCss + \"' style='top:\" + getRowTop(row) + \"px'>\");\n\n      var colspan, m;\n      for (var i = 0, ii = columns.length; i < ii; i++) {\n        m = columns[i];\n        colspan = 1;\n        if (metadata && metadata.columns) {\n          var columnData = metadata.columns[m.id] || metadata.columns[i];\n          colspan = (columnData && columnData.colspan) || 1;\n          if (colspan === \"*\") {\n            colspan = ii - i;\n          }\n        }\n\n        // Do not render cells outside of the viewport.\n        if (columnPosRight[Math.min(ii - 1, i + colspan - 1)] > range.leftPx) {\n          if (columnPosLeft[i] > range.rightPx) {\n            // All columns to the right are outside the range.\n            break;\n          }\n\n          appendCellHtml(stringArray, row, i, colspan, d);\n        }\n\n        if (colspan > 1) {\n          i += (colspan - 1);\n        }\n      }\n\n      stringArray.push(\"</div>\");\n    }\n\n    function appendCellHtml(stringArray, row, cell, colspan, item) {\n      // stringArray: stringBuilder containing the HTML parts\n      // row, cell: row and column index\n      // colspan: HTML colspan\n      // item: grid data for row\n\n      var m = columns[cell];\n      var cellCss = \"slick-cell l\" + cell + \" r\" + Math.min(columns.length - 1, cell + colspan - 1) +\n          (m.cssClass ? \" \" + m.cssClass : \"\");\n      if (row === activeRow && cell === activeCell && options.showCellSelection) {\n        cellCss += (\" active\");\n      }\n\n      // TODO:  merge them together in the setter\n      for (var key in cellCssClasses) {\n        if (cellCssClasses[key][row] && cellCssClasses[key][row][m.id]) {\n          cellCss += (\" \" + cellCssClasses[key][row][m.id]);\n        }\n      }\n\n      var value = null, formatterResult = '';\n      if (item) { \n        value = getDataItemValueForColumn(item, m);\n        formatterResult =  getFormatter(row, m)(row, cell, value, m, item, self);\n        if (formatterResult === null || formatterResult === undefined) { formatterResult = ''; }\n      }\n      \n      // get addl css class names from object type formatter return and from string type return of onBeforeAppendCell\n      var addlCssClasses = trigger(self.onBeforeAppendCell, { row: row, cell: cell, value: value, dataContext: item }) || '';\n      addlCssClasses += (formatterResult && formatterResult.addClasses ? (addlCssClasses ? ' ' : '') + formatterResult.addClasses : '');\n      \n      stringArray.push(\"<div class='\" + cellCss + (addlCssClasses ? ' ' + addlCssClasses : '') + \"'>\");\n\n      // if there is a corresponding row (if not, this is the Add New row or this data hasn't been loaded yet)\n      if (item) {\n        stringArray.push(Object.prototype.toString.call(formatterResult)  !== '[object Object]' ? formatterResult : formatterResult.text);\n      }\n\n      stringArray.push(\"</div>\");\n\n      rowsCache[row].cellRenderQueue.push(cell);\n      rowsCache[row].cellColSpans[cell] = colspan;\n    }\n\n\n    function cleanupRows(rangeToKeep) {\n      for (var i in rowsCache) {\n        if (((i = parseInt(i, 10)) !== activeRow) && (i < rangeToKeep.top || i > rangeToKeep.bottom)) {\n          removeRowFromCache(i);\n        }\n      }\n      if (options.enableAsyncPostRenderCleanup) { startPostProcessingCleanup(); }\n    }\n\n    function invalidate() {\n      updateRowCount();\n      invalidateAllRows();\n      render();\n    }\n\n    function invalidateAllRows() {\n      if (currentEditor) {\n        makeActiveCellNormal();\n      }\n      for (var row in rowsCache) {\n        removeRowFromCache(row);\n      }\n      if (options.enableAsyncPostRenderCleanup) { startPostProcessingCleanup(); }\n    }\n\n    function queuePostProcessedRowForCleanup(cacheEntry, postProcessedRow, rowIdx) {\n      postProcessgroupId++;\n\n      // store and detach node for later async cleanup\n      for (var columnIdx in postProcessedRow) {\n        if (postProcessedRow.hasOwnProperty(columnIdx)) {\n          postProcessedCleanupQueue.push({\n            actionType: 'C',\n            groupId: postProcessgroupId,\n            node: cacheEntry.cellNodesByColumnIdx[ columnIdx | 0],\n            columnIdx: columnIdx | 0,\n            rowIdx: rowIdx\n          });\n        }\n      }\n      postProcessedCleanupQueue.push({\n        actionType: 'R',\n        groupId: postProcessgroupId,\n        node: cacheEntry.rowNode\n      });\n      $(cacheEntry.rowNode).detach();\n    }\n\n    function queuePostProcessedCellForCleanup(cellnode, columnIdx, rowIdx) {\n      postProcessedCleanupQueue.push({\n        actionType: 'C',\n        groupId: postProcessgroupId,\n        node: cellnode,\n        columnIdx: columnIdx,\n        rowIdx: rowIdx\n      });\n      $(cellnode).detach();\n    }\n\n    function removeRowFromCache(row) {\n      var cacheEntry = rowsCache[row];\n      if (!cacheEntry) {\n        return;\n      }\n\n      if (cacheEntry.rowNode) {\n        if (rowNodeFromLastMouseWheelEvent === cacheEntry.rowNode) {\n          cacheEntry.rowNode.style.display = 'none';\n          zombieRowNodeFromLastMouseWheelEvent = rowNodeFromLastMouseWheelEvent;\n          zombieRowCacheFromLastMouseWheelEvent = cacheEntry;\n          zombieRowPostProcessedFromLastMouseWheelEvent = postProcessedRows[row];\n          // ignore post processing cleanup in this case - it will be dealt with later\n        } else {\n          if (options.enableAsyncPostRenderCleanup && postProcessedRows[row]) {\n            queuePostProcessedRowForCleanup(cacheEntry, postProcessedRows[row], row);\n          } else {\n            $canvas[0].removeChild(cacheEntry.rowNode);\n          }\n        }\n      }\n      \n      delete rowsCache[row];\n      delete postProcessedRows[row];\n      renderedRows--;\n      counter_rows_removed++;\n    }\n\n    function invalidateRows(rows) {\n      var i, rl;\n      if (!rows || !rows.length) {\n        return;\n      }\n      vScrollDir = 0;\n      rl = rows.length;\n      for (i = 0;  i < rl; i++) {\n        if (currentEditor && activeRow === rows[i]) {\n          makeActiveCellNormal();\n        }\n        if (rowsCache[rows[i]]) {\n          removeRowFromCache(rows[i]);\n        }\n      }\n      if (options.enableAsyncPostRenderCleanup) { startPostProcessingCleanup(); }\n    }\n\n    function invalidateRow(row) {\n      if (!row && row !== 0) { return; }\n      invalidateRows([row]);\n    }\n\n    function applyFormatResultToCellNode(formatterResult, cellNode, suppressRemove) {\n        if (formatterResult === null || formatterResult === undefined) { formatterResult = ''; }\n        if (Object.prototype.toString.call(formatterResult)  !== '[object Object]') { \n            cellNode.innerHTML = formatterResult;\n            return;\n        }\n        cellNode.innerHTML = formatterResult.text;\n        if (formatterResult.removeClasses && !suppressRemove) { \n            $(cellNode).removeClass(formatterResult.removeClasses); \n        }\n        if (formatterResult.addClasses) { \n            $(cellNode).addClass(formatterResult.addClasses); \n        }\n    }\n\n    function updateCell(row, cell) {\n      var cellNode = getCellNode(row, cell);\n      if (!cellNode) {\n        return;\n      }\n\n      var m = columns[cell], d = getDataItem(row);\n      if (currentEditor && activeRow === row && activeCell === cell) {\n        currentEditor.loadValue(d);\n      } else {\n        var formatterResult =  d ? getFormatter(row, m)(row, cell, getDataItemValueForColumn(d, m), m, d, self) : \"\";\n        applyFormatResultToCellNode(formatterResult, cellNode);\n        invalidatePostProcessingResults(row);\n      }\n    }\n\n    function updateRow(row) {\n      var cacheEntry = rowsCache[row];\n      if (!cacheEntry) {\n        return;\n      }\n\n      ensureCellNodesInRowsCache(row);\n\n      var formatterResult, d = getDataItem(row);\n\n      for (var columnIdx in cacheEntry.cellNodesByColumnIdx) {\n        if (!cacheEntry.cellNodesByColumnIdx.hasOwnProperty(columnIdx)) {\n          continue;\n        }\n\n        columnIdx = columnIdx | 0;\n        var m = columns[columnIdx],\n            node = cacheEntry.cellNodesByColumnIdx[columnIdx];\n\n        if (row === activeRow && columnIdx === activeCell && currentEditor) {\n          currentEditor.loadValue(d);\n        } else if (d) {\n          formatterResult =  getFormatter(row, m)(row, columnIdx, getDataItemValueForColumn(d, m), m, d, self);\n          applyFormatResultToCellNode(formatterResult, node);\n        } else {\n          node.innerHTML = \"\";\n        }\n      }\n\n      invalidatePostProcessingResults(row);\n    }\n\n    function getViewportHeight() {\n      return parseFloat($.css($container[0], \"height\", true)) -\n          parseFloat($.css($container[0], \"paddingTop\", true)) -\n          parseFloat($.css($container[0], \"paddingBottom\", true)) -\n          parseFloat($.css($headerScroller[0], \"height\")) - getVBoxDelta($headerScroller) -\n          (options.showTopPanel ? options.topPanelHeight + getVBoxDelta($topPanelScroller) : 0) -\n          (options.showHeaderRow ? options.headerRowHeight + getVBoxDelta($headerRowScroller) : 0) -\n          (options.createFooterRow && options.showFooterRow ? options.footerRowHeight + getVBoxDelta($footerRowScroller) : 0) -\n          (options.createPreHeaderPanel && options.showPreHeaderPanel ? options.preHeaderPanelHeight + getVBoxDelta($preHeaderPanelScroller) : 0);\n    }\n\n    function resizeCanvas() {\n      if (!initialized) { return; }\n      if (options.autoHeight) {\n        viewportH = options.rowHeight * getDataLengthIncludingAddNew();\n      } else {\n        viewportH = getViewportHeight();\n      }\n\n      numVisibleRows = Math.ceil(viewportH / options.rowHeight);\n      viewportW = parseFloat($.css($container[0], \"width\", true));\n      if (!options.autoHeight) {\n        $viewport.height(viewportH);\n      }\n\n      if (!scrollbarDimensions || !scrollbarDimensions.width) {\n        scrollbarDimensions = measureScrollbar();\n      }\n      \n      if (options.forceFitColumns) {\n        autosizeColumns();\n      }\n\n      updateRowCount();\n      handleScroll();\n      // Since the width has changed, force the render() to reevaluate virtually rendered cells.\n      lastRenderedScrollLeft = -1;\n      render();\n    }\n\n    function updatePagingStatusFromView( pagingInfo ) {\n        pagingActive = (pagingInfo.pageSize !== 0);\n        pagingIsLastPage = (pagingInfo.pageNum == pagingInfo.totalPages - 1);\n    }\n\n    function updateRowCount() {\n      if (!initialized) { return; }\n\n      var dataLength = getDataLength();\n      var dataLengthIncludingAddNew = getDataLengthIncludingAddNew();\n      var numberOfRows = dataLengthIncludingAddNew +\n          (options.leaveSpaceForNewRows ? numVisibleRows - 1 : 0);\n\n      var oldViewportHasVScroll = viewportHasVScroll;\n      // with autoHeight, we do not need to accommodate the vertical scroll bar\n      viewportHasVScroll = options.alwaysShowVerticalScroll || !options.autoHeight && (numberOfRows * options.rowHeight > viewportH);\n      viewportHasHScroll = (canvasWidth > viewportW - scrollbarDimensions.width);\n\n      makeActiveCellNormal();\n\n      // remove the rows that are now outside of the data range\n      // this helps avoid redundant calls to .removeRow() when the size of the data decreased by thousands of rows\n      var r1 = dataLength - 1;\n      for (var i in rowsCache) {\n        if (i > r1) {\n          removeRowFromCache(i);\n        }\n      }\n      if (options.enableAsyncPostRenderCleanup) { startPostProcessingCleanup(); }\n\n      if (activeCellNode && activeRow > r1) {\n        resetActiveCell();\n      }\n\n      var oldH = h;\n      th = Math.max(options.rowHeight * numberOfRows, viewportH - scrollbarDimensions.height);\n      if (th < maxSupportedCssHeight) {\n        // just one page\n        h = ph = th;\n        n = 1;\n        cj = 0;\n      } else {\n        // break into pages\n        h = maxSupportedCssHeight;\n        ph = h / 100;\n        n = Math.floor(th / ph);\n        cj = (th - h) / (n - 1);\n      }\n\n      if (h !== oldH) {\n        $canvas.css(\"height\", h);\n        scrollTop = $viewport[0].scrollTop;\n      }\n\n      var oldScrollTopInRange = (scrollTop + offset <= th - viewportH);\n\n      if (th == 0 || scrollTop == 0) {\n        page = offset = 0;\n      } else if (oldScrollTopInRange) {\n        // maintain virtual position\n        scrollTo(scrollTop + offset);\n      } else {\n        // scroll to bottom\n        scrollTo(th - viewportH);\n      }\n\n      if (h != oldH && options.autoHeight) {\n        resizeCanvas();\n      }\n\n      if (options.forceFitColumns && oldViewportHasVScroll != viewportHasVScroll) {\n        autosizeColumns();\n      }\n      updateCanvasWidth(false);\n    }\n\n    function getVisibleRange(viewportTop, viewportLeft) {\n      if (viewportTop == null) {\n        viewportTop = scrollTop;\n      }\n      if (viewportLeft == null) {\n        viewportLeft = scrollLeft;\n      }\n\n      return {\n        top: getRowFromPosition(viewportTop),\n        bottom: getRowFromPosition(viewportTop + viewportH) + 1,\n        leftPx: viewportLeft,\n        rightPx: viewportLeft + viewportW\n      };\n    }\n\n    function getRenderedRange(viewportTop, viewportLeft) {\n      var range = getVisibleRange(viewportTop, viewportLeft);\n      var buffer = Math.round(viewportH / options.rowHeight);\n      var minBuffer = options.minRowBuffer;\n\n      if (vScrollDir == -1) {\n        range.top -= buffer;\n        range.bottom += minBuffer;\n      } else if (vScrollDir == 1) {\n        range.top -= minBuffer;\n        range.bottom += buffer;\n      } else {\n        range.top -= minBuffer;\n        range.bottom += minBuffer;\n      }\n\n      range.top = Math.max(0, range.top);\n      range.bottom = Math.min(getDataLengthIncludingAddNew() - 1, range.bottom);\n\n      range.leftPx -= viewportW;\n      range.rightPx += viewportW;\n\n      range.leftPx = Math.max(0, range.leftPx);\n      range.rightPx = Math.min(canvasWidth, range.rightPx);\n\n      return range;\n    }\n\n    function ensureCellNodesInRowsCache(row) {\n      var cacheEntry = rowsCache[row];\n      if (cacheEntry) {\n        if (cacheEntry.cellRenderQueue.length) {\n          var lastChild = cacheEntry.rowNode.lastChild;\n          while (cacheEntry.cellRenderQueue.length) {\n            var columnIdx = cacheEntry.cellRenderQueue.pop();\n            cacheEntry.cellNodesByColumnIdx[columnIdx] = lastChild;\n            lastChild = lastChild.previousSibling;\n          }\n        }\n      }\n    }\n\n    function cleanUpCells(range, row) {\n      var totalCellsRemoved = 0;\n      var cacheEntry = rowsCache[row];\n\n      // Remove cells outside the range.\n      var cellsToRemove = [];\n      for (var i in cacheEntry.cellNodesByColumnIdx) {\n        // I really hate it when people mess with Array.prototype.\n        if (!cacheEntry.cellNodesByColumnIdx.hasOwnProperty(i)) {\n          continue;\n        }\n\n        // This is a string, so it needs to be cast back to a number.\n        i = i | 0;\n\n        var colspan = cacheEntry.cellColSpans[i];\n        if (columnPosLeft[i] > range.rightPx ||\n          columnPosRight[Math.min(columns.length - 1, i + colspan - 1)] < range.leftPx) {\n          if (!(row == activeRow && i == activeCell)) {\n            cellsToRemove.push(i);\n          }\n        }\n      }\n\n      var cellToRemove, node;\n      postProcessgroupId++;\n      while ((cellToRemove = cellsToRemove.pop()) != null) {\n        node = cacheEntry.cellNodesByColumnIdx[cellToRemove];\n        if (options.enableAsyncPostRenderCleanup && postProcessedRows[row] && postProcessedRows[row][cellToRemove]) {\n          queuePostProcessedCellForCleanup(node, cellToRemove, row);\n        } else {\n          cacheEntry.rowNode.removeChild(node);\n        }\n\n        delete cacheEntry.cellColSpans[cellToRemove];\n        delete cacheEntry.cellNodesByColumnIdx[cellToRemove];\n        if (postProcessedRows[row]) {\n          delete postProcessedRows[row][cellToRemove];\n        }\n        totalCellsRemoved++;\n      }\n    }\n\n    function cleanUpAndRenderCells(range) {\n      var cacheEntry;\n      var stringArray = [];\n      var processedRows = [];\n      var cellsAdded;\n      var totalCellsAdded = 0;\n      var colspan;\n\n      for (var row = range.top, btm = range.bottom; row <= btm; row++) {\n        cacheEntry = rowsCache[row];\n        if (!cacheEntry) {\n          continue;\n        }\n\n        // cellRenderQueue populated in renderRows() needs to be cleared first\n        ensureCellNodesInRowsCache(row);\n\n        cleanUpCells(range, row);\n\n        // Render missing cells.\n        cellsAdded = 0;\n\n        var metadata = data.getItemMetadata && data.getItemMetadata(row);\n        metadata = metadata && metadata.columns;\n\n        var d = getDataItem(row);\n\n        // TODO:  shorten this loop (index? heuristics? binary search?)\n        for (var i = 0, ii = columns.length; i < ii; i++) {\n          // Cells to the right are outside the range.\n          if (columnPosLeft[i] > range.rightPx) {\n            break;\n          }\n\n          // Already rendered.\n          if ((colspan = cacheEntry.cellColSpans[i]) != null) {\n            i += (colspan > 1 ? colspan - 1 : 0);\n            continue;\n          }\n\n          colspan = 1;\n          if (metadata) {\n            var columnData = metadata[columns[i].id] || metadata[i];\n            colspan = (columnData && columnData.colspan) || 1;\n            if (colspan === \"*\") {\n              colspan = ii - i;\n            }\n          }\n\n          if (columnPosRight[Math.min(ii - 1, i + colspan - 1)] > range.leftPx) {\n            appendCellHtml(stringArray, row, i, colspan, d);\n            cellsAdded++;\n          }\n\n          i += (colspan > 1 ? colspan - 1 : 0);\n        }\n\n        if (cellsAdded) {\n          totalCellsAdded += cellsAdded;\n          processedRows.push(row);\n        }\n      }\n\n      if (!stringArray.length) {\n        return;\n      }\n\n      var x = document.createElement(\"div\");\n      x.innerHTML = stringArray.join(\"\");\n\n      var processedRow;\n      var node;\n      while ((processedRow = processedRows.pop()) != null) {\n        cacheEntry = rowsCache[processedRow];\n        var columnIdx;\n        while ((columnIdx = cacheEntry.cellRenderQueue.pop()) != null) {\n          node = x.lastChild;\n          cacheEntry.rowNode.appendChild(node);\n          cacheEntry.cellNodesByColumnIdx[columnIdx] = node;\n        }\n      }\n    }\n\n    function renderRows(range) {\n      var parentNode = $canvas[0],\n          stringArray = [],\n          rows = [],\n          needToReselectCell = false,\n          dataLength = getDataLength();\n\n      for (var i = range.top, ii = range.bottom; i <= ii; i++) {\n        if (rowsCache[i]) {\n          continue;\n        }\n        renderedRows++;\n        rows.push(i);\n\n        // Create an entry right away so that appendRowHtml() can\n        // start populatating it.\n        rowsCache[i] = {\n          \"rowNode\": null,\n\n          // ColSpans of rendered cells (by column idx).\n          // Can also be used for checking whether a cell has been rendered.\n          \"cellColSpans\": [],\n\n          // Cell nodes (by column idx).  Lazy-populated by ensureCellNodesInRowsCache().\n          \"cellNodesByColumnIdx\": [],\n\n          // Column indices of cell nodes that have been rendered, but not yet indexed in\n          // cellNodesByColumnIdx.  These are in the same order as cell nodes added at the\n          // end of the row.\n          \"cellRenderQueue\": []\n        };\n\n        appendRowHtml(stringArray, i, range, dataLength);\n        if (activeCellNode && activeRow === i) {\n          needToReselectCell = true;\n        }\n        counter_rows_rendered++;\n      }\n\n      if (!rows.length) { return; }\n\n      var x = document.createElement(\"div\");\n      x.innerHTML = stringArray.join(\"\");\n\n      for (var i = 0, ii = rows.length; i < ii; i++) {\n        rowsCache[rows[i]].rowNode = parentNode.appendChild(x.firstChild);\n      }\n\n      if (needToReselectCell) {\n        activeCellNode = getCellNode(activeRow, activeCell);\n      }\n    }\n\n    function startPostProcessing() {\n      if (!options.enableAsyncPostRender) {\n        return;\n      }\n      clearTimeout(h_postrender);\n      h_postrender = setTimeout(asyncPostProcessRows, options.asyncPostRenderDelay);\n    }\n\n    function startPostProcessingCleanup() {\n      if (!options.enableAsyncPostRenderCleanup) {\n        return;\n      }\n      clearTimeout(h_postrenderCleanup);\n      h_postrenderCleanup = setTimeout(asyncPostProcessCleanupRows, options.asyncPostRenderCleanupDelay);\n    }\n\n    function invalidatePostProcessingResults(row) {\n      // change status of columns to be re-rendered\n      for (var columnIdx in postProcessedRows[row]) {\n        if (postProcessedRows[row].hasOwnProperty(columnIdx)) {\n          postProcessedRows[row][columnIdx] = 'C';\n        }\n      }\n      postProcessFromRow = Math.min(postProcessFromRow, row);\n      postProcessToRow = Math.max(postProcessToRow, row);\n      startPostProcessing();\n    }\n\n    function updateRowPositions() {\n      for (var row in rowsCache) {\n        rowsCache[row].rowNode.style.top = getRowTop(row) + \"px\";\n      }\n    }\n\n    function render() {\n      if (!initialized) { return; }\n      \n      scrollThrottle.dequeue();\n      \n      var visible = getVisibleRange();\n      var rendered = getRenderedRange();\n\n      // remove rows no longer in the viewport\n      cleanupRows(rendered);\n\n      // add new rows & missing cells in existing rows\n      if (lastRenderedScrollLeft != scrollLeft) {\n        cleanUpAndRenderCells(rendered);\n      }\n\n      // render missing rows\n      renderRows(rendered);\n\n      postProcessFromRow = visible.top;\n      postProcessToRow = Math.min(getDataLengthIncludingAddNew() - 1, visible.bottom);\n      startPostProcessing();\n\n      lastRenderedScrollTop = scrollTop;\n      lastRenderedScrollLeft = scrollLeft;\n      h_render = null;\n      trigger(self.onRendered, { startRow: visible.top, endRow: visible.bottom, grid: self });\n    }\n\n    function handleHeaderScroll() {\n      handleElementScroll($headerScroller[0]);\n    }\n\n    function handleHeaderRowScroll() {\n      handleElementScroll($headerRowScroller[0]);\n    }\n\n    function handleFooterRowScroll() {\n      handleElementScroll($footerRowScroller[0]);\n    }\n\n    function handlePreHeaderPanelScroll() {\n      handleElementScroll($preHeaderPanelScroller[0]);\n    }\n\n    function handleElementScroll(element) {\n      var scrollLeft = element.scrollLeft;\n      if (scrollLeft != $viewport[0].scrollLeft) {\n        $viewport[0].scrollLeft = scrollLeft;\n      }\n    }\n\n    function handleScroll() {\n      scrollTop = $viewport[0].scrollTop;\n      scrollLeft = $viewport[0].scrollLeft;\n      var vScrollDist = Math.abs(scrollTop - prevScrollTop);\n      var hScrollDist = Math.abs(scrollLeft - prevScrollLeft);\n\n      if (hScrollDist) {\n        prevScrollLeft = scrollLeft;\n        $headerScroller[0].scrollLeft = scrollLeft;\n        $topPanelScroller[0].scrollLeft = scrollLeft;\n        $headerRowScroller[0].scrollLeft = scrollLeft;\n        if (options.createFooterRow) {\n          $footerRowScroller[0].scrollLeft = scrollLeft;\n        }\n        if (options.createPreHeaderPanel) {\n          $preHeaderPanelScroller[0].scrollLeft = scrollLeft;\n        }\n      }\n\n      if (vScrollDist) {\n        vScrollDir = prevScrollTop < scrollTop ? 1 : -1;\n        prevScrollTop = scrollTop;\n\n        // switch virtual pages if needed\n        if (vScrollDist < viewportH) {\n          scrollTo(scrollTop + offset);\n        } else {\n          var oldOffset = offset;\n          if (h == viewportH) {\n            page = 0;\n          } else {\n            page = Math.min(n - 1, Math.floor(scrollTop * ((th - viewportH) / (h - viewportH)) * (1 / ph)));\n          }\n          offset = Math.round(page * cj);\n          if (oldOffset != offset) {\n            invalidateAllRows();\n          }\n        }\n      }\n\n      if (hScrollDist || vScrollDist) {\n        var dx = Math.abs(lastRenderedScrollLeft - scrollLeft);\n        var dy = Math.abs(lastRenderedScrollTop - scrollTop);\n        if (dx > 20 || dy > 20) {\n          // if rendering is forced or scrolling is small enough to be \"easy\", just render\n          if (options.forceSyncScrolling || (dy < viewportH && dx < viewportW)) {\n            render();\n          } else {\n            // otherwise, perform \"difficult\" renders at a capped frequency\n            scrollThrottle.enqueue();\n          }\n\n          trigger(self.onViewportChanged, {});\n        }\n      }\n\n      trigger(self.onScroll, {scrollLeft: scrollLeft, scrollTop: scrollTop});\n    }\n\n    /*\n    limits the frequency at which the provided action is executed.\n    call enqueue to execute the action - it will execute either immediately or, if it was executed less than minPeriod_ms in the past, as soon as minPeriod_ms has expired.\n    call dequeue to cancel any pending action.\n    */\n    function ActionThrottle(action, minPeriod_ms) {\n\n      var blocked = false;\n      var queued = false;\n\n      function enqueue() {\n        if (!blocked) {\n          blockAndExecute();\n        } else {\n          queued = true;\n        }\n      }\n\n      function dequeue() {\n        queued = false;\n      }\n\n      function blockAndExecute() {\n        blocked = true;\n        setTimeout(unblock, minPeriod_ms);\n        action();\n      }\n\n      function unblock() {\n        if (queued) {\n          dequeue();\n          blockAndExecute();\n        } else {\n          blocked = false;\n        }\n      }\n\n      return {\n        enqueue: enqueue,\n        dequeue: dequeue\n      }\n    }    \n    \n    function asyncPostProcessRows() {\n      var dataLength = getDataLength();\n      while (postProcessFromRow <= postProcessToRow) {\n        var row = (vScrollDir >= 0) ? postProcessFromRow++ : postProcessToRow--;\n        var cacheEntry = rowsCache[row];\n        if (!cacheEntry || row >= dataLength) {\n          continue;\n        }\n\n        if (!postProcessedRows[row]) {\n          postProcessedRows[row] = {};\n        }\n\n        ensureCellNodesInRowsCache(row);\n        for (var columnIdx in cacheEntry.cellNodesByColumnIdx) {\n          if (!cacheEntry.cellNodesByColumnIdx.hasOwnProperty(columnIdx)) {\n            continue;\n          }\n\n          columnIdx = columnIdx | 0;\n\n          var m = columns[columnIdx];\n          var processedStatus = postProcessedRows[row][columnIdx]; // C=cleanup and re-render, R=rendered\n          if (m.asyncPostRender && processedStatus !== 'R') {\n            var node = cacheEntry.cellNodesByColumnIdx[columnIdx];\n            if (node) {\n              m.asyncPostRender(node, row, getDataItem(row), m, (processedStatus === 'C'));\n            }\n            postProcessedRows[row][columnIdx] = 'R';\n          }\n        }\n\n        h_postrender = setTimeout(asyncPostProcessRows, options.asyncPostRenderDelay);\n        return;\n      }\n    }\n\n    function asyncPostProcessCleanupRows() {\n      if (postProcessedCleanupQueue.length > 0) {\n        var groupId = postProcessedCleanupQueue[0].groupId;\n\n        // loop through all queue members with this groupID\n        while (postProcessedCleanupQueue.length > 0 && postProcessedCleanupQueue[0].groupId == groupId) {\n          var entry = postProcessedCleanupQueue.shift();\n          if (entry.actionType == 'R') {\n            $(entry.node).remove();\n          }\n          if (entry.actionType == 'C') {\n            var column = columns[entry.columnIdx];\n            if (column.asyncPostRenderCleanup && entry.node) {\n              // cleanup must also remove element\n              column.asyncPostRenderCleanup(entry.node, entry.rowIdx, column);\n            }\n          }\n        }\n\n        // call this function again after the specified delay\n        h_postrenderCleanup = setTimeout(asyncPostProcessCleanupRows, options.asyncPostRenderCleanupDelay);\n      }\n    }\n\n    function updateCellCssStylesOnRenderedRows(addedHash, removedHash) {\n      var node, columnId, addedRowHash, removedRowHash;\n      for (var row in rowsCache) {\n        removedRowHash = removedHash && removedHash[row];\n        addedRowHash = addedHash && addedHash[row];\n\n        if (removedRowHash) {\n          for (columnId in removedRowHash) {\n            if (!addedRowHash || removedRowHash[columnId] != addedRowHash[columnId]) {\n              node = getCellNode(row, getColumnIndex(columnId));\n              if (node) {\n                $(node).removeClass(removedRowHash[columnId]);\n              }\n            }\n          }\n        }\n\n        if (addedRowHash) {\n          for (columnId in addedRowHash) {\n            if (!removedRowHash || removedRowHash[columnId] != addedRowHash[columnId]) {\n              node = getCellNode(row, getColumnIndex(columnId));\n              if (node) {\n                $(node).addClass(addedRowHash[columnId]);\n              }\n            }\n          }\n        }\n      }\n    }\n\n    function addCellCssStyles(key, hash) {\n      if (cellCssClasses[key]) {\n        throw new Error(\"addCellCssStyles: cell CSS hash with key '\" + key + \"' already exists.\");\n      }\n\n      cellCssClasses[key] = hash;\n      updateCellCssStylesOnRenderedRows(hash, null);\n\n      trigger(self.onCellCssStylesChanged, { \"key\": key, \"hash\": hash, \"grid\": self });\n    }\n\n    function removeCellCssStyles(key) {\n      if (!cellCssClasses[key]) {\n        return;\n      }\n\n      updateCellCssStylesOnRenderedRows(null, cellCssClasses[key]);\n      delete cellCssClasses[key];\n\n      trigger(self.onCellCssStylesChanged, { \"key\": key, \"hash\": null, \"grid\": self });\n    }\n\n    function setCellCssStyles(key, hash) {\n      var prevHash = cellCssClasses[key];\n\n      cellCssClasses[key] = hash;\n      updateCellCssStylesOnRenderedRows(hash, prevHash);\n\n      trigger(self.onCellCssStylesChanged, { \"key\": key, \"hash\": hash, \"grid\": self });\n    }\n\n    function getCellCssStyles(key) {\n      return cellCssClasses[key];\n    }\n\n    function flashCell(row, cell, speed) {\n      speed = speed || 100;\n      if (rowsCache[row]) {\n        var $cell = $(getCellNode(row, cell));\n\n        var toggleCellClass = function(times) {\n          if (!times) {\n            return;\n          }\n          setTimeout(function () {\n                $cell.queue(function () {\n                  $cell.toggleClass(options.cellFlashingCssClass).dequeue();\n                  toggleCellClass(times - 1);\n                });\n              },\n              speed);\n        }\n\n        toggleCellClass(4);\n      }\n    }\n\n    //////////////////////////////////////////////////////////////////////////////////////////////\n    // Interactivity\n\n    function handleMouseWheel(e) {\n      var rowNode = $(e.target).closest(\".slick-row\")[0];\n      if (rowNode != rowNodeFromLastMouseWheelEvent) {\n        if (zombieRowNodeFromLastMouseWheelEvent && zombieRowNodeFromLastMouseWheelEvent != rowNode) {\n          if (options.enableAsyncPostRenderCleanup && zombieRowPostProcessedFromLastMouseWheelEvent) {\n            queuePostProcessedRowForCleanup(zombieRowCacheFromLastMouseWheelEvent,\n              zombieRowPostProcessedFromLastMouseWheelEvent);\n          } else {\n            $canvas[0].removeChild(zombieRowNodeFromLastMouseWheelEvent);\n          }\n          zombieRowNodeFromLastMouseWheelEvent = null;\n          zombieRowCacheFromLastMouseWheelEvent = null;\n          zombieRowPostProcessedFromLastMouseWheelEvent = null;\n\n          if (options.enableAsyncPostRenderCleanup) { startPostProcessingCleanup(); }\n        }\n        rowNodeFromLastMouseWheelEvent = rowNode;\n      }\n    }\n\n    function handleDragInit(e, dd) {\n      var cell = getCellFromEvent(e);\n      if (!cell || !cellExists(cell.row, cell.cell)) {\n        return false;\n      }\n\n      var retval = trigger(self.onDragInit, dd, e);\n      if (e.isImmediatePropagationStopped()) {\n        return retval;\n      }\n\n      // if nobody claims to be handling drag'n'drop by stopping immediate propagation,\n      // cancel out of it\n      return false;\n    }\n\n    function handleDragStart(e, dd) {\n      var cell = getCellFromEvent(e);\n      if (!cell || !cellExists(cell.row, cell.cell)) {\n        return false;\n      }\n\n      var retval = trigger(self.onDragStart, dd, e);\n      if (e.isImmediatePropagationStopped()) {\n        return retval;\n      }\n\n      return false;\n    }\n\n    function handleDrag(e, dd) {\n      return trigger(self.onDrag, dd, e);\n    }\n\n    function handleDragEnd(e, dd) {\n      trigger(self.onDragEnd, dd, e);\n    }\n\n    function handleKeyDown(e) {\n      trigger(self.onKeyDown, {row: activeRow, cell: activeCell}, e);\n      var handled = e.isImmediatePropagationStopped();\n      var keyCode = Slick.keyCode;\n\n      if (!handled) {\n         if (!e.shiftKey && !e.altKey) {\n            if (options.editable && currentEditor && currentEditor.keyCaptureList) {\n               if (currentEditor.keyCaptureList.indexOf(e.which) > -1) {\n                  return;\n               }\n            }\n            if (e.which == keyCode.HOME) {\n               handled = (e.ctrlKey) ? navigateTop() : navigateRowStart();\n            } else if (e.which == keyCode.END) {\n               handled = (e.ctrlKey) ? navigateBottom() : navigateRowEnd();\n            }\n         }\n      }\n      if (!handled) {\n        if (!e.shiftKey && !e.altKey && !e.ctrlKey) {\n          // editor may specify an array of keys to bubble\n          if (options.editable && currentEditor && currentEditor.keyCaptureList) {\n            if (currentEditor.keyCaptureList.indexOf( e.which ) > -1) {\n                return;\n            }\n          }\n          if (e.which == keyCode.ESCAPE) {\n            if (!getEditorLock().isActive()) {\n              return; // no editing mode to cancel, allow bubbling and default processing (exit without cancelling the event)\n            }\n            cancelEditAndSetFocus();\n          } else if (e.which == keyCode.PAGE_DOWN) {\n            navigatePageDown();\n            handled = true;\n          } else if (e.which == keyCode.PAGE_UP) {\n            navigatePageUp();\n            handled = true;\n          } else if (e.which == keyCode.LEFT) {\n            handled = navigateLeft();\n          } else if (e.which == keyCode.RIGHT) {\n            handled = navigateRight();\n          } else if (e.which == keyCode.UP) {\n            handled = navigateUp();\n          } else if (e.which == keyCode.DOWN) {\n            handled = navigateDown();\n          } else if (e.which == keyCode.TAB) {\n            handled = navigateNext();\n          } else if (e.which == keyCode.ENTER) {\n            if (options.editable) {\n              if (currentEditor) {\n                // adding new row\n                if (activeRow === getDataLength()) {\n                  navigateDown();\n                } else {\n                  commitEditAndSetFocus();\n                }\n              } else {\n                if (getEditorLock().commitCurrentEdit()) {\n                  makeActiveCellEditable(undefined, undefined, e);\n                }\n              }\n            }\n            handled = true;\n          }\n        } else if (e.which == keyCode.TAB && e.shiftKey && !e.ctrlKey && !e.altKey) {\n          handled = navigatePrev();\n        }\n      }\n\n      if (handled) {\n        // the event has been handled so don't let parent element (bubbling/propagation) or browser (default) handle it\n        e.stopPropagation();\n        e.preventDefault();\n        try {\n          e.originalEvent.keyCode = 0; // prevent default behaviour for special keys in IE browsers (F3, F5, etc.)\n        }\n        // ignore exceptions - setting the original event's keycode throws access denied exception for \"Ctrl\"\n        // (hitting control key only, nothing else), \"Shift\" (maybe others)\n        catch (error) {\n        }\n      }\n    }\n\n    function handleClick(e) {\n      if (!currentEditor) {\n        // if this click resulted in some cell child node getting focus,\n        // don't steal it back - keyboard events will still bubble up\n        // IE9+ seems to default DIVs to tabIndex=0 instead of -1, so check for cell clicks directly.\n        if (e.target != document.activeElement || $(e.target).hasClass(\"slick-cell\")) {\n          setFocus();\n        }\n      }\n\n      var cell = getCellFromEvent(e);\n      if (!cell || (currentEditor !== null && activeRow == cell.row && activeCell == cell.cell)) {\n        return;\n      }\n\n      trigger(self.onClick, {row: cell.row, cell: cell.cell}, e);\n      if (e.isImmediatePropagationStopped()) {\n        return;\n      }\n\n      // this optimisation causes trouble - MLeibman #329\n      //if ((activeCell != cell.cell || activeRow != cell.row) && canCellBeActive(cell.row, cell.cell)) {\n      if (canCellBeActive(cell.row, cell.cell)) {\n        if (!getEditorLock().isActive() || getEditorLock().commitCurrentEdit()) {\n          scrollRowIntoView(cell.row, false);\n\n          var preClickModeOn = (e.target && e.target.className === Slick.preClickClassName);\n          var column = columns[cell.cell];\n          var suppressActiveCellChangedEvent = (options.editable && column && column.editor && options.suppressActiveCellChangeOnEdit) ? true : false;\n          setActiveCellInternal(getCellNode(cell.row, cell.cell), null, preClickModeOn, suppressActiveCellChangedEvent, e);\n        }\n      }\n    }\n\n    function handleContextMenu(e) {\n      var $cell = $(e.target).closest(\".slick-cell\", $canvas);\n      if ($cell.length === 0) {\n        return;\n      }\n\n      // are we editing this cell?\n      if (activeCellNode === $cell[0] && currentEditor !== null) {\n        return;\n      }\n\n      trigger(self.onContextMenu, {}, e);\n    }\n\n    function handleDblClick(e) {\n      var cell = getCellFromEvent(e);\n      if (!cell || (currentEditor !== null && activeRow == cell.row && activeCell == cell.cell)) {\n        return;\n      }\n\n      trigger(self.onDblClick, {row: cell.row, cell: cell.cell}, e);\n      if (e.isImmediatePropagationStopped()) {\n        return;\n      }\n\n      if (options.editable) {\n        gotoCell(cell.row, cell.cell, true, e);\n      }\n    }\n\n    function handleHeaderMouseEnter(e) {\n      trigger(self.onHeaderMouseEnter, {\n        \"column\": $(this).data(\"column\"),\n        \"grid\": self\n      }, e);\n    }\n\n    function handleHeaderMouseLeave(e) {\n      trigger(self.onHeaderMouseLeave, {\n        \"column\": $(this).data(\"column\"),\n        \"grid\": self\n      }, e);\n    }\n\n    function handleHeaderContextMenu(e) {\n      var $header = $(e.target).closest(\".slick-header-column\", \".slick-header-columns\");\n      var column = $header && $header.data(\"column\");\n      trigger(self.onHeaderContextMenu, {column: column}, e);\n    }\n\n    function handleHeaderClick(e) {\n      if (columnResizeDragging) return;\n      var $header = $(e.target).closest(\".slick-header-column\", \".slick-header-columns\");\n      var column = $header && $header.data(\"column\");\n      if (column) {\n        trigger(self.onHeaderClick, {column: column}, e);\n      }\n    }\n\n    function handleMouseEnter(e) {\n      trigger(self.onMouseEnter, {}, e);\n    }\n\n    function handleMouseLeave(e) {\n      trigger(self.onMouseLeave, {}, e);\n    }\n\n    function cellExists(row, cell) {\n      return !(row < 0 || row >= getDataLength() || cell < 0 || cell >= columns.length);\n    }\n\n    function getCellFromPoint(x, y) {\n      var row = getRowFromPosition(y);\n      var cell = 0;\n\n      var w = 0;\n      for (var i = 0; i < columns.length && w < x; i++) {\n        w += columns[i].width;\n        cell++;\n      }\n\n      if (cell < 0) {\n        cell = 0;\n      }\n\n      return {row: row, cell: cell - 1};\n    }\n\n    function getCellFromNode(cellNode) {\n      // read column number from .l<columnNumber> CSS class\n      var cls = /l\\d+/.exec(cellNode.className);\n      if (!cls) {\n        throw new Error(\"getCellFromNode: cannot get cell - \" + cellNode.className);\n      }\n      return parseInt(cls[0].substr(1, cls[0].length - 1), 10);\n    }\n\n    function getRowFromNode(rowNode) {\n      for (var row in rowsCache) {\n        if (rowsCache[row].rowNode === rowNode) {\n          return row | 0;\n        }\n      }\n\n      return null;\n    }\n\n    function getCellFromEvent(e) {\n      var $cell = $(e.target).closest(\".slick-cell\", $canvas);\n      if (!$cell.length) {\n        return null;\n      }\n\n      var row = getRowFromNode($cell[0].parentNode);\n      var cell = getCellFromNode($cell[0]);\n\n      if (row == null || cell == null) {\n        return null;\n      } else {\n        return {\n          \"row\": row,\n          \"cell\": cell\n        };\n      }\n    }\n\n    function getCellNodeBox(row, cell) {\n      if (!cellExists(row, cell)) {\n        return null;\n      }\n\n      var y1 = getRowTop(row);\n      var y2 = y1 + options.rowHeight - 1;\n      var x1 = 0;\n      for (var i = 0; i < cell; i++) {\n        x1 += columns[i].width;\n      }\n      var x2 = x1 + columns[cell].width;\n\n      return {\n        top: y1,\n        left: x1,\n        bottom: y2,\n        right: x2\n      };\n    }\n\n    //////////////////////////////////////////////////////////////////////////////////////////////\n    // Cell switching\n\n    function resetActiveCell() {\n      setActiveCellInternal(null, false);\n    }\n\n    function setFocus() {\n      if (tabbingDirection == -1) {\n        $focusSink[0].focus();\n      } else {\n        $focusSink2[0].focus();\n      }\n    }\n\n    function scrollCellIntoView(row, cell, doPaging) {\n      scrollRowIntoView(row, doPaging);\n\n      var colspan = getColspan(row, cell);\n      internalScrollColumnIntoView(columnPosLeft[cell], columnPosRight[cell + (colspan > 1 ? colspan - 1 : 0)]);\n    }\n\n    function internalScrollColumnIntoView(left, right) {\n      var scrollRight = scrollLeft + viewportW;\n\n      if (left < scrollLeft) {\n        $viewport.scrollLeft(left);\n        handleScroll();\n        render();\n      } else if (right > scrollRight) {\n        $viewport.scrollLeft(Math.min(left, right - $viewport[0].clientWidth));\n        handleScroll();\n        render();\n      }\n    }\n\n    function scrollColumnIntoView(cell) {\n      internalScrollColumnIntoView(columnPosLeft[cell], columnPosRight[cell]);\n    }\n\n    function setActiveCellInternal(newCell, opt_editMode, preClickModeOn, suppressActiveCellChangedEvent, e) {\n      if (activeCellNode !== null) {\n        makeActiveCellNormal();\n        $(activeCellNode).removeClass(\"active\");\n        if (rowsCache[activeRow]) {\n          $(rowsCache[activeRow].rowNode).removeClass(\"active\");\n        }\n      }\n\n      var activeCellChanged = (activeCellNode !== newCell);\n      activeCellNode = newCell;\n\n      if (activeCellNode != null) {\n        activeRow = getRowFromNode(activeCellNode.parentNode);\n        activeCell = activePosX = getCellFromNode(activeCellNode);\n\n        if (opt_editMode == null) {\n          opt_editMode = (activeRow == getDataLength()) || options.autoEdit;\n        }\n\n        if (options.showCellSelection) {\n        $(activeCellNode).addClass(\"active\");\n        $(rowsCache[activeRow].rowNode).addClass(\"active\");\n        }\n\n        if (options.editable && opt_editMode && isCellPotentiallyEditable(activeRow, activeCell)) {\n          clearTimeout(h_editorLoader);\n\n          if (options.asyncEditorLoading) {\n            h_editorLoader = setTimeout(function () {\n              makeActiveCellEditable(undefined, preClickModeOn, e);\n            }, options.asyncEditorLoadDelay);\n          } else {\n            makeActiveCellEditable(undefined, preClickModeOn, e);\n          }\n        }\n      } else {\n        activeRow = activeCell = null;\n      }\n\n      // this optimisation causes trouble - MLeibman #329\n      //if (activeCellChanged) {\n      if (!suppressActiveCellChangedEvent) { trigger(self.onActiveCellChanged, getActiveCell()); }\n      //}\n    }\n\n    function clearTextSelection() {\n      if (document.selection && document.selection.empty) {\n        try {\n          //IE fails here if selected element is not in dom\n          document.selection.empty();\n        } catch (e) { }\n      } else if (window.getSelection) {\n        var sel = window.getSelection();\n        if (sel && sel.removeAllRanges) {\n          sel.removeAllRanges();\n        }\n      }\n    }\n\n    function isCellPotentiallyEditable(row, cell) {\n      var dataLength = getDataLength();\n      // is the data for this row loaded?\n      if (row < dataLength && !getDataItem(row)) {\n        return false;\n      }\n\n      // are we in the Add New row?  can we create new from this cell?\n      if (columns[cell].cannotTriggerInsert && row >= dataLength) {\n        return false;\n      }\n\n      // does this cell have an editor?\n      if (!getEditor(row, cell)) {\n        return false;\n      }\n\n      return true;\n    }\n\n    function makeActiveCellNormal() {\n      if (!currentEditor) {\n        return;\n      }\n      trigger(self.onBeforeCellEditorDestroy, {editor: currentEditor});\n      currentEditor.destroy();\n      currentEditor = null;\n\n      if (activeCellNode) {\n        var d = getDataItem(activeRow);\n        $(activeCellNode).removeClass(\"editable invalid\");\n        if (d) {\n          var column = columns[activeCell];\n          var formatter = getFormatter(activeRow, column);\n          var formatterResult =  formatter(activeRow, activeCell, getDataItemValueForColumn(d, column), column, d, self);\n          applyFormatResultToCellNode(formatterResult, activeCellNode);\n          invalidatePostProcessingResults(activeRow);\n        }\n      }\n\n      // if there previously was text selected on a page (such as selected text in the edit cell just removed),\n      // IE can't set focus to anything else correctly\n      if (navigator.userAgent.toLowerCase().match(/msie/)) {\n        clearTextSelection();\n      }\n\n      getEditorLock().deactivate(editController);\n    }\n\n    function makeActiveCellEditable(editor, preClickModeOn, e) {\n      if (!activeCellNode) {\n        return;\n      }\n      if (!options.editable) {\n        throw new Error(\"Grid : makeActiveCellEditable : should never get called when options.editable is false\");\n      }\n\n      // cancel pending async call if there is one\n      clearTimeout(h_editorLoader);\n\n      if (!isCellPotentiallyEditable(activeRow, activeCell)) {\n        return;\n      }\n\n      var columnDef = columns[activeCell];\n      var item = getDataItem(activeRow);\n\n      if (trigger(self.onBeforeEditCell, {row: activeRow, cell: activeCell, item: item, column: columnDef}) === false) {\n        setFocus();\n        return;\n      }\n\n      getEditorLock().activate(editController);\n      $(activeCellNode).addClass(\"editable\");\n\n      var useEditor = editor || getEditor(activeRow, activeCell);\n\n      // don't clear the cell if a custom editor is passed through\n      if (!editor && !useEditor.suppressClearOnEdit) {\n        activeCellNode.innerHTML = \"\";\n      }\n\n      currentEditor = new useEditor({\n        grid: self,\n        gridPosition: absBox($container[0]),\n        position: absBox(activeCellNode),\n        container: activeCellNode,\n        column: columnDef,\n        item: item || {},\n        event: e,\n        commitChanges: commitEditAndSetFocus,\n        cancelChanges: cancelEditAndSetFocus\n      });\n\n      if (item) {\n        currentEditor.loadValue(item);\n        if (preClickModeOn && currentEditor.preClick) {\n          currentEditor.preClick();\n        }\n      }\n\n      serializedEditorValue = currentEditor.serializeValue();\n\n      if (currentEditor.position) {\n        handleActiveCellPositionChange();\n      }\n    }\n\n    function commitEditAndSetFocus() {\n      // if the commit fails, it would do so due to a validation error\n      // if so, do not steal the focus from the editor\n      if (getEditorLock().commitCurrentEdit()) {\n        setFocus();\n        if (options.autoEdit) {\n          navigateDown();\n        }\n      }\n    }\n\n    function cancelEditAndSetFocus() {\n      if (getEditorLock().cancelCurrentEdit()) {\n        setFocus();\n      }\n    }\n\n    function absBox(elem) {\n      var box = {\n        top: elem.offsetTop,\n        left: elem.offsetLeft,\n        bottom: 0,\n        right: 0,\n        width: $(elem).outerWidth(),\n        height: $(elem).outerHeight(),\n        visible: true};\n      box.bottom = box.top + box.height;\n      box.right = box.left + box.width;\n\n      // walk up the tree\n      var offsetParent = elem.offsetParent;\n      while ((elem = elem.parentNode) != document.body) {\n        if (elem == null) break;\n\n        if (box.visible && elem.scrollHeight != elem.offsetHeight && $(elem).css(\"overflowY\") != \"visible\") {\n          box.visible = box.bottom > elem.scrollTop && box.top < elem.scrollTop + elem.clientHeight;\n        }\n\n        if (box.visible && elem.scrollWidth != elem.offsetWidth && $(elem).css(\"overflowX\") != \"visible\") {\n          box.visible = box.right > elem.scrollLeft && box.left < elem.scrollLeft + elem.clientWidth;\n        }\n\n        box.left -= elem.scrollLeft;\n        box.top -= elem.scrollTop;\n\n        if (elem === offsetParent) {\n          box.left += elem.offsetLeft;\n          box.top += elem.offsetTop;\n          offsetParent = elem.offsetParent;\n        }\n\n        box.bottom = box.top + box.height;\n        box.right = box.left + box.width;\n      }\n\n      return box;\n    }\n\n    function getActiveCellPosition() {\n      return absBox(activeCellNode);\n    }\n\n    function getGridPosition() {\n      return absBox($container[0])\n    }\n\n    function handleActiveCellPositionChange() {\n      if (!activeCellNode) {\n        return;\n      }\n\n      trigger(self.onActiveCellPositionChanged, {});\n\n      if (currentEditor) {\n        var cellBox = getActiveCellPosition();\n        if (currentEditor.show && currentEditor.hide) {\n          if (!cellBox.visible) {\n            currentEditor.hide();\n          } else {\n            currentEditor.show();\n          }\n        }\n\n        if (currentEditor.position) {\n          currentEditor.position(cellBox);\n        }\n      }\n    }\n\n    function getCellEditor() {\n      return currentEditor;\n    }\n\n    function getActiveCell() {\n      if (!activeCellNode) {\n        return null;\n      } else {\n        return {row: activeRow, cell: activeCell};\n      }\n    }\n\n    function getActiveCellNode() {\n      return activeCellNode;\n    }\n\n    function scrollRowIntoView(row, doPaging) {\n      var rowAtTop = row * options.rowHeight;\n      var rowAtBottom = (row + 1) * options.rowHeight - viewportH + (viewportHasHScroll ? scrollbarDimensions.height : 0);\n\n      // need to page down?\n      if ((row + 1) * options.rowHeight > scrollTop + viewportH + offset) {\n        scrollTo(doPaging ? rowAtTop : rowAtBottom);\n        render();\n      }\n      // or page up?\n      else if (row * options.rowHeight < scrollTop + offset) {\n        scrollTo(doPaging ? rowAtBottom : rowAtTop);\n        render();\n      }\n    }\n\n    function scrollRowToTop(row) {\n      scrollTo(row * options.rowHeight);\n      render();\n    }\n\n    function scrollPage(dir) {\n      var deltaRows = dir * numVisibleRows;\n      scrollTo((getRowFromPosition(scrollTop) + deltaRows) * options.rowHeight);\n      render();\n\n      if (options.enableCellNavigation && activeRow != null) {\n        var row = activeRow + deltaRows;\n        var dataLengthIncludingAddNew = getDataLengthIncludingAddNew();\n        if (row >= dataLengthIncludingAddNew) {\n          row = dataLengthIncludingAddNew - 1;\n        }\n        if (row < 0) {\n          row = 0;\n        }\n\n        var cell = 0, prevCell = null;\n        var prevActivePosX = activePosX;\n        while (cell <= activePosX) {\n          if (canCellBeActive(row, cell)) {\n            prevCell = cell;\n          }\n          cell += getColspan(row, cell);\n        }\n\n        if (prevCell !== null) {\n          setActiveCellInternal(getCellNode(row, prevCell));\n          activePosX = prevActivePosX;\n        } else {\n          resetActiveCell();\n        }\n      }\n    }\n\n    function navigatePageDown() {\n      scrollPage(1);\n    }\n\n    function navigatePageUp() {\n       scrollPage(-1);\n    }\n\n    function navigateTop() {\n       navigateToRow(0);\n    }\n\n    function navigateBottom() {\n       navigateToRow(getDataLength()-1);\n    }\n\n    function navigateToRow(row) {\n       var num_rows = getDataLength();\n       if (!num_rows) return true;\n\n       if (row < 0) row = 0;\n       else if (row >= num_rows) row = num_rows - 1;\n\n       scrollCellIntoView(row, 0, true);\n       if (options.enableCellNavigation && activeRow != null) {\n          var cell = 0, prevCell = null;\n          var prevActivePosX = activePosX;\n          while (cell <= activePosX) {\n             if (canCellBeActive(row, cell)) {\n                prevCell = cell;\n             }\n             cell += getColspan(row, cell);\n          }\n\n          if (prevCell !== null) {\n             setActiveCellInternal(getCellNode(row, prevCell));\n             activePosX = prevActivePosX;\n          } else {\n             resetActiveCell();\n          }\n       }\n       return true;\n    }\n\n    function getColspan(row, cell) {\n      var metadata = data.getItemMetadata && data.getItemMetadata(row);\n      if (!metadata || !metadata.columns) {\n        return 1;\n      }\n\n      var columnData = metadata.columns[columns[cell].id] || metadata.columns[cell];\n      var colspan = (columnData && columnData.colspan);\n      if (colspan === \"*\") {\n        colspan = columns.length - cell;\n      } else {\n        colspan = colspan || 1;\n      }\n\n      return colspan;\n    }\n\n    function findFirstFocusableCell(row) {\n      var cell = 0;\n      while (cell < columns.length) {\n        if (canCellBeActive(row, cell)) {\n          return cell;\n        }\n        cell += getColspan(row, cell);\n      }\n      return null;\n    }\n\n    function findLastFocusableCell(row) {\n      var cell = 0;\n      var lastFocusableCell = null;\n      while (cell < columns.length) {\n        if (canCellBeActive(row, cell)) {\n          lastFocusableCell = cell;\n        }\n        cell += getColspan(row, cell);\n      }\n      return lastFocusableCell;\n    }\n\n    function gotoRight(row, cell, posX) {\n      if (cell >= columns.length) {\n        return null;\n      }\n\n      do {\n        cell += getColspan(row, cell);\n      }\n      while (cell < columns.length && !canCellBeActive(row, cell));\n\n      if (cell < columns.length) {\n        return {\n          \"row\": row,\n          \"cell\": cell,\n          \"posX\": cell\n        };\n      }\n      return null;\n    }\n\n    function gotoLeft(row, cell, posX) {\n      if (cell <= 0) {\n        return null;\n      }\n\n      var firstFocusableCell = findFirstFocusableCell(row);\n      if (firstFocusableCell === null || firstFocusableCell >= cell) {\n        return null;\n      }\n\n      var prev = {\n        \"row\": row,\n        \"cell\": firstFocusableCell,\n        \"posX\": firstFocusableCell\n      };\n      var pos;\n      while (true) {\n        pos = gotoRight(prev.row, prev.cell, prev.posX);\n        if (!pos) {\n          return null;\n        }\n        if (pos.cell >= cell) {\n          return prev;\n        }\n        prev = pos;\n      }\n    }\n\n    function gotoDown(row, cell, posX) {\n      var prevCell;\n      var dataLengthIncludingAddNew = getDataLengthIncludingAddNew();\n      while (true) {\n        if (++row >= dataLengthIncludingAddNew) {\n          return null;\n        }\n\n        prevCell = cell = 0;\n        while (cell <= posX) {\n          prevCell = cell;\n          cell += getColspan(row, cell);\n        }\n\n        if (canCellBeActive(row, prevCell)) {\n          return {\n            \"row\": row,\n            \"cell\": prevCell,\n            \"posX\": posX\n          };\n        }\n      }\n    }\n\n    function gotoUp(row, cell, posX) {\n      var prevCell;\n      while (true) {\n        if (--row < 0) {\n          return null;\n        }\n\n        prevCell = cell = 0;\n        while (cell <= posX) {\n          prevCell = cell;\n          cell += getColspan(row, cell);\n        }\n\n        if (canCellBeActive(row, prevCell)) {\n          return {\n            \"row\": row,\n            \"cell\": prevCell,\n            \"posX\": posX\n          };\n        }\n      }\n    }\n\n    function gotoNext(row, cell, posX) {\n      if (row == null && cell == null) {\n        row = cell = posX = 0;\n        if (canCellBeActive(row, cell)) {\n          return {\n            \"row\": row,\n            \"cell\": cell,\n            \"posX\": cell\n          };\n        }\n      }\n\n      var pos = gotoRight(row, cell, posX);\n      if (pos) {\n        return pos;\n      }\n\n      var firstFocusableCell = null;\n      var dataLengthIncludingAddNew = getDataLengthIncludingAddNew();\n\n      // if at last row, cycle through columns rather than get stuck in the last one\n      if (row === dataLengthIncludingAddNew - 1) { row--; }\n\n      while (++row < dataLengthIncludingAddNew) {\n        firstFocusableCell = findFirstFocusableCell(row);\n        if (firstFocusableCell !== null) {\n          return {\n            \"row\": row,\n            \"cell\": firstFocusableCell,\n            \"posX\": firstFocusableCell\n          };\n        }\n      }\n      return null;\n    }\n\n    function gotoPrev(row, cell, posX) {\n      if (row == null && cell == null) {\n        row = getDataLengthIncludingAddNew() - 1;\n        cell = posX = columns.length - 1;\n        if (canCellBeActive(row, cell)) {\n          return {\n            \"row\": row,\n            \"cell\": cell,\n            \"posX\": cell\n          };\n        }\n      }\n\n      var pos;\n      var lastSelectableCell;\n      while (!pos) {\n        pos = gotoLeft(row, cell, posX);\n        if (pos) {\n          break;\n        }\n        if (--row < 0) {\n          return null;\n        }\n\n        cell = 0;\n        lastSelectableCell = findLastFocusableCell(row);\n        if (lastSelectableCell !== null) {\n          pos = {\n            \"row\": row,\n            \"cell\": lastSelectableCell,\n            \"posX\": lastSelectableCell\n          };\n        }\n      }\n      return pos;\n    }\n\n    function gotoRowStart(row, cell, posX) {\n       var newCell = findFirstFocusableCell(row);\n       if (newCell === null) return null;\n\n       return {\n          \"row\": row,\n          \"cell\": newCell,\n          \"posX\": newCell\n       };\n    }\n\n    function gotoRowEnd(row, cell, posX) {\n       var newCell = findLastFocusableCell(row);\n       if (newCell === null) return null;\n\n       return {\n          \"row\": row,\n          \"cell\": newCell,\n          \"posX\": newCell\n       };\n    }\n\n    function navigateRight() {\n      return navigate(\"right\");\n    }\n\n    function navigateLeft() {\n      return navigate(\"left\");\n    }\n\n    function navigateDown() {\n      return navigate(\"down\");\n    }\n\n    function navigateUp() {\n      return navigate(\"up\");\n    }\n\n    function navigateNext() {\n      return navigate(\"next\");\n    }\n\n    function navigatePrev() {\n       return navigate(\"prev\");\n    }\n\n    function navigateRowStart() {\n       return navigate(\"home\");\n    }\n\n    function navigateRowEnd() {\n       return navigate(\"end\");\n    }\n\n    /**\n     * @param {string} dir Navigation direction.\n     * @return {boolean} Whether navigation resulted in a change of active cell.\n     */\n    function navigate(dir) {\n      if (!options.enableCellNavigation) {\n        return false;\n      }\n\n      if (!activeCellNode && dir != \"prev\" && dir != \"next\") {\n        return false;\n      }\n\n      if (!getEditorLock().commitCurrentEdit()) {\n        return true;\n      }\n      setFocus();\n\n      var tabbingDirections = {\n        \"up\": -1,\n        \"down\": 1,\n        \"left\": -1,\n        \"right\": 1,\n        \"prev\": -1,\n        \"next\": 1,\n        \"home\": -1,\n        \"end\": 1\n      };\n      tabbingDirection = tabbingDirections[dir];\n\n      var stepFunctions = {\n        \"up\": gotoUp,\n        \"down\": gotoDown,\n        \"left\": gotoLeft,\n        \"right\": gotoRight,\n        \"prev\": gotoPrev,\n        \"next\": gotoNext,\n        \"home\": gotoRowStart,\n        \"end\": gotoRowEnd\n      };\n      var stepFn = stepFunctions[dir];\n      var pos = stepFn(activeRow, activeCell, activePosX);\n      if (pos) {\n        var isAddNewRow = (pos.row == getDataLength());\n        scrollCellIntoView(pos.row, pos.cell, !isAddNewRow && options.emulatePagingWhenScrolling);\n        setActiveCellInternal(getCellNode(pos.row, pos.cell));\n        activePosX = pos.posX;\n        return true;\n      } else {\n        setActiveCellInternal(getCellNode(activeRow, activeCell));\n        return false;\n      }\n    }\n\n    function getCellNode(row, cell) {\n      if (rowsCache[row]) {\n        ensureCellNodesInRowsCache(row);\n        return rowsCache[row].cellNodesByColumnIdx[cell];\n      }\n      return null;\n    }\n\n    function setActiveCell(row, cell, opt_editMode, preClickModeOn, suppressActiveCellChangedEvent) {\n      if (!initialized) { return; }\n      if (row > getDataLength() || row < 0 || cell >= columns.length || cell < 0) {\n        return;\n      }\n\n      if (!options.enableCellNavigation) {\n        return;\n      }\n\n      scrollCellIntoView(row, cell, false);\n      setActiveCellInternal(getCellNode(row, cell), opt_editMode, preClickModeOn, suppressActiveCellChangedEvent);\n    }\n\n    function canCellBeActive(row, cell) {\n      if (!options.enableCellNavigation || row >= getDataLengthIncludingAddNew() ||\n          row < 0 || cell >= columns.length || cell < 0) {\n        return false;\n      }\n\n      var rowMetadata = data.getItemMetadata && data.getItemMetadata(row);\n      if (rowMetadata && typeof rowMetadata.focusable !== \"undefined\") {\n        return !!rowMetadata.focusable;\n      }\n\n      var columnMetadata = rowMetadata && rowMetadata.columns;\n      if (columnMetadata && columnMetadata[columns[cell].id] && typeof columnMetadata[columns[cell].id].focusable !== \"undefined\") {\n        return !!columnMetadata[columns[cell].id].focusable;\n      }\n      if (columnMetadata && columnMetadata[cell] && typeof columnMetadata[cell].focusable !== \"undefined\") {\n        return !!columnMetadata[cell].focusable;\n      }\n\n      return !!columns[cell].focusable;\n    }\n\n    function canCellBeSelected(row, cell) {\n      if (row >= getDataLength() || row < 0 || cell >= columns.length || cell < 0) {\n        return false;\n      }\n\n      var rowMetadata = data.getItemMetadata && data.getItemMetadata(row);\n      if (rowMetadata && typeof rowMetadata.selectable !== \"undefined\") {\n        return !!rowMetadata.selectable;\n      }\n\n      var columnMetadata = rowMetadata && rowMetadata.columns && (rowMetadata.columns[columns[cell].id] || rowMetadata.columns[cell]);\n      if (columnMetadata && typeof columnMetadata.selectable !== \"undefined\") {\n        return !!columnMetadata.selectable;\n      }\n\n      return !!columns[cell].selectable;\n    }\n\n    function gotoCell(row, cell, forceEdit, e) {\n      if (!initialized) { return; }\n      if (!canCellBeActive(row, cell)) {\n        return;\n      }\n\n      if (!getEditorLock().commitCurrentEdit()) {\n        return;\n      }\n\n      scrollCellIntoView(row, cell, false);\n\n      var newCell = getCellNode(row, cell);\n\n      // if selecting the 'add new' row, start editing right away\n      setActiveCellInternal(newCell, (forceEdit || (row === getDataLength()) || options.autoEdit), null, options.editable, e);\n\n      // if no editor was created, set the focus back on the grid\n      if (!currentEditor) {\n        setFocus();\n      }\n    }\n\n\n    //////////////////////////////////////////////////////////////////////////////////////////////\n    // IEditor implementation for the editor lock\n\n    function commitCurrentEdit() {\n      var item = getDataItem(activeRow);\n      var column = columns[activeCell];\n\n      if (currentEditor) {\n        if (currentEditor.isValueChanged()) {\n          var validationResults = currentEditor.validate();\n\n          if (validationResults.valid) {\n            if (activeRow < getDataLength()) {\n              var editCommand = {\n                row: activeRow,\n                cell: activeCell,\n                editor: currentEditor,\n                serializedValue: currentEditor.serializeValue(),\n                prevSerializedValue: serializedEditorValue,\n                execute: function () {\n                  this.editor.applyValue(item, this.serializedValue);\n                  updateRow(this.row);\n                  trigger(self.onCellChange, {\n                    row: this.row,\n                    cell: this.cell,\n                    item: item\n                  });\n                },\n                undo: function () {\n                  this.editor.applyValue(item, this.prevSerializedValue);\n                  updateRow(this.row);\n                  trigger(self.onCellChange, {\n                    row: this.row,\n                    cell: this.cell,\n                    item: item\n                  });\n                }\n              };\n\n              if (options.editCommandHandler) {\n                makeActiveCellNormal();\n                options.editCommandHandler(item, column, editCommand);\n              } else {\n                editCommand.execute();\n                makeActiveCellNormal();\n              }\n\n            } else {\n              var newItem = {};\n              currentEditor.applyValue(newItem, currentEditor.serializeValue());\n              makeActiveCellNormal();\n              trigger(self.onAddNewRow, {item: newItem, column: column});\n            }\n\n            // check whether the lock has been re-acquired by event handlers\n            return !getEditorLock().isActive();\n          } else {\n            // Re-add the CSS class to trigger transitions, if any.\n            $(activeCellNode).removeClass(\"invalid\");\n            $(activeCellNode).width();  // force layout\n            $(activeCellNode).addClass(\"invalid\");\n\n            trigger(self.onValidationError, {\n              editor: currentEditor,\n              cellNode: activeCellNode,\n              validationResults: validationResults,\n              row: activeRow,\n              cell: activeCell,\n              column: column\n            });\n\n            currentEditor.focus();\n            return false;\n          }\n        }\n\n        makeActiveCellNormal();\n      }\n      return true;\n    }\n\n    function cancelCurrentEdit() {\n      makeActiveCellNormal();\n      return true;\n    }\n\n    function rowsToRanges(rows) {\n      var ranges = [];\n      var lastCell = columns.length - 1;\n      for (var i = 0; i < rows.length; i++) {\n        ranges.push(new Slick.Range(rows[i], 0, rows[i], lastCell));\n      }\n      return ranges;\n    }\n\n    function getSelectedRows() {\n      if (!selectionModel) {\n        throw new Error(\"Selection model is not set\");\n      }\n      return selectedRows;\n    }\n\n    function setSelectedRows(rows) {\n      if (!selectionModel) {\n        throw new Error(\"Selection model is not set\");\n      }\n      if (self && self.getEditorLock && !self.getEditorLock().isActive()) {\n        selectionModel.setSelectedRanges(rowsToRanges(rows));\n      }\n    }\n\n\n    //////////////////////////////////////////////////////////////////////////////////////////////\n    // Debug\n\n    this.debug = function () {\n      var s = \"\";\n\n      s += (\"\\n\" + \"counter_rows_rendered:  \" + counter_rows_rendered);\n      s += (\"\\n\" + \"counter_rows_removed:  \" + counter_rows_removed);\n      s += (\"\\n\" + \"renderedRows:  \" + renderedRows);\n      s += (\"\\n\" + \"numVisibleRows:  \" + numVisibleRows);\n      s += (\"\\n\" + \"maxSupportedCssHeight:  \" + maxSupportedCssHeight);\n      s += (\"\\n\" + \"n(umber of pages):  \" + n);\n      s += (\"\\n\" + \"(current) page:  \" + page);\n      s += (\"\\n\" + \"page height (ph):  \" + ph);\n      s += (\"\\n\" + \"vScrollDir:  \" + vScrollDir);\n\n      alert(s);\n    };\n\n    // a debug helper to be able to access private members\n    this.eval = function (expr) {\n      return eval(expr);\n    };\n\n    //////////////////////////////////////////////////////////////////////////////////////////////\n    // Public API\n\n    $.extend(this, {\n      \"slickGridVersion\": \"2.3.23\",\n\n      // Events\n      \"onScroll\": new Slick.Event(),\n      \"onSort\": new Slick.Event(),\n      \"onHeaderMouseEnter\": new Slick.Event(),\n      \"onHeaderMouseLeave\": new Slick.Event(),\n      \"onHeaderContextMenu\": new Slick.Event(),\n      \"onHeaderClick\": new Slick.Event(),\n      \"onHeaderCellRendered\": new Slick.Event(),\n      \"onBeforeHeaderCellDestroy\": new Slick.Event(),\n      \"onHeaderRowCellRendered\": new Slick.Event(),\n      \"onFooterRowCellRendered\": new Slick.Event(),\n      \"onBeforeHeaderRowCellDestroy\": new Slick.Event(),\n      \"onBeforeFooterRowCellDestroy\": new Slick.Event(),\n      \"onMouseEnter\": new Slick.Event(),\n      \"onMouseLeave\": new Slick.Event(),\n      \"onClick\": new Slick.Event(),\n      \"onDblClick\": new Slick.Event(),\n      \"onContextMenu\": new Slick.Event(),\n      \"onKeyDown\": new Slick.Event(),\n      \"onAddNewRow\": new Slick.Event(),\n      \"onBeforeAppendCell\": new Slick.Event(),\n      \"onValidationError\": new Slick.Event(),\n      \"onViewportChanged\": new Slick.Event(),\n      \"onColumnsReordered\": new Slick.Event(),\n      \"onColumnsResized\": new Slick.Event(),\n      \"onCellChange\": new Slick.Event(),\n      \"onBeforeEditCell\": new Slick.Event(),\n      \"onBeforeCellEditorDestroy\": new Slick.Event(),\n      \"onBeforeDestroy\": new Slick.Event(),\n      \"onActiveCellChanged\": new Slick.Event(),\n      \"onActiveCellPositionChanged\": new Slick.Event(),\n      \"onDragInit\": new Slick.Event(),\n      \"onDragStart\": new Slick.Event(),\n      \"onDrag\": new Slick.Event(),\n      \"onDragEnd\": new Slick.Event(),\n      \"onSelectedRowsChanged\": new Slick.Event(),\n      \"onCellCssStylesChanged\": new Slick.Event(),\n      \"onAutosizeColumns\": new Slick.Event(),\n      \"onRendered\": new Slick.Event(),\n\n      // Methods\n      \"registerPlugin\": registerPlugin,\n      \"unregisterPlugin\": unregisterPlugin,\n      \"getColumns\": getColumns,\n      \"setColumns\": setColumns,\n      \"getColumnIndex\": getColumnIndex,\n      \"updateColumnHeader\": updateColumnHeader,\n      \"setSortColumn\": setSortColumn,\n      \"setSortColumns\": setSortColumns,\n      \"getSortColumns\": getSortColumns,\n      \"autosizeColumns\": autosizeColumns,\n      \"getOptions\": getOptions,\n      \"setOptions\": setOptions,\n      \"getData\": getData,\n      \"getDataLength\": getDataLength,\n      \"getDataItem\": getDataItem,\n      \"setData\": setData,\n      \"getSelectionModel\": getSelectionModel,\n      \"setSelectionModel\": setSelectionModel,\n      \"getSelectedRows\": getSelectedRows,\n      \"setSelectedRows\": setSelectedRows,\n      \"getContainerNode\": getContainerNode,\n      \"updatePagingStatusFromView\": updatePagingStatusFromView,\n\n      \"render\": render,\n      \"invalidate\": invalidate,\n      \"invalidateRow\": invalidateRow,\n      \"invalidateRows\": invalidateRows,\n      \"invalidateAllRows\": invalidateAllRows,\n      \"updateCell\": updateCell,\n      \"updateRow\": updateRow,\n      \"getViewport\": getVisibleRange,\n      \"getRenderedRange\": getRenderedRange,\n      \"resizeCanvas\": resizeCanvas,\n      \"updateRowCount\": updateRowCount,\n      \"scrollRowIntoView\": scrollRowIntoView,\n      \"scrollRowToTop\": scrollRowToTop,\n      \"scrollCellIntoView\": scrollCellIntoView,\n      \"scrollColumnIntoView\": scrollColumnIntoView,\n      \"getCanvasNode\": getCanvasNode,\n      \"getUID\": getUID,\n      \"getHeaderColumnWidthDiff\": getHeaderColumnWidthDiff,\n      \"getScrollbarDimensions\": getScrollbarDimensions,\n      \"getHeadersWidth\": getHeadersWidth,\n      \"getCanvasWidth\": getCanvasWidth,\n      \"focus\": setFocus,\n      \"scrollTo\": scrollTo,\n      \n      \"getCellFromPoint\": getCellFromPoint,\n      \"getCellFromEvent\": getCellFromEvent,\n      \"getActiveCell\": getActiveCell,\n      \"setActiveCell\": setActiveCell,\n      \"getActiveCellNode\": getActiveCellNode,\n      \"getActiveCellPosition\": getActiveCellPosition,\n      \"resetActiveCell\": resetActiveCell,\n      \"editActiveCell\": makeActiveCellEditable,\n      \"getCellEditor\": getCellEditor,\n      \"getCellNode\": getCellNode,\n      \"getCellNodeBox\": getCellNodeBox,\n      \"canCellBeSelected\": canCellBeSelected,\n      \"canCellBeActive\": canCellBeActive,\n      \"navigatePrev\": navigatePrev,\n      \"navigateNext\": navigateNext,\n      \"navigateUp\": navigateUp,\n      \"navigateDown\": navigateDown,\n      \"navigateLeft\": navigateLeft,\n      \"navigateRight\": navigateRight,\n      \"navigatePageUp\": navigatePageUp,\n      \"navigatePageDown\": navigatePageDown,\n      \"navigateTop\": navigateTop,\n      \"navigateBottom\": navigateBottom,\n      \"navigateRowStart\": navigateRowStart,\n      \"navigateRowEnd\": navigateRowEnd,\n      \"gotoCell\": gotoCell,\n      \"getTopPanel\": getTopPanel,\n      \"setTopPanelVisibility\": setTopPanelVisibility,\n      \"getPreHeaderPanel\": getPreHeaderPanel,\n      \"setPreHeaderPanelVisibility\": setPreHeaderPanelVisibility,\n      \"getHeader\": getHeader,\n      \"getHeaderColumn\": getHeaderColumn,\n      \"setHeaderRowVisibility\": setHeaderRowVisibility,\n      \"getHeaderRow\": getHeaderRow,\n      \"getHeaderRowColumn\": getHeaderRowColumn,\n      \"setFooterRowVisibility\": setFooterRowVisibility,\n      \"getFooterRow\": getFooterRow,\n      \"getFooterRowColumn\": getFooterRowColumn,\n      \"getGridPosition\": getGridPosition,\n      \"flashCell\": flashCell,\n      \"addCellCssStyles\": addCellCssStyles,\n      \"setCellCssStyles\": setCellCssStyles,\n      \"removeCellCssStyles\": removeCellCssStyles,\n      \"getCellCssStyles\": getCellCssStyles,\n\n      \"init\": finishInitialization,\n      \"destroy\": destroy,\n\n      // IEditor implementation\n      \"getEditorLock\": getEditorLock,\n      \"getEditController\": getEditController\n    });\n\n    init();\n  }\n\n  module.exports = {\n    Grid: SlickGrid\n  };\n"]},"metadata":{},"sourceType":"script"}