{"ast":null,"code":"import { Annotation, AnnotationView } from \"./annotation\";\nimport { Signal0 } from \"../../core/signaling\";\nimport * as p from \"../../core/properties\";\nexport class PolyAnnotationView extends AnnotationView {\n  connect_signals() {\n    super.connect_signals(); // need to respond to either normal BB change events or silent\n    // \"data only updates\" that tools might want to use\n\n    this.connect(this.model.change, () => this.plot_view.request_render());\n    this.connect(this.model.data_update, () => this.plot_view.request_render());\n  }\n\n  render() {\n    if (!this.model.visible) return;\n    const {\n      xs,\n      ys\n    } = this.model;\n    if (xs.length != ys.length) return;\n    if (xs.length < 3 || ys.length < 3) return;\n    const {\n      frame\n    } = this.plot_view;\n    const {\n      ctx\n    } = this.plot_view.canvas_view;\n\n    for (let i = 0, end = xs.length; i < end; i++) {\n      let sx;\n      if (this.model.xs_units == 'screen') sx = this.model.screen ? xs[i] : frame.xview.compute(xs[i]);else throw new Error(\"not implemented\");\n      let sy;\n      if (this.model.ys_units == 'screen') sy = this.model.screen ? ys[i] : frame.yview.compute(ys[i]);else throw new Error(\"not implemented\");\n\n      if (i == 0) {\n        ctx.beginPath();\n        ctx.moveTo(sx, sy);\n      } else {\n        ctx.lineTo(sx, sy);\n      }\n    }\n\n    ctx.closePath();\n\n    if (this.visuals.line.doit) {\n      this.visuals.line.set_value(ctx);\n      ctx.stroke();\n    }\n\n    if (this.visuals.fill.doit) {\n      this.visuals.fill.set_value(ctx);\n      ctx.fill();\n    }\n  }\n\n}\nPolyAnnotationView.__name__ = \"PolyAnnotationView\";\nexport class PolyAnnotation extends Annotation {\n  constructor(attrs) {\n    super(attrs);\n  }\n\n  static init_PolyAnnotation() {\n    this.prototype.default_view = PolyAnnotationView;\n    this.mixins(['line', 'fill']);\n    this.define({\n      xs: [p.Array, []],\n      xs_units: [p.SpatialUnits, 'data'],\n      ys: [p.Array, []],\n      ys_units: [p.SpatialUnits, 'data'],\n      x_range_name: [p.String, 'default'],\n      y_range_name: [p.String, 'default']\n    });\n    this.internal({\n      screen: [p.Boolean, false]\n    });\n    this.override({\n      fill_color: \"#fff9ba\",\n      fill_alpha: 0.4,\n      line_color: \"#cccccc\",\n      line_alpha: 0.3\n    });\n  }\n\n  initialize() {\n    super.initialize();\n    this.data_update = new Signal0(this, \"data_update\");\n  }\n\n  update({\n    xs,\n    ys\n  }) {\n    this.setv({\n      xs,\n      ys,\n      screen: true\n    }, {\n      silent: true\n    });\n    this.data_update.emit();\n  }\n\n}\nPolyAnnotation.__name__ = \"PolyAnnotation\";\nPolyAnnotation.init_PolyAnnotation();","map":{"version":3,"sources":["/Users/gen/Desktop/defund_to_refund/node_modules/@bokeh/bokehjs/build/js/lib/models/annotations/poly_annotation.js"],"names":["Annotation","AnnotationView","Signal0","p","PolyAnnotationView","connect_signals","connect","model","change","plot_view","request_render","data_update","render","visible","xs","ys","length","frame","ctx","canvas_view","i","end","sx","xs_units","screen","xview","compute","Error","sy","ys_units","yview","beginPath","moveTo","lineTo","closePath","visuals","line","doit","set_value","stroke","fill","__name__","PolyAnnotation","constructor","attrs","init_PolyAnnotation","prototype","default_view","mixins","define","Array","SpatialUnits","x_range_name","String","y_range_name","internal","Boolean","override","fill_color","fill_alpha","line_color","line_alpha","initialize","update","setv","silent","emit"],"mappings":"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","sourcesContent":["import { Annotation, AnnotationView } from \"./annotation\";\nimport { Signal0 } from \"../../core/signaling\";\nimport * as p from \"../../core/properties\";\nexport class PolyAnnotationView extends AnnotationView {\n    connect_signals() {\n        super.connect_signals();\n        // need to respond to either normal BB change events or silent\n        // \"data only updates\" that tools might want to use\n        this.connect(this.model.change, () => this.plot_view.request_render());\n        this.connect(this.model.data_update, () => this.plot_view.request_render());\n    }\n    render() {\n        if (!this.model.visible)\n            return;\n        const { xs, ys } = this.model;\n        if (xs.length != ys.length)\n            return;\n        if (xs.length < 3 || ys.length < 3)\n            return;\n        const { frame } = this.plot_view;\n        const { ctx } = this.plot_view.canvas_view;\n        for (let i = 0, end = xs.length; i < end; i++) {\n            let sx;\n            if (this.model.xs_units == 'screen')\n                sx = this.model.screen ? xs[i] : frame.xview.compute(xs[i]);\n            else\n                throw new Error(\"not implemented\");\n            let sy;\n            if (this.model.ys_units == 'screen')\n                sy = this.model.screen ? ys[i] : frame.yview.compute(ys[i]);\n            else\n                throw new Error(\"not implemented\");\n            if (i == 0) {\n                ctx.beginPath();\n                ctx.moveTo(sx, sy);\n            }\n            else {\n                ctx.lineTo(sx, sy);\n            }\n        }\n        ctx.closePath();\n        if (this.visuals.line.doit) {\n            this.visuals.line.set_value(ctx);\n            ctx.stroke();\n        }\n        if (this.visuals.fill.doit) {\n            this.visuals.fill.set_value(ctx);\n            ctx.fill();\n        }\n    }\n}\nPolyAnnotationView.__name__ = \"PolyAnnotationView\";\nexport class PolyAnnotation extends Annotation {\n    constructor(attrs) {\n        super(attrs);\n    }\n    static init_PolyAnnotation() {\n        this.prototype.default_view = PolyAnnotationView;\n        this.mixins(['line', 'fill']);\n        this.define({\n            xs: [p.Array, []],\n            xs_units: [p.SpatialUnits, 'data'],\n            ys: [p.Array, []],\n            ys_units: [p.SpatialUnits, 'data'],\n            x_range_name: [p.String, 'default'],\n            y_range_name: [p.String, 'default'],\n        });\n        this.internal({\n            screen: [p.Boolean, false],\n        });\n        this.override({\n            fill_color: \"#fff9ba\",\n            fill_alpha: 0.4,\n            line_color: \"#cccccc\",\n            line_alpha: 0.3,\n        });\n    }\n    initialize() {\n        super.initialize();\n        this.data_update = new Signal0(this, \"data_update\");\n    }\n    update({ xs, ys }) {\n        this.setv({ xs, ys, screen: true }, { silent: true });\n        this.data_update.emit();\n    }\n}\nPolyAnnotation.__name__ = \"PolyAnnotation\";\nPolyAnnotation.init_PolyAnnotation();\n//# sourceMappingURL=poly_annotation.js.map"]},"metadata":{},"sourceType":"module"}