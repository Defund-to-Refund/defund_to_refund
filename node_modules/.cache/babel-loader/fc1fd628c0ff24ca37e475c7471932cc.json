{"ast":null,"code":"import { TextAnnotation, TextAnnotationView } from \"./text_annotation\";\nimport { undisplay } from \"../../core/dom\";\nimport * as p from \"../../core/properties\";\nexport class LabelView extends TextAnnotationView {\n  initialize() {\n    super.initialize();\n    this.visuals.warm_cache();\n  }\n\n  _get_size() {\n    const {\n      ctx\n    } = this.plot_view.canvas_view;\n    this.visuals.text.set_value(ctx);\n    const {\n      width,\n      ascent\n    } = ctx.measureText(this.model.text);\n    return {\n      width,\n      height: ascent\n    };\n  }\n\n  render() {\n    if (!this.model.visible && this.model.render_mode == 'css') undisplay(this.el);\n    if (!this.model.visible) return; // Here because AngleSpec does units transform and label doesn't support specs\n\n    let angle;\n\n    switch (this.model.angle_units) {\n      case \"rad\":\n        {\n          angle = -this.model.angle;\n          break;\n        }\n\n      case \"deg\":\n        {\n          angle = -this.model.angle * Math.PI / 180.0;\n          break;\n        }\n    }\n\n    const panel = this.panel != null ? this.panel : this.plot_view.frame;\n    const xscale = this.plot_view.frame.xscales[this.model.x_range_name];\n    const yscale = this.plot_view.frame.yscales[this.model.y_range_name];\n    let sx = this.model.x_units == \"data\" ? xscale.compute(this.model.x) : panel.xview.compute(this.model.x);\n    let sy = this.model.y_units == \"data\" ? yscale.compute(this.model.y) : panel.yview.compute(this.model.y);\n    sx += this.model.x_offset;\n    sy -= this.model.y_offset;\n    const draw = this.model.render_mode == 'canvas' ? this._canvas_text.bind(this) : this._css_text.bind(this);\n    draw(this.plot_view.canvas_view.ctx, this.model.text, sx, sy, angle);\n  }\n\n}\nLabelView.__name__ = \"LabelView\";\nexport class Label extends TextAnnotation {\n  constructor(attrs) {\n    super(attrs);\n  }\n\n  static init_Label() {\n    this.prototype.default_view = LabelView;\n    this.mixins(['text', 'line:border_', 'fill:background_']);\n    this.define({\n      x: [p.Number],\n      x_units: [p.SpatialUnits, 'data'],\n      y: [p.Number],\n      y_units: [p.SpatialUnits, 'data'],\n      text: [p.String],\n      angle: [p.Angle, 0],\n      angle_units: [p.AngleUnits, 'rad'],\n      x_offset: [p.Number, 0],\n      y_offset: [p.Number, 0],\n      x_range_name: [p.String, 'default'],\n      y_range_name: [p.String, 'default']\n    });\n    this.override({\n      background_fill_color: null,\n      border_line_color: null\n    });\n  }\n\n}\nLabel.__name__ = \"Label\";\nLabel.init_Label();","map":{"version":3,"sources":["/Users/gen/Desktop/defund_to_refund/node_modules/@bokeh/bokehjs/build/js/lib/models/annotations/label.js"],"names":["TextAnnotation","TextAnnotationView","undisplay","p","LabelView","initialize","visuals","warm_cache","_get_size","ctx","plot_view","canvas_view","text","set_value","width","ascent","measureText","model","height","render","visible","render_mode","el","angle","angle_units","Math","PI","panel","frame","xscale","xscales","x_range_name","yscale","yscales","y_range_name","sx","x_units","compute","x","xview","sy","y_units","y","yview","x_offset","y_offset","draw","_canvas_text","bind","_css_text","__name__","Label","constructor","attrs","init_Label","prototype","default_view","mixins","define","Number","SpatialUnits","String","Angle","AngleUnits","override","background_fill_color","border_line_color"],"mappings":"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","sourcesContent":["import { TextAnnotation, TextAnnotationView } from \"./text_annotation\";\nimport { undisplay } from \"../../core/dom\";\nimport * as p from \"../../core/properties\";\nexport class LabelView extends TextAnnotationView {\n    initialize() {\n        super.initialize();\n        this.visuals.warm_cache();\n    }\n    _get_size() {\n        const { ctx } = this.plot_view.canvas_view;\n        this.visuals.text.set_value(ctx);\n        const { width, ascent } = ctx.measureText(this.model.text);\n        return { width, height: ascent };\n    }\n    render() {\n        if (!this.model.visible && this.model.render_mode == 'css')\n            undisplay(this.el);\n        if (!this.model.visible)\n            return;\n        // Here because AngleSpec does units transform and label doesn't support specs\n        let angle;\n        switch (this.model.angle_units) {\n            case \"rad\": {\n                angle = -this.model.angle;\n                break;\n            }\n            case \"deg\": {\n                angle = (-this.model.angle * Math.PI) / 180.0;\n                break;\n            }\n        }\n        const panel = this.panel != null ? this.panel : this.plot_view.frame;\n        const xscale = this.plot_view.frame.xscales[this.model.x_range_name];\n        const yscale = this.plot_view.frame.yscales[this.model.y_range_name];\n        let sx = this.model.x_units == \"data\" ? xscale.compute(this.model.x) : panel.xview.compute(this.model.x);\n        let sy = this.model.y_units == \"data\" ? yscale.compute(this.model.y) : panel.yview.compute(this.model.y);\n        sx += this.model.x_offset;\n        sy -= this.model.y_offset;\n        const draw = this.model.render_mode == 'canvas' ? this._canvas_text.bind(this) : this._css_text.bind(this);\n        draw(this.plot_view.canvas_view.ctx, this.model.text, sx, sy, angle);\n    }\n}\nLabelView.__name__ = \"LabelView\";\nexport class Label extends TextAnnotation {\n    constructor(attrs) {\n        super(attrs);\n    }\n    static init_Label() {\n        this.prototype.default_view = LabelView;\n        this.mixins(['text', 'line:border_', 'fill:background_']);\n        this.define({\n            x: [p.Number],\n            x_units: [p.SpatialUnits, 'data'],\n            y: [p.Number],\n            y_units: [p.SpatialUnits, 'data'],\n            text: [p.String],\n            angle: [p.Angle, 0],\n            angle_units: [p.AngleUnits, 'rad'],\n            x_offset: [p.Number, 0],\n            y_offset: [p.Number, 0],\n            x_range_name: [p.String, 'default'],\n            y_range_name: [p.String, 'default'],\n        });\n        this.override({\n            background_fill_color: null,\n            border_line_color: null,\n        });\n    }\n}\nLabel.__name__ = \"Label\";\nLabel.init_Label();\n//# sourceMappingURL=label.js.map"]},"metadata":{},"sourceType":"module"}